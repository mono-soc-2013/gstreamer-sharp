<?xml version="1.0" encoding="UTF-8"?>
<api parser_version="3">
  <namespace name="Gst" library="gstreamer-1.0">
    <enum name="BufferingMode" cname="GstBufferingMode" type="enum" gtype="gst_buffering_mode_get_type">
      <member cname="GST_BUFFERING_STREAM" name="Stream" value="0"/>
      <member cname="GST_BUFFERING_DOWNLOAD" name="Download" value="1"/>
      <member cname="GST_BUFFERING_TIMESHIFT" name="Timeshift" value="2"/>
      <member cname="GST_BUFFERING_LIVE" name="Live" value="3"/>
    </enum>
    <enum name="BusSyncReply" cname="GstBusSyncReply" type="enum" gtype="gst_bus_sync_reply_get_type">
      <member cname="GST_BUS_DROP" name="Drop" value="0"/>
      <member cname="GST_BUS_PASS" name="Pass" value="1"/>
      <member cname="GST_BUS_ASYNC" name="Async" value="2"/>
    </enum>
    <enum name="CapsIntersectMode" cname="GstCapsIntersectMode" type="enum" gtype="gst_caps_intersect_mode_get_type">
      <member cname="GST_CAPS_INTERSECT_ZIG_ZAG" name="ZigZag" value="0"/>
      <member cname="GST_CAPS_INTERSECT_FIRST" name="First" value="1"/>
    </enum>
    <enum name="ClockEntryType" cname="GstClockEntryType" type="enum" gtype="gst_clock_entry_type_get_type">
      <member cname="GST_CLOCK_ENTRY_SINGLE" name="Single" value="0"/>
      <member cname="GST_CLOCK_ENTRY_PERIODIC" name="Periodic" value="1"/>
    </enum>
    <enum name="ClockReturn" cname="GstClockReturn" type="enum" gtype="gst_clock_return_get_type">
      <member cname="GST_CLOCK_OK" name="Ok" value="0"/>
      <member cname="GST_CLOCK_EARLY" name="Early" value="1"/>
      <member cname="GST_CLOCK_UNSCHEDULED" name="Unscheduled" value="2"/>
      <member cname="GST_CLOCK_BUSY" name="Busy" value="3"/>
      <member cname="GST_CLOCK_BADTIME" name="Badtime" value="4"/>
      <member cname="GST_CLOCK_ERROR" name="Error" value="5"/>
      <member cname="GST_CLOCK_UNSUPPORTED" name="Unsupported" value="6"/>
      <member cname="GST_CLOCK_DONE" name="Done" value="7"/>
    </enum>
    <enum name="ClockType" cname="GstClockType" type="enum" gtype="gst_clock_type_get_type">
      <member cname="GST_CLOCK_TYPE_REALTIME" name="Realtime" value="0"/>
      <member cname="GST_CLOCK_TYPE_MONOTONIC" name="Monotonic" value="1"/>
      <member cname="GST_CLOCK_TYPE_OTHER" name="Other" value="2"/>
    </enum>
    <enum name="CoreError" cname="GstCoreError" type="enum" gtype="gst_core_error_get_type">
      <member cname="GST_CORE_ERROR_FAILED" name="Failed" value="1"/>
      <member cname="GST_CORE_ERROR_TOO_LAZY" name="TooLazy" value="2"/>
      <member cname="GST_CORE_ERROR_NOT_IMPLEMENTED" name="NotImplemented" value="3"/>
      <member cname="GST_CORE_ERROR_STATE_CHANGE" name="StateChange" value="4"/>
      <member cname="GST_CORE_ERROR_PAD" name="Pad" value="5"/>
      <member cname="GST_CORE_ERROR_THREAD" name="Thread" value="6"/>
      <member cname="GST_CORE_ERROR_NEGOTIATION" name="Negotiation" value="7"/>
      <member cname="GST_CORE_ERROR_EVENT" name="Event" value="8"/>
      <member cname="GST_CORE_ERROR_SEEK" name="Seek" value="9"/>
      <member cname="GST_CORE_ERROR_CAPS" name="Caps" value="10"/>
      <member cname="GST_CORE_ERROR_TAG" name="Tag" value="11"/>
      <member cname="GST_CORE_ERROR_MISSING_PLUGIN" name="MissingPlugin" value="12"/>
      <member cname="GST_CORE_ERROR_CLOCK" name="Clock" value="13"/>
      <member cname="GST_CORE_ERROR_DISABLED" name="Disabled" value="14"/>
      <member cname="GST_CORE_ERROR_NUM_ERRORS" name="NumErrors" value="15"/>
    </enum>
    <enum name="DebugColorFlags" cname="GstDebugColorFlags" type="enum" gtype="gst_debug_color_flags_get_type">
      <member cname="GST_DEBUG_FG_BLACK" name="FgBlack" value="0"/>
      <member cname="GST_DEBUG_BG_BLACK" name="BgBlack" value="0"/>
      <member cname="GST_DEBUG_FG_RED" name="FgRed" value="1"/>
      <member cname="GST_DEBUG_FG_GREEN" name="FgGreen" value="2"/>
      <member cname="GST_DEBUG_FG_YELLOW" name="FgYellow" value="3"/>
      <member cname="GST_DEBUG_FG_BLUE" name="FgBlue" value="4"/>
      <member cname="GST_DEBUG_FG_MAGENTA" name="FgMagenta" value="5"/>
      <member cname="GST_DEBUG_FG_CYAN" name="FgCyan" value="6"/>
      <member cname="GST_DEBUG_FG_WHITE" name="FgWhite" value="7"/>
      <member cname="GST_DEBUG_BG_RED" name="BgRed" value="16"/>
      <member cname="GST_DEBUG_BG_GREEN" name="BgGreen" value="32"/>
      <member cname="GST_DEBUG_BG_YELLOW" name="BgYellow" value="48"/>
      <member cname="GST_DEBUG_BG_BLUE" name="BgBlue" value="64"/>
      <member cname="GST_DEBUG_BG_MAGENTA" name="BgMagenta" value="80"/>
      <member cname="GST_DEBUG_BG_CYAN" name="BgCyan" value="96"/>
      <member cname="GST_DEBUG_BG_WHITE" name="BgWhite" value="112"/>
      <member cname="GST_DEBUG_BOLD" name="Bold" value="256"/>
      <member cname="GST_DEBUG_UNDERLINE" name="Underline" value="512"/>
    </enum>
    <enum name="DebugLevel" cname="GstDebugLevel" type="enum" gtype="gst_debug_level_get_type">
      <member cname="GST_LEVEL_NONE" name="None" value="0"/>
      <member cname="GST_LEVEL_ERROR" name="Error" value="1"/>
      <member cname="GST_LEVEL_WARNING" name="Warning" value="2"/>
      <member cname="GST_LEVEL_FIXME" name="Fixme" value="3"/>
      <member cname="GST_LEVEL_INFO" name="Info" value="4"/>
      <member cname="GST_LEVEL_DEBUG" name="Debug" value="5"/>
      <member cname="GST_LEVEL_LOG" name="Log" value="6"/>
      <member cname="GST_LEVEL_TRACE" name="Trace" value="7"/>
      <member cname="GST_LEVEL_MEMDUMP" name="Memdump" value="9"/>
      <member cname="GST_LEVEL_COUNT" name="Count" value="10"/>
    </enum>
    <enum name="EventType" cname="GstEventType" type="enum" gtype="gst_event_type_get_type">
      <member cname="GST_EVENT_UNKNOWN" name="Unknown" value="0"/>
      <member cname="GST_EVENT_FLUSH_START" name="FlushStart" value="2563"/>
      <member cname="GST_EVENT_FLUSH_STOP" name="FlushStop" value="5127"/>
      <member cname="GST_EVENT_STREAM_START" name="StreamStart" value="10254"/>
      <member cname="GST_EVENT_CAPS" name="Caps" value="12814"/>
      <member cname="GST_EVENT_SEGMENT" name="Segment" value="17934"/>
      <member cname="GST_EVENT_TAG" name="Tag" value="20510"/>
      <member cname="GST_EVENT_BUFFERSIZE" name="Buffersize" value="23054"/>
      <member cname="GST_EVENT_SINK_MESSAGE" name="SinkMessage" value="25630"/>
      <member cname="GST_EVENT_EOS" name="Eos" value="28174"/>
      <member cname="GST_EVENT_TOC" name="Toc" value="30750"/>
      <member cname="GST_EVENT_SEGMENT_DONE" name="SegmentDone" value="38406"/>
      <member cname="GST_EVENT_GAP" name="Gap" value="40966"/>
      <member cname="GST_EVENT_QOS" name="Qos" value="48641"/>
      <member cname="GST_EVENT_SEEK" name="Seek" value="51201"/>
      <member cname="GST_EVENT_NAVIGATION" name="Navigation" value="53761"/>
      <member cname="GST_EVENT_LATENCY" name="Latency" value="56321"/>
      <member cname="GST_EVENT_STEP" name="Step" value="58881"/>
      <member cname="GST_EVENT_RECONFIGURE" name="Reconfigure" value="61441"/>
      <member cname="GST_EVENT_TOC_SELECT" name="TocSelect" value="64001"/>
      <member cname="GST_EVENT_CUSTOM_UPSTREAM" name="CustomUpstream" value="69121"/>
      <member cname="GST_EVENT_CUSTOM_DOWNSTREAM" name="CustomDownstream" value="71686"/>
      <member cname="GST_EVENT_CUSTOM_DOWNSTREAM_OOB" name="CustomDownstreamOob" value="74242"/>
      <member cname="GST_EVENT_CUSTOM_DOWNSTREAM_STICKY" name="CustomDownstreamSticky" value="76830"/>
      <member cname="GST_EVENT_CUSTOM_BOTH" name="CustomBoth" value="79367"/>
      <member cname="GST_EVENT_CUSTOM_BOTH_OOB" name="CustomBothOob" value="81923"/>
    </enum>
    <enum name="FlowReturn" cname="GstFlowReturn" type="enum" gtype="gst_flow_return_get_type">
      <member cname="GST_FLOW_CUSTOM_ERROR_2" name="CustomError2" value="-102"/>
      <member cname="GST_FLOW_CUSTOM_ERROR_1" name="CustomError1" value="-101"/>
      <member cname="GST_FLOW_CUSTOM_ERROR" name="CustomError" value="-100"/>
      <member cname="GST_FLOW_NOT_SUPPORTED" name="NotSupported" value="-6"/>
      <member cname="GST_FLOW_ERROR" name="Error" value="-5"/>
      <member cname="GST_FLOW_NOT_NEGOTIATED" name="NotNegotiated" value="-4"/>
      <member cname="GST_FLOW_EOS" name="Eos" value="-3"/>
      <member cname="GST_FLOW_FLUSHING" name="Flushing" value="-2"/>
      <member cname="GST_FLOW_NOT_LINKED" name="NotLinked" value="-1"/>
      <member cname="GST_FLOW_OK" name="Ok" value="0"/>
      <member cname="GST_FLOW_CUSTOM_SUCCESS" name="CustomSuccess" value="100"/>
      <member cname="GST_FLOW_CUSTOM_SUCCESS_1" name="CustomSuccess1" value="101"/>
      <member cname="GST_FLOW_CUSTOM_SUCCESS_2" name="CustomSuccess2" value="102"/>
    </enum>
    <enum name="Format" cname="GstFormat" type="enum" gtype="gst_format_get_type">
      <member cname="GST_FORMAT_UNDEFINED" name="Undefined" value="0"/>
      <member cname="GST_FORMAT_DEFAULT" name="Default" value="1"/>
      <member cname="GST_FORMAT_BYTES" name="Bytes" value="2"/>
      <member cname="GST_FORMAT_TIME" name="Time" value="3"/>
      <member cname="GST_FORMAT_BUFFERS" name="Buffers" value="4"/>
      <member cname="GST_FORMAT_PERCENT" name="Percent" value="5"/>
    </enum>
    <enum name="IteratorItem" cname="GstIteratorItem" type="enum" gtype="gst_iterator_item_get_type">
      <member cname="GST_ITERATOR_ITEM_SKIP" name="Skip" value="0"/>
      <member cname="GST_ITERATOR_ITEM_PASS" name="Pass" value="1"/>
      <member cname="GST_ITERATOR_ITEM_END" name="End" value="2"/>
    </enum>
    <enum name="IteratorResult" cname="GstIteratorResult" type="enum" gtype="gst_iterator_result_get_type">
      <member cname="GST_ITERATOR_DONE" name="Done" value="0"/>
      <member cname="GST_ITERATOR_OK" name="Ok" value="1"/>
      <member cname="GST_ITERATOR_RESYNC" name="Resync" value="2"/>
      <member cname="GST_ITERATOR_ERROR" name="Error" value="3"/>
    </enum>
    <enum name="LibraryError" cname="GstLibraryError" type="enum" gtype="gst_library_error_get_type">
      <member cname="GST_LIBRARY_ERROR_FAILED" name="Failed" value="1"/>
      <member cname="GST_LIBRARY_ERROR_TOO_LAZY" name="TooLazy" value="2"/>
      <member cname="GST_LIBRARY_ERROR_INIT" name="Init" value="3"/>
      <member cname="GST_LIBRARY_ERROR_SHUTDOWN" name="Shutdown" value="4"/>
      <member cname="GST_LIBRARY_ERROR_SETTINGS" name="Settings" value="5"/>
      <member cname="GST_LIBRARY_ERROR_ENCODE" name="Encode" value="6"/>
      <member cname="GST_LIBRARY_ERROR_NUM_ERRORS" name="NumErrors" value="7"/>
    </enum>
    <enum name="PadDirection" cname="GstPadDirection" type="enum" gtype="gst_pad_direction_get_type">
      <member cname="GST_PAD_UNKNOWN" name="Unknown" value="0"/>
      <member cname="GST_PAD_SRC" name="Src" value="1"/>
      <member cname="GST_PAD_SINK" name="Sink" value="2"/>
    </enum>
    <enum name="PadLinkReturn" cname="GstPadLinkReturn" type="enum" gtype="gst_pad_link_return_get_type">
      <member cname="GST_PAD_LINK_REFUSED" name="Refused" value="-6"/>
      <member cname="GST_PAD_LINK_NOSCHED" name="Nosched" value="-5"/>
      <member cname="GST_PAD_LINK_NOFORMAT" name="Noformat" value="-4"/>
      <member cname="GST_PAD_LINK_WRONG_DIRECTION" name="WrongDirection" value="-3"/>
      <member cname="GST_PAD_LINK_WAS_LINKED" name="WasLinked" value="-2"/>
      <member cname="GST_PAD_LINK_WRONG_HIERARCHY" name="WrongHierarchy" value="-1"/>
      <member cname="GST_PAD_LINK_OK" name="Ok" value="0"/>
    </enum>
    <enum name="PadMode" cname="GstPadMode" type="enum" gtype="gst_pad_mode_get_type">
      <member cname="GST_PAD_MODE_NONE" name="None" value="0"/>
      <member cname="GST_PAD_MODE_PUSH" name="Push" value="1"/>
      <member cname="GST_PAD_MODE_PULL" name="Pull" value="2"/>
    </enum>
    <enum name="PadPresence" cname="GstPadPresence" type="enum" gtype="gst_pad_presence_get_type">
      <member cname="GST_PAD_ALWAYS" name="Always" value="0"/>
      <member cname="GST_PAD_SOMETIMES" name="Sometimes" value="1"/>
      <member cname="GST_PAD_REQUEST" name="Request" value="2"/>
    </enum>
    <enum name="PadProbeReturn" cname="GstPadProbeReturn" type="enum" gtype="gst_pad_probe_return_get_type">
      <member cname="GST_PAD_PROBE_DROP" name="Drop" value="0"/>
      <member cname="GST_PAD_PROBE_OK" name="Ok" value="1"/>
      <member cname="GST_PAD_PROBE_REMOVE" name="Remove" value="2"/>
      <member cname="GST_PAD_PROBE_PASS" name="Pass" value="3"/>
    </enum>
    <enum name="ParseError" cname="GstParseError" type="enum" gtype="gst_parse_error_get_type">
      <member cname="GST_PARSE_ERROR_SYNTAX" name="Syntax" value="0"/>
      <member cname="GST_PARSE_ERROR_NO_SUCH_ELEMENT" name="NoSuchElement" value="1"/>
      <member cname="GST_PARSE_ERROR_NO_SUCH_PROPERTY" name="NoSuchProperty" value="2"/>
      <member cname="GST_PARSE_ERROR_LINK" name="Link" value="3"/>
      <member cname="GST_PARSE_ERROR_COULD_NOT_SET_PROPERTY" name="CouldNotSetProperty" value="4"/>
      <member cname="GST_PARSE_ERROR_EMPTY_BIN" name="EmptyBin" value="5"/>
      <member cname="GST_PARSE_ERROR_EMPTY" name="Empty" value="6"/>
    </enum>
    <enum name="PluginError" cname="GstPluginError" type="enum" gtype="gst_plugin_error_get_type">
      <member cname="GST_PLUGIN_ERROR_MODULE" name="Module" value="0"/>
      <member cname="GST_PLUGIN_ERROR_DEPENDENCIES" name="Dependencies" value="1"/>
      <member cname="GST_PLUGIN_ERROR_NAME_MISMATCH" name="NameMismatch" value="2"/>
    </enum>
    <enum name="ProgressType" cname="GstProgressType" type="enum" gtype="gst_progress_type_get_type">
      <member cname="GST_PROGRESS_TYPE_START" name="Start" value="0"/>
      <member cname="GST_PROGRESS_TYPE_CONTINUE" name="Continue" value="1"/>
      <member cname="GST_PROGRESS_TYPE_COMPLETE" name="Complete" value="2"/>
      <member cname="GST_PROGRESS_TYPE_CANCELED" name="Canceled" value="3"/>
      <member cname="GST_PROGRESS_TYPE_ERROR" name="Error" value="4"/>
    </enum>
    <enum name="QOSType" cname="GstQOSType" type="enum" gtype="gst_qos_type_get_type">
      <member cname="GST_QOS_TYPE_OVERFLOW" name="Overflow" value="0"/>
      <member cname="GST_QOS_TYPE_UNDERFLOW" name="Underflow" value="1"/>
      <member cname="GST_QOS_TYPE_THROTTLE" name="Throttle" value="2"/>
    </enum>
    <enum name="QueryType" cname="GstQueryType" type="enum" gtype="gst_query_type_get_type">
      <member cname="GST_QUERY_UNKNOWN" name="Unknown" value="0"/>
      <member cname="GST_QUERY_POSITION" name="Position" value="2563"/>
      <member cname="GST_QUERY_DURATION" name="Duration" value="5123"/>
      <member cname="GST_QUERY_LATENCY" name="Latency" value="7683"/>
      <member cname="GST_QUERY_JITTER" name="Jitter" value="10243"/>
      <member cname="GST_QUERY_RATE" name="Rate" value="12803"/>
      <member cname="GST_QUERY_SEEKING" name="Seeking" value="15363"/>
      <member cname="GST_QUERY_SEGMENT" name="Segment" value="17923"/>
      <member cname="GST_QUERY_CONVERT" name="Convert" value="20483"/>
      <member cname="GST_QUERY_FORMATS" name="Formats" value="23043"/>
      <member cname="GST_QUERY_BUFFERING" name="Buffering" value="28163"/>
      <member cname="GST_QUERY_CUSTOM" name="Custom" value="30723"/>
      <member cname="GST_QUERY_URI" name="Uri" value="33283"/>
      <member cname="GST_QUERY_ALLOCATION" name="Allocation" value="35846"/>
      <member cname="GST_QUERY_SCHEDULING" name="Scheduling" value="38401"/>
      <member cname="GST_QUERY_ACCEPT_CAPS" name="AcceptCaps" value="40963"/>
      <member cname="GST_QUERY_CAPS" name="Caps" value="43523"/>
      <member cname="GST_QUERY_DRAIN" name="Drain" value="46086"/>
    </enum>
    <enum name="Rank" cname="GstRank" type="enum" gtype="gst_rank_get_type">
      <member cname="GST_RANK_NONE" name="None" value="0"/>
      <member cname="GST_RANK_MARGINAL" name="Marginal" value="64"/>
      <member cname="GST_RANK_SECONDARY" name="Secondary" value="128"/>
      <member cname="GST_RANK_PRIMARY" name="Primary" value="256"/>
    </enum>
    <enum name="ResourceError" cname="GstResourceError" type="enum" gtype="gst_resource_error_get_type">
      <member cname="GST_RESOURCE_ERROR_FAILED" name="Failed" value="1"/>
      <member cname="GST_RESOURCE_ERROR_TOO_LAZY" name="TooLazy" value="2"/>
      <member cname="GST_RESOURCE_ERROR_NOT_FOUND" name="NotFound" value="3"/>
      <member cname="GST_RESOURCE_ERROR_BUSY" name="Busy" value="4"/>
      <member cname="GST_RESOURCE_ERROR_OPEN_READ" name="OpenRead" value="5"/>
      <member cname="GST_RESOURCE_ERROR_OPEN_WRITE" name="OpenWrite" value="6"/>
      <member cname="GST_RESOURCE_ERROR_OPEN_READ_WRITE" name="OpenReadWrite" value="7"/>
      <member cname="GST_RESOURCE_ERROR_CLOSE" name="Close" value="8"/>
      <member cname="GST_RESOURCE_ERROR_READ" name="Read" value="9"/>
      <member cname="GST_RESOURCE_ERROR_WRITE" name="Write" value="10"/>
      <member cname="GST_RESOURCE_ERROR_SEEK" name="Seek" value="11"/>
      <member cname="GST_RESOURCE_ERROR_SYNC" name="Sync" value="12"/>
      <member cname="GST_RESOURCE_ERROR_SETTINGS" name="Settings" value="13"/>
      <member cname="GST_RESOURCE_ERROR_NO_SPACE_LEFT" name="NoSpaceLeft" value="14"/>
      <member cname="GST_RESOURCE_ERROR_NUM_ERRORS" name="NumErrors" value="15"/>
    </enum>
    <enum name="SearchMode" cname="GstSearchMode" type="enum" gtype="gst_search_mode_get_type">
      <member cname="GST_SEARCH_MODE_EXACT" name="Exact" value="0"/>
      <member cname="GST_SEARCH_MODE_BEFORE" name="Before" value="1"/>
      <member cname="GST_SEARCH_MODE_AFTER" name="After" value="2"/>
    </enum>
    <enum name="SeekType" cname="GstSeekType" type="enum" gtype="gst_seek_type_get_type">
      <member cname="GST_SEEK_TYPE_NONE" name="None" value="0"/>
      <member cname="GST_SEEK_TYPE_SET" name="Set" value="1"/>
      <member cname="GST_SEEK_TYPE_END" name="End" value="2"/>
    </enum>
    <enum name="State" cname="GstState" type="enum" gtype="gst_state_get_type">
      <member cname="GST_STATE_VOID_PENDING" name="VoidPending" value="0"/>
      <member cname="GST_STATE_NULL" name="Null" value="1"/>
      <member cname="GST_STATE_READY" name="Ready" value="2"/>
      <member cname="GST_STATE_PAUSED" name="Paused" value="3"/>
      <member cname="GST_STATE_PLAYING" name="Playing" value="4"/>
    </enum>
    <enum name="StateChange" cname="GstStateChange" type="enum" gtype="gst_state_change_get_type">
      <member cname="GST_STATE_CHANGE_NULL_TO_READY" name="NullToReady" value="10"/>
      <member cname="GST_STATE_CHANGE_READY_TO_NULL" name="ReadyToNull" value="17"/>
      <member cname="GST_STATE_CHANGE_READY_TO_PAUSED" name="ReadyToPaused" value="19"/>
      <member cname="GST_STATE_CHANGE_PAUSED_TO_READY" name="PausedToReady" value="26"/>
      <member cname="GST_STATE_CHANGE_PAUSED_TO_PLAYING" name="PausedToPlaying" value="28"/>
      <member cname="GST_STATE_CHANGE_PLAYING_TO_PAUSED" name="PlayingToPaused" value="35"/>
    </enum>
    <enum name="StateChangeReturn" cname="GstStateChangeReturn" type="enum" gtype="gst_state_change_return_get_type">
      <member cname="GST_STATE_CHANGE_FAILURE" name="Failure" value="0"/>
      <member cname="GST_STATE_CHANGE_SUCCESS" name="Success" value="1"/>
      <member cname="GST_STATE_CHANGE_ASYNC" name="Async" value="2"/>
      <member cname="GST_STATE_CHANGE_NO_PREROLL" name="NoPreroll" value="3"/>
    </enum>
    <enum name="StreamError" cname="GstStreamError" type="enum" gtype="gst_stream_error_get_type">
      <member cname="GST_STREAM_ERROR_FAILED" name="Failed" value="1"/>
      <member cname="GST_STREAM_ERROR_TOO_LAZY" name="TooLazy" value="2"/>
      <member cname="GST_STREAM_ERROR_NOT_IMPLEMENTED" name="NotImplemented" value="3"/>
      <member cname="GST_STREAM_ERROR_TYPE_NOT_FOUND" name="TypeNotFound" value="4"/>
      <member cname="GST_STREAM_ERROR_WRONG_TYPE" name="WrongType" value="5"/>
      <member cname="GST_STREAM_ERROR_CODEC_NOT_FOUND" name="CodecNotFound" value="6"/>
      <member cname="GST_STREAM_ERROR_DECODE" name="Decode" value="7"/>
      <member cname="GST_STREAM_ERROR_ENCODE" name="Encode" value="8"/>
      <member cname="GST_STREAM_ERROR_DEMUX" name="Demux" value="9"/>
      <member cname="GST_STREAM_ERROR_MUX" name="Mux" value="10"/>
      <member cname="GST_STREAM_ERROR_FORMAT" name="Format" value="11"/>
      <member cname="GST_STREAM_ERROR_DECRYPT" name="Decrypt" value="12"/>
      <member cname="GST_STREAM_ERROR_DECRYPT_NOKEY" name="DecryptNokey" value="13"/>
      <member cname="GST_STREAM_ERROR_NUM_ERRORS" name="NumErrors" value="14"/>
    </enum>
    <enum name="StreamStatusType" cname="GstStreamStatusType" type="enum" gtype="gst_stream_status_type_get_type">
      <member cname="GST_STREAM_STATUS_TYPE_CREATE" name="Create" value="0"/>
      <member cname="GST_STREAM_STATUS_TYPE_ENTER" name="Enter" value="1"/>
      <member cname="GST_STREAM_STATUS_TYPE_LEAVE" name="Leave" value="2"/>
      <member cname="GST_STREAM_STATUS_TYPE_DESTROY" name="Destroy" value="3"/>
      <member cname="GST_STREAM_STATUS_TYPE_START" name="Start" value="8"/>
      <member cname="GST_STREAM_STATUS_TYPE_PAUSE" name="Pause" value="9"/>
      <member cname="GST_STREAM_STATUS_TYPE_STOP" name="Stop" value="10"/>
    </enum>
    <enum name="StructureChangeType" cname="GstStructureChangeType" type="enum" gtype="gst_structure_change_type_get_type">
      <member cname="GST_STRUCTURE_CHANGE_TYPE_PAD_LINK" name="Link" value="0"/>
      <member cname="GST_STRUCTURE_CHANGE_TYPE_PAD_UNLINK" name="Unlink" value="1"/>
    </enum>
    <enum name="TagFlag" cname="GstTagFlag" type="enum" gtype="gst_tag_flag_get_type">
      <member cname="GST_TAG_FLAG_UNDEFINED" name="Undefined" value="0"/>
      <member cname="GST_TAG_FLAG_META" name="Meta" value="1"/>
      <member cname="GST_TAG_FLAG_ENCODED" name="Encoded" value="2"/>
      <member cname="GST_TAG_FLAG_DECODED" name="Decoded" value="3"/>
      <member cname="GST_TAG_FLAG_COUNT" name="Count" value="4"/>
    </enum>
    <enum name="TagMergeMode" cname="GstTagMergeMode" type="enum" gtype="gst_tag_merge_mode_get_type">
      <member cname="GST_TAG_MERGE_UNDEFINED" name="Undefined" value="0"/>
      <member cname="GST_TAG_MERGE_REPLACE_ALL" name="ReplaceAll" value="1"/>
      <member cname="GST_TAG_MERGE_REPLACE" name="Replace" value="2"/>
      <member cname="GST_TAG_MERGE_APPEND" name="Append" value="3"/>
      <member cname="GST_TAG_MERGE_PREPEND" name="Prepend" value="4"/>
      <member cname="GST_TAG_MERGE_KEEP" name="Keep" value="5"/>
      <member cname="GST_TAG_MERGE_KEEP_ALL" name="KeepAll" value="6"/>
      <member cname="GST_TAG_MERGE_COUNT" name="Count" value="7"/>
    </enum>
    <enum name="TagScope" cname="GstTagScope" type="enum" gtype="gst_tag_scope_get_type">
      <member cname="GST_TAG_SCOPE_STREAM" name="Stream" value="0"/>
      <member cname="GST_TAG_SCOPE_GLOBAL" name="Global" value="1"/>
    </enum>
    <enum name="TaskState" cname="GstTaskState" type="enum" gtype="gst_task_state_get_type">
      <member cname="GST_TASK_STARTED" name="Started" value="0"/>
      <member cname="GST_TASK_STOPPED" name="Stopped" value="1"/>
      <member cname="GST_TASK_PAUSED" name="Paused" value="2"/>
    </enum>
    <enum name="TocEntryType" cname="GstTocEntryType" type="enum" gtype="gst_toc_entry_type_get_type">
      <member cname="GST_TOC_ENTRY_TYPE_ANGLE" name="Angle" value="-3"/>
      <member cname="GST_TOC_ENTRY_TYPE_VERSION" name="Version" value="-2"/>
      <member cname="GST_TOC_ENTRY_TYPE_EDITION" name="Edition" value="-1"/>
      <member cname="GST_TOC_ENTRY_TYPE_INVALID" name="Invalid" value="0"/>
      <member cname="GST_TOC_ENTRY_TYPE_TITLE" name="Title" value="1"/>
      <member cname="GST_TOC_ENTRY_TYPE_TRACK" name="Track" value="2"/>
      <member cname="GST_TOC_ENTRY_TYPE_CHAPTER" name="Chapter" value="3"/>
    </enum>
    <enum name="TocScope" cname="GstTocScope" type="enum" gtype="gst_toc_scope_get_type">
      <member cname="GST_TOC_SCOPE_GLOBAL" name="Global" value="1"/>
      <member cname="GST_TOC_SCOPE_CURRENT" name="Current" value="2"/>
    </enum>
    <enum name="TypeFindProbability" cname="GstTypeFindProbability" type="enum" gtype="gst_type_find_probability_get_type">
      <member cname="GST_TYPE_FIND_NONE" name="None" value="0"/>
      <member cname="GST_TYPE_FIND_MINIMUM" name="Minimum" value="1"/>
      <member cname="GST_TYPE_FIND_POSSIBLE" name="Possible" value="50"/>
      <member cname="GST_TYPE_FIND_LIKELY" name="Likely" value="80"/>
      <member cname="GST_TYPE_FIND_NEARLY_CERTAIN" name="NearlyCertain" value="99"/>
      <member cname="GST_TYPE_FIND_MAXIMUM" name="Maximum" value="100"/>
    </enum>
    <enum name="URIError" cname="GstURIError" type="enum" gtype="gst_uri_error_get_type">
      <member cname="GST_URI_ERROR_UNSUPPORTED_PROTOCOL" name="UnsupportedProtocol" value="0"/>
      <member cname="GST_URI_ERROR_BAD_URI" name="BadUri" value="1"/>
      <member cname="GST_URI_ERROR_BAD_STATE" name="BadState" value="2"/>
      <member cname="GST_URI_ERROR_BAD_REFERENCE" name="BadReference" value="3"/>
    </enum>
    <enum name="URIType" cname="GstURIType" type="enum" gtype="gst_uri_type_get_type">
      <member cname="GST_URI_UNKNOWN" name="Unknown" value="0"/>
      <member cname="GST_URI_SINK" name="Sink" value="1"/>
      <member cname="GST_URI_SRC" name="Src" value="2"/>
    </enum>
    <enum name="AllocatorFlags" cname="GstAllocatorFlags" type="flags" gtype="gst_allocator_flags_get_type">
      <member cname="GST_ALLOCATOR_FLAG_CUSTOM_ALLOC" name="CustomAlloc" value="16"/>
      <member cname="GST_ALLOCATOR_FLAG_LAST" name="Last" value="1048576"/>
    </enum>
    <enum name="BinFlags" cname="GstBinFlags" type="flags" gtype="gst_bin_flags_get_type">
      <member cname="GST_BIN_FLAG_NO_RESYNC" name="NoResync" value="16384"/>
      <member cname="GST_BIN_FLAG_LAST" name="Last" value="524288"/>
    </enum>
    <enum name="BufferCopyFlags" cname="GstBufferCopyFlags" type="flags" gtype="gst_buffer_copy_flags_get_type">
      <member cname="GST_BUFFER_COPY_NONE" name="None" value="0"/>
      <member cname="GST_BUFFER_COPY_FLAGS" name="Flags" value="1"/>
      <member cname="GST_BUFFER_COPY_TIMESTAMPS" name="Timestamps" value="2"/>
      <member cname="GST_BUFFER_COPY_META" name="Meta" value="4"/>
      <member cname="GST_BUFFER_COPY_MEMORY" name="Memory" value="8"/>
      <member cname="GST_BUFFER_COPY_MERGE" name="Merge" value="16"/>
    </enum>
    <enum name="BufferFlags" cname="GstBufferFlags" type="flags" gtype="gst_buffer_flags_get_type">
      <member cname="GST_BUFFER_FLAG_LIVE" name="Live" value="16"/>
      <member cname="GST_BUFFER_FLAG_DECODE_ONLY" name="DecodeOnly" value="32"/>
      <member cname="GST_BUFFER_FLAG_DISCONT" name="Discont" value="64"/>
      <member cname="GST_BUFFER_FLAG_RESYNC" name="Resync" value="128"/>
      <member cname="GST_BUFFER_FLAG_CORRUPTED" name="Corrupted" value="256"/>
      <member cname="GST_BUFFER_FLAG_MARKER" name="Marker" value="512"/>
      <member cname="GST_BUFFER_FLAG_HEADER" name="Header" value="1024"/>
      <member cname="GST_BUFFER_FLAG_GAP" name="Gap" value="2048"/>
      <member cname="GST_BUFFER_FLAG_DROPPABLE" name="Droppable" value="4096"/>
      <member cname="GST_BUFFER_FLAG_DELTA_UNIT" name="DeltaUnit" value="8192"/>
      <member cname="GST_BUFFER_FLAG_LAST" name="Last" value="1048576"/>
    </enum>
    <enum name="BufferPoolAcquireFlags" cname="GstBufferPoolAcquireFlags" type="flags" gtype="gst_buffer_pool_acquire_flags_get_type">
      <member cname="GST_BUFFER_POOL_ACQUIRE_FLAG_NONE" name="None" value="0"/>
      <member cname="GST_BUFFER_POOL_ACQUIRE_FLAG_KEY_UNIT" name="KeyUnit" value="1"/>
      <member cname="GST_BUFFER_POOL_ACQUIRE_FLAG_DONTWAIT" name="Dontwait" value="2"/>
      <member cname="GST_BUFFER_POOL_ACQUIRE_FLAG_DISCONT" name="Discont" value="4"/>
      <member cname="GST_BUFFER_POOL_ACQUIRE_FLAG_LAST" name="Last" value="65536"/>
    </enum>
    <enum name="BusFlags" cname="GstBusFlags" type="flags" gtype="gst_bus_flags_get_type">
      <member cname="GST_BUS_FLUSHING" name="Flushing" value="16"/>
      <member cname="GST_BUS_FLAG_LAST" name="FlagLast" value="32"/>
    </enum>
    <enum name="CapsFlags" cname="GstCapsFlags" type="flags" gtype="gst_caps_flags_get_type">
      <member cname="GST_CAPS_FLAG_ANY" name="Any" value="16"/>
    </enum>
    <enum name="ClockFlags" cname="GstClockFlags" type="flags" gtype="gst_clock_flags_get_type">
      <member cname="GST_CLOCK_FLAG_CAN_DO_SINGLE_SYNC" name="CanDoSingleSync" value="16"/>
      <member cname="GST_CLOCK_FLAG_CAN_DO_SINGLE_ASYNC" name="CanDoSingleAsync" value="32"/>
      <member cname="GST_CLOCK_FLAG_CAN_DO_PERIODIC_SYNC" name="CanDoPeriodicSync" value="64"/>
      <member cname="GST_CLOCK_FLAG_CAN_DO_PERIODIC_ASYNC" name="CanDoPeriodicAsync" value="128"/>
      <member cname="GST_CLOCK_FLAG_CAN_SET_RESOLUTION" name="CanSetResolution" value="256"/>
      <member cname="GST_CLOCK_FLAG_CAN_SET_MASTER" name="CanSetMaster" value="512"/>
      <member cname="GST_CLOCK_FLAG_LAST" name="Last" value="4096"/>
    </enum>
    <enum name="DebugGraphDetails" cname="GstDebugGraphDetails" type="flags" gtype="gst_debug_graph_details_get_type">
      <member cname="GST_DEBUG_GRAPH_SHOW_MEDIA_TYPE" name="MediaType" value="1"/>
      <member cname="GST_DEBUG_GRAPH_SHOW_CAPS_DETAILS" name="CapsDetails" value="2"/>
      <member cname="GST_DEBUG_GRAPH_SHOW_NON_DEFAULT_PARAMS" name="NonDefaultParams" value="4"/>
      <member cname="GST_DEBUG_GRAPH_SHOW_STATES" name="States" value="8"/>
      <member cname="GST_DEBUG_GRAPH_SHOW_ALL" name="All" value="15"/>
    </enum>
    <enum name="ElementFlags" cname="GstElementFlags" type="flags" gtype="gst_element_flags_get_type">
      <member cname="GST_ELEMENT_FLAG_LOCKED_STATE" name="LockedState" value="16"/>
      <member cname="GST_ELEMENT_FLAG_SINK" name="Sink" value="32"/>
      <member cname="GST_ELEMENT_FLAG_SOURCE" name="Source" value="64"/>
      <member cname="GST_ELEMENT_FLAG_PROVIDE_CLOCK" name="ProvideClock" value="128"/>
      <member cname="GST_ELEMENT_FLAG_REQUIRE_CLOCK" name="RequireClock" value="256"/>
      <member cname="GST_ELEMENT_FLAG_INDEXABLE" name="Indexable" value="512"/>
      <member cname="GST_ELEMENT_FLAG_LAST" name="Last" value="16384"/>
    </enum>
    <enum name="EventTypeFlags" cname="GstEventTypeFlags" type="flags" gtype="gst_event_type_flags_get_type">
      <member cname="GST_EVENT_TYPE_UPSTREAM" name="Upstream" value="1"/>
      <member cname="GST_EVENT_TYPE_DOWNSTREAM" name="Downstream" value="2"/>
      <member cname="GST_EVENT_TYPE_SERIALIZED" name="Serialized" value="4"/>
      <member cname="GST_EVENT_TYPE_STICKY" name="Sticky" value="8"/>
      <member cname="GST_EVENT_TYPE_STICKY_MULTI" name="StickyMulti" value="16"/>
    </enum>
    <enum name="LockFlags" cname="GstLockFlags" type="flags" gtype="gst_lock_flags_get_type">
      <member cname="GST_LOCK_FLAG_READ" name="Read" value="1"/>
      <member cname="GST_LOCK_FLAG_WRITE" name="Write" value="2"/>
      <member cname="GST_LOCK_FLAG_EXCLUSIVE" name="Exclusive" value="4"/>
      <member cname="GST_LOCK_FLAG_LAST" name="Last" value="256"/>
    </enum>
    <enum name="MapFlags" cname="GstMapFlags" type="flags" gtype="gst_map_flags_get_type">
      <member cname="GST_MAP_READ" name="Read" value="1"/>
      <member cname="GST_MAP_WRITE" name="Write" value="2"/>
      <member cname="GST_MAP_FLAG_LAST" name="FlagLast" value="65536"/>
    </enum>
    <enum name="MemoryFlags" cname="GstMemoryFlags" type="flags" gtype="gst_memory_flags_get_type">
      <member cname="GST_MEMORY_FLAG_READONLY" name="Readonly" value="2"/>
      <member cname="GST_MEMORY_FLAG_NO_SHARE" name="NoShare" value="16"/>
      <member cname="GST_MEMORY_FLAG_ZERO_PREFIXED" name="ZeroPrefixed" value="32"/>
      <member cname="GST_MEMORY_FLAG_ZERO_PADDED" name="ZeroPadded" value="64"/>
      <member cname="GST_MEMORY_FLAG_LAST" name="Last" value="1048576"/>
    </enum>
    <enum name="MessageType" cname="GstMessageType" type="flags" gtype="gst_message_type_get_type">
      <member cname="GST_MESSAGE_ANY" name="Any" value="-1"/>
      <member cname="GST_MESSAGE_UNKNOWN" name="Unknown" value="0"/>
      <member cname="GST_MESSAGE_EOS" name="Eos" value="1"/>
      <member cname="GST_MESSAGE_ERROR" name="Error" value="2"/>
      <member cname="GST_MESSAGE_WARNING" name="Warning" value="4"/>
      <member cname="GST_MESSAGE_INFO" name="Info" value="8"/>
      <member cname="GST_MESSAGE_TAG" name="Tag" value="16"/>
      <member cname="GST_MESSAGE_BUFFERING" name="Buffering" value="32"/>
      <member cname="GST_MESSAGE_STATE_CHANGED" name="StateChanged" value="64"/>
      <member cname="GST_MESSAGE_STATE_DIRTY" name="StateDirty" value="128"/>
      <member cname="GST_MESSAGE_STEP_DONE" name="StepDone" value="256"/>
      <member cname="GST_MESSAGE_CLOCK_PROVIDE" name="ClockProvide" value="512"/>
      <member cname="GST_MESSAGE_CLOCK_LOST" name="ClockLost" value="1024"/>
      <member cname="GST_MESSAGE_NEW_CLOCK" name="NewClock" value="2048"/>
      <member cname="GST_MESSAGE_STRUCTURE_CHANGE" name="StructureChange" value="4096"/>
      <member cname="GST_MESSAGE_STREAM_STATUS" name="StreamStatus" value="8192"/>
      <member cname="GST_MESSAGE_APPLICATION" name="Application" value="16384"/>
      <member cname="GST_MESSAGE_ELEMENT" name="Element" value="32768"/>
      <member cname="GST_MESSAGE_SEGMENT_START" name="SegmentStart" value="65536"/>
      <member cname="GST_MESSAGE_SEGMENT_DONE" name="SegmentDone" value="131072"/>
      <member cname="GST_MESSAGE_DURATION_CHANGED" name="DurationChanged" value="262144"/>
      <member cname="GST_MESSAGE_LATENCY" name="Latency" value="524288"/>
      <member cname="GST_MESSAGE_ASYNC_START" name="AsyncStart" value="1048576"/>
      <member cname="GST_MESSAGE_ASYNC_DONE" name="AsyncDone" value="2097152"/>
      <member cname="GST_MESSAGE_REQUEST_STATE" name="RequestState" value="4194304"/>
      <member cname="GST_MESSAGE_STEP_START" name="StepStart" value="8388608"/>
      <member cname="GST_MESSAGE_QOS" name="Qos" value="16777216"/>
      <member cname="GST_MESSAGE_PROGRESS" name="Progress" value="33554432"/>
      <member cname="GST_MESSAGE_TOC" name="Toc" value="67108864"/>
      <member cname="GST_MESSAGE_RESET_TIME" name="ResetTime" value="134217728"/>
      <member cname="GST_MESSAGE_STREAM_START" name="StreamStart" value="268435456"/>
    </enum>
    <enum name="MetaFlags" cname="GstMetaFlags" type="flags" gtype="gst_meta_flags_get_type">
      <member cname="GST_META_FLAG_NONE" name="None" value="0"/>
      <member cname="GST_META_FLAG_READONLY" name="Readonly" value="1"/>
      <member cname="GST_META_FLAG_POOLED" name="Pooled" value="2"/>
      <member cname="GST_META_FLAG_LOCKED" name="Locked" value="4"/>
      <member cname="GST_META_FLAG_LAST" name="Last" value="65536"/>
    </enum>
    <enum name="MiniObjectFlags" cname="GstMiniObjectFlags" type="flags" gtype="gst_mini_object_flags_get_type">
      <member cname="GST_MINI_OBJECT_FLAG_LOCKABLE" name="Lockable" value="1"/>
      <member cname="GST_MINI_OBJECT_FLAG_LOCK_READONLY" name="LockReadonly" value="2"/>
      <member cname="GST_MINI_OBJECT_FLAG_LAST" name="Last" value="16"/>
    </enum>
    <enum name="ObjectFlags" cname="GstObjectFlags" type="flags" gtype="gst_object_flags_get_type">
      <member cname="GST_OBJECT_FLAG_LAST" name="Last" value="16"/>
    </enum>
    <enum name="PadFlags" cname="GstPadFlags" type="flags" gtype="gst_pad_flags_get_type">
      <member cname="GST_PAD_FLAG_BLOCKED" name="Blocked" value="16"/>
      <member cname="GST_PAD_FLAG_FLUSHING" name="Flushing" value="32"/>
      <member cname="GST_PAD_FLAG_EOS" name="Eos" value="64"/>
      <member cname="GST_PAD_FLAG_BLOCKING" name="Blocking" value="128"/>
      <member cname="GST_PAD_FLAG_NEED_PARENT" name="NeedParent" value="256"/>
      <member cname="GST_PAD_FLAG_NEED_RECONFIGURE" name="NeedReconfigure" value="512"/>
      <member cname="GST_PAD_FLAG_PENDING_EVENTS" name="PendingEvents" value="1024"/>
      <member cname="GST_PAD_FLAG_FIXED_CAPS" name="FixedCaps" value="2048"/>
      <member cname="GST_PAD_FLAG_PROXY_CAPS" name="ProxyCaps" value="4096"/>
      <member cname="GST_PAD_FLAG_PROXY_ALLOCATION" name="ProxyAllocation" value="8192"/>
      <member cname="GST_PAD_FLAG_PROXY_SCHEDULING" name="ProxyScheduling" value="16384"/>
      <member cname="GST_PAD_FLAG_LAST" name="Last" value="1048576"/>
    </enum>
    <enum name="PadLinkCheck" cname="GstPadLinkCheck" type="flags" gtype="gst_pad_link_check_get_type">
      <member cname="GST_PAD_LINK_CHECK_NOTHING" name="Nothing" value="0"/>
      <member cname="GST_PAD_LINK_CHECK_HIERARCHY" name="Hierarchy" value="1"/>
      <member cname="GST_PAD_LINK_CHECK_TEMPLATE_CAPS" name="TemplateCaps" value="2"/>
      <member cname="GST_PAD_LINK_CHECK_CAPS" name="Caps" value="4"/>
      <member cname="GST_PAD_LINK_CHECK_DEFAULT" name="Default" value="5"/>
    </enum>
    <enum name="PadProbeType" cname="GstPadProbeType" type="flags" gtype="gst_pad_probe_type_get_type">
      <member cname="GST_PAD_PROBE_TYPE_INVALID" name="Invalid" value="0"/>
      <member cname="GST_PAD_PROBE_TYPE_IDLE" name="Idle" value="1"/>
      <member cname="GST_PAD_PROBE_TYPE_BLOCK" name="Block" value="2"/>
      <member cname="GST_PAD_PROBE_TYPE_BLOCKING" name="Blocking" value="3"/>
      <member cname="GST_PAD_PROBE_TYPE_BUFFER" name="Buffer" value="16"/>
      <member cname="GST_PAD_PROBE_TYPE_BUFFER_LIST" name="BufferList" value="32"/>
      <member cname="GST_PAD_PROBE_TYPE_EVENT_DOWNSTREAM" name="EventDownstream" value="64"/>
      <member cname="GST_PAD_PROBE_TYPE_DATA_DOWNSTREAM" name="DataDownstream" value="112"/>
      <member cname="GST_PAD_PROBE_TYPE_BLOCK_DOWNSTREAM" name="BlockDownstream" value="114"/>
      <member cname="GST_PAD_PROBE_TYPE_EVENT_UPSTREAM" name="EventUpstream" value="128"/>
      <member cname="GST_PAD_PROBE_TYPE_DATA_UPSTREAM" name="DataUpstream" value="128"/>
      <member cname="GST_PAD_PROBE_TYPE_BLOCK_UPSTREAM" name="BlockUpstream" value="130"/>
      <member cname="GST_PAD_PROBE_TYPE_EVENT_BOTH" name="EventBoth" value="192"/>
      <member cname="GST_PAD_PROBE_TYPE_DATA_BOTH" name="DataBoth" value="240"/>
      <member cname="GST_PAD_PROBE_TYPE_EVENT_FLUSH" name="EventFlush" value="256"/>
      <member cname="GST_PAD_PROBE_TYPE_QUERY_DOWNSTREAM" name="QueryDownstream" value="512"/>
      <member cname="GST_PAD_PROBE_TYPE_QUERY_UPSTREAM" name="QueryUpstream" value="1024"/>
      <member cname="GST_PAD_PROBE_TYPE_QUERY_BOTH" name="QueryBoth" value="1536"/>
      <member cname="GST_PAD_PROBE_TYPE_ALL_BOTH" name="AllBoth" value="1776"/>
      <member cname="GST_PAD_PROBE_TYPE_PUSH" name="Push" value="4096"/>
      <member cname="GST_PAD_PROBE_TYPE_PULL" name="Pull" value="8192"/>
      <member cname="GST_PAD_PROBE_TYPE_SCHEDULING" name="Scheduling" value="12288"/>
    </enum>
    <enum name="PadTemplateFlags" cname="GstPadTemplateFlags" type="flags" gtype="gst_pad_template_flags_get_type">
      <member cname="GST_PAD_TEMPLATE_FLAG_LAST" name="Last" value="256"/>
    </enum>
    <enum name="ParseFlags" cname="GstParseFlags" type="flags" gtype="gst_parse_flags_get_type">
      <member cname="GST_PARSE_FLAG_NONE" name="None" value="0"/>
      <member cname="GST_PARSE_FLAG_FATAL_ERRORS" name="FatalErrors" value="1"/>
    </enum>
    <enum name="PipelineFlags" cname="GstPipelineFlags" type="flags" gtype="gst_pipeline_flags_get_type">
      <member cname="GST_PIPELINE_FLAG_FIXED_CLOCK" name="FixedClock" value="524288"/>
      <member cname="GST_PIPELINE_FLAG_LAST" name="Last" value="8388608"/>
    </enum>
    <enum name="PluginDependencyFlags" cname="GstPluginDependencyFlags" type="flags" gtype="gst_plugin_dependency_flags_get_type">
      <member cname="GST_PLUGIN_DEPENDENCY_FLAG_NONE" name="None" value="0"/>
      <member cname="GST_PLUGIN_DEPENDENCY_FLAG_RECURSE" name="Recurse" value="1"/>
      <member cname="GST_PLUGIN_DEPENDENCY_FLAG_PATHS_ARE_DEFAULT_ONLY" name="PathsAreDefaultOnly" value="2"/>
      <member cname="GST_PLUGIN_DEPENDENCY_FLAG_FILE_NAME_IS_SUFFIX" name="FileNameIsSuffix" value="4"/>
    </enum>
    <enum name="PluginFlags" cname="GstPluginFlags" type="flags" gtype="gst_plugin_flags_get_type">
      <member cname="GST_PLUGIN_FLAG_CACHED" name="Cached" value="16"/>
      <member cname="GST_PLUGIN_FLAG_BLACKLISTED" name="Blacklisted" value="32"/>
    </enum>
    <enum name="QueryTypeFlags" cname="GstQueryTypeFlags" type="flags" gtype="gst_query_type_flags_get_type">
      <member cname="GST_QUERY_TYPE_UPSTREAM" name="Upstream" value="1"/>
      <member cname="GST_QUERY_TYPE_DOWNSTREAM" name="Downstream" value="2"/>
      <member cname="GST_QUERY_TYPE_SERIALIZED" name="Serialized" value="4"/>
    </enum>
    <enum name="SchedulingFlags" cname="GstSchedulingFlags" type="flags" gtype="gst_scheduling_flags_get_type">
      <member cname="GST_SCHEDULING_FLAG_SEEKABLE" name="Seekable" value="1"/>
      <member cname="GST_SCHEDULING_FLAG_SEQUENTIAL" name="Sequential" value="2"/>
    </enum>
    <enum name="SeekFlags" cname="GstSeekFlags" type="flags" gtype="gst_seek_flags_get_type">
      <member cname="GST_SEEK_FLAG_NONE" name="None" value="0"/>
      <member cname="GST_SEEK_FLAG_FLUSH" name="Flush" value="1"/>
      <member cname="GST_SEEK_FLAG_ACCURATE" name="Accurate" value="2"/>
      <member cname="GST_SEEK_FLAG_KEY_UNIT" name="KeyUnit" value="4"/>
      <member cname="GST_SEEK_FLAG_SEGMENT" name="Segment" value="8"/>
      <member cname="GST_SEEK_FLAG_SKIP" name="Skip" value="16"/>
      <member cname="GST_SEEK_FLAG_SNAP_BEFORE" name="SnapBefore" value="32"/>
      <member cname="GST_SEEK_FLAG_SNAP_AFTER" name="SnapAfter" value="64"/>
      <member cname="GST_SEEK_FLAG_SNAP_NEAREST" name="SnapNearest" value="96"/>
    </enum>
    <enum name="SegmentFlags" cname="GstSegmentFlags" type="flags" gtype="gst_segment_flags_get_type">
      <member cname="GST_SEGMENT_FLAG_NONE" name="None" value="0"/>
      <member cname="GST_SEGMENT_FLAG_RESET" name="Reset" value="1"/>
      <member cname="GST_SEGMENT_FLAG_SEGMENT" name="Segment" value="8"/>
      <member cname="GST_SEGMENT_FLAG_SKIP" name="Skip" value="16"/>
    </enum>
    <interface name="ChildProxy" cname="GstChildProxy" abstract="false" opaque="false" hidden="false">
      <class_struct cname="GstChildProxyInterface">
        <field cname="parent" access="public" writeable="false" readable="true" name="Parent" type="GTypeInterface">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="get_child_by_name"/>
        <method vm="get_child_by_index"/>
        <method vm="get_children_count"/>
        <method signal_vm="child_added"/>
        <method signal_vm="child_removed"/>
        <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
      </class_struct>
      <method name="GetType" cname="gst_child_proxy_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <virtual_method name="GetChildByIndex" cname="get_child_by_index">
        <return-type type="GObject*" owned="true"/>
        <parameters>
          <parameter name="index" type="guint"/>
        </parameters>
      </virtual_method>
      <virtual_method name="GetChildByName" cname="get_child_by_name">
        <return-type type="GObject*" owned="true"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="GetChildrenCount" cname="get_children_count">
        <return-type type="guint"/>
        <parameters/>
      </virtual_method>
      <method name="GetChildByIndex" cname="gst_child_proxy_get_child_by_index">
        <return-type type="GObject*" owned="true"/>
        <parameters>
          <parameter name="index" type="guint"/>
        </parameters>
      </method>
      <method name="GetChildByName" cname="gst_child_proxy_get_child_by_name">
        <return-type type="GObject*" owned="true"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetChildrenCount" cname="gst_child_proxy_get_children_count">
        <return-type type="guint"/>
        <parameters/>
      </method>
      <method name="GetProperty" cname="gst_child_proxy_get_property">
        <return-type type="void"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="value" type="GValue*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Lookup" cname="gst_child_proxy_lookup">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
          <parameter allow-none="1" name="target" type="GObject*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="pspec" type="GParamSpec*" pass_as="out"/>
        </parameters>
      </method>
      <method name="SetProperty" cname="gst_child_proxy_set_property">
        <return-type type="void"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <signal name="ChildAdded" cname="child-added" when="first" field_name="child_added">
        <return-type type="void"/>
        <parameters>
          <parameter name="_object" type="GObject*"/>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </signal>
      <signal name="ChildRemoved" cname="child-removed" when="first" field_name="child_removed">
        <return-type type="void"/>
        <parameters>
          <parameter name="_object" type="GObject*"/>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </signal>
    </interface>
    <interface name="Preset" cname="GstPreset" abstract="false" opaque="false" hidden="false">
      <class_struct cname="GstPresetInterface">
        <field cname="parent" access="public" writeable="false" readable="true" name="Parent" type="GTypeInterface">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="get_preset_names"/>
        <method vm="get_property_names"/>
        <method vm="load_preset"/>
        <method vm="save_preset"/>
        <method vm="rename_preset"/>
        <method vm="delete_preset"/>
        <method vm="set_meta"/>
        <method vm="get_meta"/>
        <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
      </class_struct>
      <method name="GetType" cname="gst_preset_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="GetAppDir" cname="gst_preset_get_app_dir" shared="true">
        <return-type type="const-gchar*"/>
      </method>
      <method name="SetAppDir" cname="gst_preset_set_app_dir" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="app_dir" type="const-gchar*"/>
        </parameters>
      </method>
      <virtual_method name="DeletePreset" cname="delete_preset">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="GetMeta" cname="get_meta">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="tag" type="const-gchar*"/>
          <parameter name="value" type="gchar*" owned="true" pass_as="out"/>
        </parameters>
      </virtual_method>
      <virtual_method name="GetPresetNames" cname="get_preset_names">
        <return-type type="gchar***" owned="true" array="true" null_term_array="true"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="GetPropertyNames" cname="get_property_names">
        <return-type type="gchar***" owned="true" array="true" null_term_array="true"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="LoadPreset" cname="load_preset">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="RenamePreset" cname="rename_preset">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="old_name" type="const-gchar*"/>
          <parameter name="new_name" type="const-gchar*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="SavePreset" cname="save_preset">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="SetMeta" cname="set_meta">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="tag" type="const-gchar*"/>
          <parameter name="value" type="const-gchar*"/>
        </parameters>
      </virtual_method>
      <method name="DeletePreset" cname="gst_preset_delete_preset">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetMeta" cname="gst_preset_get_meta">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="tag" type="const-gchar*"/>
          <parameter name="value" type="gchar*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetPresetNames" cname="gst_preset_get_preset_names">
        <return-type type="gchar***" owned="true" array="true" null_term_array="true"/>
        <parameters/>
      </method>
      <method name="GetPropertyNames" cname="gst_preset_get_property_names">
        <return-type type="gchar***" owned="true" array="true" null_term_array="true"/>
        <parameters/>
      </method>
      <method name="LoadPreset" cname="gst_preset_load_preset">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="RenamePreset" cname="gst_preset_rename_preset">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="old_name" type="const-gchar*"/>
          <parameter name="new_name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SavePreset" cname="gst_preset_save_preset">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetMeta" cname="gst_preset_set_meta">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="tag" type="const-gchar*"/>
          <parameter name="value" type="const-gchar*"/>
        </parameters>
      </method>
    </interface>
    <interface name="TagSetter" cname="GstTagSetter" abstract="false" opaque="false" hidden="false">
      <class_struct cname="GstTagSetterInterface">
        <field cname="g_iface" access="public" writeable="false" readable="true" name="GIface" type="GTypeInterface">
          <warning>missing glib:type-name</warning>
        </field>
      </class_struct>
      <method name="GetType" cname="gst_tag_setter_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="AddTagValue" cname="gst_tag_setter_add_tag_value">
        <return-type type="void"/>
        <parameters>
          <parameter name="mode" type="GstTagMergeMode"/>
          <parameter name="tag" type="const-gchar*"/>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetTagList" cname="gst_tag_setter_get_tag_list">
        <return-type type="GstTagList*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetTagMergeMode" cname="gst_tag_setter_get_tag_merge_mode">
        <return-type type="GstTagMergeMode"/>
        <parameters/>
      </method>
      <method name="MergeTags" cname="gst_tag_setter_merge_tags">
        <return-type type="void"/>
        <parameters>
          <parameter name="list" type="GstTagList*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="mode" type="GstTagMergeMode"/>
        </parameters>
      </method>
      <method name="ResetTags" cname="gst_tag_setter_reset_tags">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="SetTagMergeMode" cname="gst_tag_setter_set_tag_merge_mode">
        <return-type type="void"/>
        <parameters>
          <parameter name="mode" type="GstTagMergeMode"/>
        </parameters>
      </method>
    </interface>
    <interface name="TocSetter" cname="GstTocSetter" abstract="false" opaque="false" hidden="false">
      <class_struct cname="GstTocSetterInterface">
        <field cname="g_iface" access="public" writeable="false" readable="true" name="GIface" type="GTypeInterface">
          <warning>missing glib:type-name</warning>
        </field>
      </class_struct>
      <method name="GetType" cname="gst_toc_setter_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="GetToc" cname="gst_toc_setter_get_toc">
        <return-type type="GstToc*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="Reset" cname="gst_toc_setter_reset">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="SetToc" cname="gst_toc_setter_set_toc">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="toc" type="GstToc*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
    </interface>
    <interface name="URIHandler" cname="GstURIHandler" abstract="false" opaque="false" hidden="false">
      <class_struct cname="GstURIHandlerInterface">
        <field cname="parent" access="public" writeable="false" readable="true" name="Parent" type="GTypeInterface">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="get_type"/>
        <method vm="get_protocols"/>
        <method vm="get_uri"/>
        <method vm="set_uri"/>
      </class_struct>
      <virtual_method name="GetType" cname="get_type" shared="true">
        <return-type type="GstURIType"/>
        <parameters>
          <parameter name="type" type="GType"/>
        </parameters>
      </virtual_method>
      <virtual_method name="GetProtocols" cname="get_protocols" shared="true">
        <return-type type="const gchar* const*" array="true" null_term_array="true"/>
        <parameters>
          <parameter name="type" type="GType"/>
        </parameters>
      </virtual_method>
      <method name="GetType" cname="gst_uri_handler_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <virtual_method name="GetUri" cname="get_uri">
        <return-type type="gchar*" owned="true"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="SetUri" cname="set_uri">
        <return-type type="gboolean"/>
        <parameters throws="1">
          <parameter name="uri" type="const-gchar*"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </virtual_method>
      <method name="GetProtocols" cname="gst_uri_handler_get_protocols">
        <return-type type="const gchar* const*" array="true" null_term_array="true"/>
        <parameters/>
      </method>
      <method name="GetUri" cname="gst_uri_handler_get_uri">
        <return-type type="gchar*" owned="true"/>
        <parameters/>
      </method>
      <method name="GetUriType" cname="gst_uri_handler_get_uri_type">
        <return-type type="GstURIType"/>
        <parameters/>
      </method>
      <method name="SetUri" cname="gst_uri_handler_set_uri">
        <return-type type="gboolean"/>
        <parameters throws="1">
          <parameter name="uri" type="const-gchar*"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
    </interface>
    <object name="Allocator" cname="GstAllocator" abstract="true" opaque="false" hidden="false" parent="GstObject">
      <class_struct cname="GstAllocatorClass">
        <field cname="object_class" access="public" writeable="false" readable="true" name="ObjectClass" type="GstObjectClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="alloc"/>
        <method vm="free"/>
        <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
      </class_struct>
      <method name="GetType" cname="gst_allocator_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="Find" cname="gst_allocator_find" shared="true">
        <return-type type="GstAllocator*" owned="true"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="Register" cname="gst_allocator_register" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="allocator" type="GstAllocator*" owned="true"/>
        </parameters>
      </method>
      <virtual_method name="Alloc" cname="alloc">
        <return-type type="GstMemory*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="size" type="gsize"/>
          <parameter allow-none="1" name="params" type="GstAllocationParams*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="Free" cname="free">
        <return-type type="void"/>
        <parameters>
          <parameter name="memory" type="GstMemory*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <method name="Alloc" cname="gst_allocator_alloc">
        <return-type type="GstMemory*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="size" type="gsize"/>
          <parameter allow-none="1" name="params" type="GstAllocationParams*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Free" cname="gst_allocator_free">
        <return-type type="void"/>
        <parameters>
          <parameter name="memory" type="GstMemory*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetDefault" cname="gst_allocator_set_default">
        <return-type type="void"/>
        <parameters/>
      </method>
      <field cname="object" access="public" writeable="false" readable="true" name="Object" type="GstObject*"/>
      <field cname="mem_type" access="public" writeable="false" readable="true" name="MemType" type="gchar*"/>
      <field cname="mem_map" access="public" writeable="false" readable="true" name="MemMap" type="GstMemoryMapFunction"/>
      <field cname="mem_unmap" access="public" writeable="false" readable="true" name="MemUnmap" type="GstMemoryUnmapFunction"/>
      <field cname="mem_copy" access="public" writeable="false" readable="true" name="MemCopy" type="GstMemoryCopyFunction"/>
      <field cname="mem_share" access="public" writeable="false" readable="true" name="MemShare" type="GstMemoryShareFunction"/>
      <field cname="mem_is_span" access="public" writeable="false" readable="true" name="MemIsSpan" type="GstMemoryIsSpanFunction"/>
      <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GstAllocatorPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="Bin" cname="GstBin" abstract="false" opaque="false" hidden="false" parent="GstElement">
      <implements>
        <interface cname="GstChildProxy"/>
      </implements>
      <class_struct cname="GstBinClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GstElementClass">
          <warning>missing glib:type-name</warning>
        </field>
        <field cname="pool" access="private" writeable="false" readable="false" name="Pool" type="GThreadPool*">
          <warning>missing glib:type-name</warning>
        </field>
        <method signal_vm="element_added"/>
        <method signal_vm="element_removed"/>
        <method vm="add_element"/>
        <method vm="remove_element"/>
        <method vm="handle_message"/>
        <method signal_vm="do_latency"/>
        <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
      </class_struct>
      <method name="GetType" cname="gst_bin_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gst_bin_new">
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </constructor>
      <virtual_method name="AddElement" cname="add_element">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="element" type="GstElement*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="HandleMessage" cname="handle_message">
        <return-type type="void"/>
        <parameters>
          <parameter name="message" type="GstMessage*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="RemoveElement" cname="remove_element">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="element" type="GstElement*"/>
        </parameters>
      </virtual_method>
      <method name="Add" cname="gst_bin_add">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="element" type="GstElement*" owned="true"/>
        </parameters>
      </method>
      <method name="FindUnlinkedPad" cname="gst_bin_find_unlinked_pad">
        <return-type type="GstPad*" owned="true"/>
        <parameters>
          <parameter name="direction" type="GstPadDirection"/>
        </parameters>
      </method>
      <method name="GetByInterface" cname="gst_bin_get_by_interface">
        <return-type type="GstElement*" owned="true"/>
        <parameters>
          <parameter name="iface" type="GType"/>
        </parameters>
      </method>
      <method name="GetByName" cname="gst_bin_get_by_name">
        <return-type type="GstElement*" owned="true"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetByNameRecurseUp" cname="gst_bin_get_by_name_recurse_up">
        <return-type type="GstElement*" owned="true"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="IterateAllByInterface" cname="gst_bin_iterate_all_by_interface">
        <return-type type="GstIterator*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="iface" type="GType"/>
        </parameters>
      </method>
      <method name="IterateElements" cname="gst_bin_iterate_elements">
        <return-type type="GstIterator*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="IterateRecurse" cname="gst_bin_iterate_recurse">
        <return-type type="GstIterator*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="IterateSinks" cname="gst_bin_iterate_sinks">
        <return-type type="GstIterator*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="IterateSorted" cname="gst_bin_iterate_sorted">
        <return-type type="GstIterator*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="IterateSources" cname="gst_bin_iterate_sources">
        <return-type type="GstIterator*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="RecalculateLatency" cname="gst_bin_recalculate_latency">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="Remove" cname="gst_bin_remove">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="element" type="GstElement*"/>
        </parameters>
      </method>
      <property name="AsyncHandling" cname="async-handling" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="MessageForward" cname="message-forward" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="element" access="public" writeable="false" readable="true" name="Element" type="GstElement*"/>
      <field cname="numchildren" access="public" writeable="false" readable="true" name="Numchildren" type="gint"/>
      <field cname="children" access="public" writeable="false" readable="true" name="Children" type="GstElement*" element_type="GstElement*"/>
      <field cname="children_cookie" access="public" writeable="false" readable="true" name="ChildrenCookie" type="guint32"/>
      <field cname="child_bus" access="public" writeable="false" readable="true" name="ChildBus" type="GstBus*"/>
      <field cname="messages" access="public" writeable="false" readable="true" name="Messages" type="GList*" element_type="GList*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="polling" access="public" writeable="false" readable="true" name="Polling" type="gboolean"/>
      <field cname="state_dirty" access="public" writeable="false" readable="true" name="StateDirty" type="gboolean"/>
      <field cname="clock_dirty" access="public" writeable="false" readable="true" name="ClockDirty" type="gboolean"/>
      <field cname="provided_clock" access="public" writeable="false" readable="true" name="ProvidedClock" type="GstClock*"/>
      <field cname="clock_provider" access="public" writeable="false" readable="true" name="ClockProvider" type="GstElement*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GstBinPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
      <signal name="DoLatency" cname="do-latency" when="last" field_name="do_latency">
        <return-type type="gboolean"/>
        <parameters/>
      </signal>
      <signal name="ElementAdded" cname="element-added" when="first" field_name="element_added">
        <return-type type="void"/>
        <parameters>
          <parameter name="element" type="GstElement*"/>
        </parameters>
      </signal>
      <signal name="ElementRemoved" cname="element-removed" when="first" field_name="element_removed">
        <return-type type="void"/>
        <parameters>
          <parameter name="element" type="GstElement*"/>
        </parameters>
      </signal>
    </object>
    <object name="BufferPool" cname="GstBufferPool" abstract="false" opaque="false" hidden="false" parent="GstObject">
      <class_struct cname="GstBufferPoolClass">
        <field cname="object_class" access="public" writeable="false" readable="true" name="ObjectClass" type="GstObjectClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="get_options"/>
        <method vm="set_config"/>
        <method vm="start"/>
        <method vm="stop"/>
        <method vm="acquire_buffer"/>
        <method vm="alloc_buffer"/>
        <method vm="reset_buffer"/>
        <method vm="release_buffer"/>
        <method vm="free_buffer"/>
        <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
      </class_struct>
      <method name="GetType" cname="gst_buffer_pool_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gst_buffer_pool_new" disable_void_ctor=""/>
      <method name="ConfigAddOption" cname="gst_buffer_pool_config_add_option" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="config" type="GstStructure*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="option" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="ConfigGetAllocator" cname="gst_buffer_pool_config_get_allocator" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="config" type="GstStructure*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="allocator" type="GstAllocator*"/>
          <parameter name="params" type="GstAllocationParams*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ConfigGetOption" cname="gst_buffer_pool_config_get_option" shared="true">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="config" type="GstStructure*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="index" type="guint"/>
        </parameters>
      </method>
      <method name="ConfigGetParams" cname="gst_buffer_pool_config_get_params" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="config" type="GstStructure*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter allow-none="1" name="caps" type="GstCaps**" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter allow-none="1" name="size" type="guint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="min_buffers" type="guint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="max_buffers" type="guint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ConfigHasOption" cname="gst_buffer_pool_config_has_option" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="config" type="GstStructure*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="option" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="ConfigNOptions" cname="gst_buffer_pool_config_n_options" shared="true">
        <return-type type="guint"/>
        <parameters>
          <parameter name="config" type="GstStructure*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ConfigSetAllocator" cname="gst_buffer_pool_config_set_allocator" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="config" type="GstStructure*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="allocator" type="GstAllocator*"/>
          <parameter name="params" type="GstAllocationParams*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ConfigSetParams" cname="gst_buffer_pool_config_set_params" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="config" type="GstStructure*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="caps" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="size" type="guint"/>
          <parameter name="min_buffers" type="guint"/>
          <parameter name="max_buffers" type="guint"/>
        </parameters>
      </method>
      <virtual_method name="AcquireBuffer" cname="acquire_buffer">
        <return-type type="GstFlowReturn"/>
        <parameters>
          <parameter name="buffer" type="GstBuffer**" owned="true" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter allow-none="1" name="params" type="GstBufferPoolAcquireParams*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="AllocBuffer" cname="alloc_buffer">
        <return-type type="GstFlowReturn"/>
        <parameters>
          <parameter name="buffer" type="GstBuffer**">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="params" type="GstBufferPoolAcquireParams*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="FreeBuffer" cname="free_buffer">
        <return-type type="void"/>
        <parameters>
          <parameter name="buffer" type="GstBuffer*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="GetOptions" cname="get_options">
        <return-type type="const-gchar**" array="true" null_term_array="true"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="ReleaseBuffer" cname="release_buffer">
        <return-type type="void"/>
        <parameters>
          <parameter name="buffer" type="GstBuffer*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="ResetBuffer" cname="reset_buffer">
        <return-type type="void"/>
        <parameters>
          <parameter name="buffer" type="GstBuffer*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="SetConfig" cname="set_config">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="config" type="GstStructure*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="Start" cname="start">
        <return-type type="gboolean"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="Stop" cname="stop">
        <return-type type="gboolean"/>
        <parameters/>
      </virtual_method>
      <method name="AcquireBuffer" cname="gst_buffer_pool_acquire_buffer">
        <return-type type="GstFlowReturn"/>
        <parameters>
          <parameter name="buffer" type="GstBuffer**" owned="true" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter allow-none="1" name="params" type="GstBufferPoolAcquireParams*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetConfig" cname="gst_buffer_pool_get_config">
        <return-type type="GstStructure*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetOptions" cname="gst_buffer_pool_get_options">
        <return-type type="const-gchar**" array="true" null_term_array="true"/>
        <parameters/>
      </method>
      <method name="HasOption" cname="gst_buffer_pool_has_option">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="option" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="IsActive" cname="gst_buffer_pool_is_active">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="ReleaseBuffer" cname="gst_buffer_pool_release_buffer">
        <return-type type="void"/>
        <parameters>
          <parameter name="buffer" type="GstBuffer*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetActive" cname="gst_buffer_pool_set_active">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="active" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetConfig" cname="gst_buffer_pool_set_config">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="config" type="GstStructure*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <field cname="object" access="public" writeable="false" readable="true" name="Object" type="GstObject*"/>
      <field cname="flushing" access="public" writeable="false" readable="true" name="Flushing" type="gint"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GstBufferPoolPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
    </object>
    <object name="Bus" cname="GstBus" abstract="false" opaque="false" hidden="false" parent="GstObject">
      <class_struct cname="GstBusClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GstObjectClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method signal_vm="message"/>
        <method signal_vm="sync_message"/>
        <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
      </class_struct>
      <method name="GetType" cname="gst_bus_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gst_bus_new" disable_void_ctor=""/>
      <method name="AddSignalWatch" cname="gst_bus_add_signal_watch">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="AddSignalWatchFull" cname="gst_bus_add_signal_watch_full">
        <return-type type="void"/>
        <parameters>
          <parameter name="priority" type="gint"/>
        </parameters>
      </method>
      <method name="AddWatchFull" cname="gst_bus_add_watch_full">
        <return-type type="guint"/>
        <parameters>
          <parameter name="priority" type="gint"/>
          <parameter closure="2" destroy="3" scope="notified" name="func" type="GstBusFunc"/>
          <parameter name="user_data" type="gpointer"/>
          <parameter scope="async" name="notify" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="AsyncSignalFunc" cname="gst_bus_async_signal_func">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="message" type="GstMessage*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="data" type="gpointer"/>
        </parameters>
      </method>
      <method name="CreateWatch" cname="gst_bus_create_watch">
        <return-type type="GSource*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="DisableSyncMessageEmission" cname="gst_bus_disable_sync_message_emission">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="EnableSyncMessageEmission" cname="gst_bus_enable_sync_message_emission">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="HavePending" cname="gst_bus_have_pending">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="Peek" cname="gst_bus_peek">
        <return-type type="GstMessage*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="Poll" cname="gst_bus_poll">
        <return-type type="GstMessage*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="events" type="GstMessageType"/>
          <parameter name="timeout" type="guint64"/>
        </parameters>
      </method>
      <method name="Pop" cname="gst_bus_pop">
        <return-type type="GstMessage*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="PopFiltered" cname="gst_bus_pop_filtered">
        <return-type type="GstMessage*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="types" type="GstMessageType"/>
        </parameters>
      </method>
      <method name="Post" cname="gst_bus_post">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="message" type="GstMessage*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="RemoveSignalWatch" cname="gst_bus_remove_signal_watch">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="SetFlushing" cname="gst_bus_set_flushing">
        <return-type type="void"/>
        <parameters>
          <parameter name="flushing" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetSyncHandler" cname="gst_bus_set_sync_handler">
        <return-type type="void"/>
        <parameters>
          <parameter closure="1" destroy="2" scope="notified" allow-none="1" name="func" type="GstBusSyncHandler"/>
          <parameter name="user_data" type="gpointer"/>
          <parameter scope="async" name="notify" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="SyncSignalHandler" cname="gst_bus_sync_signal_handler">
        <return-type type="GstBusSyncReply"/>
        <parameters>
          <parameter name="message" type="GstMessage*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="data" type="gpointer"/>
        </parameters>
      </method>
      <method name="TimedPop" cname="gst_bus_timed_pop">
        <return-type type="GstMessage*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="timeout" type="guint64"/>
        </parameters>
      </method>
      <method name="TimedPopFiltered" cname="gst_bus_timed_pop_filtered">
        <return-type type="GstMessage*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="timeout" type="guint64"/>
          <parameter name="types" type="GstMessageType"/>
        </parameters>
      </method>
      <property name="EnableAsync" cname="enable-async" type="gboolean" readable="false" writeable="true" construct="false" construct-only="true"/>
      <field cname="object" access="public" writeable="false" readable="true" name="Object" type="GstObject*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GstBusPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
      <signal name="Message" cname="message" when="last" field_name="message">
        <return-type type="void"/>
        <parameters>
          <parameter name="message" type="GstMessage*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </signal>
      <signal name="SyncMessage" cname="sync-message" when="last" field_name="sync_message">
        <return-type type="void"/>
        <parameters>
          <parameter name="message" type="GstMessage*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </signal>
    </object>
    <object name="Clock" cname="GstClock" abstract="true" opaque="false" hidden="false" parent="GstObject">
      <class_struct cname="GstClockClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GstObjectClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="change_resolution"/>
        <method vm="get_resolution"/>
        <method vm="get_internal_time"/>
        <method vm="wait"/>
        <method vm="wait_async"/>
        <method vm="unschedule"/>
        <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
      </class_struct>
      <method name="GetType" cname="gst_clock_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="IdCompareFunc" cname="gst_clock_id_compare_func" shared="true">
        <return-type type="gint"/>
        <parameters>
          <parameter name="id1" type="gpointer"/>
          <parameter name="id2" type="gpointer"/>
        </parameters>
      </method>
      <method name="IdGetTime" cname="gst_clock_id_get_time" shared="true">
        <return-type type="guint64"/>
        <parameters>
          <parameter name="id" type="gpointer"/>
        </parameters>
      </method>
      <method name="IdRef" cname="gst_clock_id_ref" shared="true">
        <return-type type="gpointer" owned="true"/>
        <parameters>
          <parameter name="id" type="gpointer"/>
        </parameters>
      </method>
      <method name="IdUnref" cname="gst_clock_id_unref" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="id" type="gpointer" owned="true"/>
        </parameters>
      </method>
      <method name="IdUnschedule" cname="gst_clock_id_unschedule" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="id" type="gpointer"/>
        </parameters>
      </method>
      <method name="IdWait" cname="gst_clock_id_wait" shared="true">
        <return-type type="GstClockReturn"/>
        <parameters>
          <parameter name="id" type="gpointer"/>
          <parameter allow-none="1" name="jitter" type="gint64" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="IdWaitAsync" cname="gst_clock_id_wait_async" shared="true">
        <return-type type="GstClockReturn"/>
        <parameters>
          <parameter name="id" type="gpointer"/>
          <parameter closure="2" destroy="3" scope="notified" name="func" type="GstClockCallback"/>
          <parameter name="user_data" type="gpointer"/>
          <parameter scope="async" name="destroy_data" type="GDestroyNotify"/>
        </parameters>
      </method>
      <virtual_method name="ChangeResolution" cname="change_resolution">
        <return-type type="guint64"/>
        <parameters>
          <parameter name="old_resolution" type="guint64"/>
          <parameter name="new_resolution" type="guint64"/>
        </parameters>
      </virtual_method>
      <virtual_method name="GetInternalTime" cname="get_internal_time">
        <return-type type="guint64"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="GetResolution" cname="get_resolution">
        <return-type type="guint64"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="Unschedule" cname="unschedule">
        <return-type type="void"/>
        <parameters>
          <parameter name="entry" type="GstClockEntry*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="Wait" cname="wait">
        <return-type type="GstClockReturn"/>
        <parameters>
          <parameter name="entry" type="GstClockEntry*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="jitter" type="gint64"/>
        </parameters>
      </virtual_method>
      <virtual_method name="WaitAsync" cname="wait_async">
        <return-type type="GstClockReturn"/>
        <parameters>
          <parameter name="entry" type="GstClockEntry*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <method name="AddObservation" cname="gst_clock_add_observation">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="slave" type="guint64"/>
          <parameter name="master" type="guint64"/>
          <parameter name="r_squared" type="gdouble*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="AdjustUnlocked" cname="gst_clock_adjust_unlocked">
        <return-type type="guint64"/>
        <parameters>
          <parameter name="internal" type="guint64"/>
        </parameters>
      </method>
      <method name="GetCalibration" cname="gst_clock_get_calibration">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="internal" type="guint64" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="external" type="guint64" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="rate_num" type="guint64" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="rate_denom" type="guint64" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetInternalTime" cname="gst_clock_get_internal_time">
        <return-type type="guint64"/>
        <parameters/>
      </method>
      <method name="GetMaster" cname="gst_clock_get_master">
        <return-type type="GstClock*" owned="true"/>
        <parameters/>
      </method>
      <method name="GetResolution" cname="gst_clock_get_resolution">
        <return-type type="guint64"/>
        <parameters/>
      </method>
      <method name="GetTime" cname="gst_clock_get_time">
        <return-type type="guint64"/>
        <parameters/>
      </method>
      <method name="GetTimeout" cname="gst_clock_get_timeout">
        <return-type type="guint64"/>
        <parameters/>
      </method>
      <method name="NewPeriodicId" cname="gst_clock_new_periodic_id">
        <return-type type="gpointer" owned="true"/>
        <parameters>
          <parameter name="start_time" type="guint64"/>
          <parameter name="interval" type="guint64"/>
        </parameters>
      </method>
      <method name="NewSingleShotId" cname="gst_clock_new_single_shot_id">
        <return-type type="gpointer" owned="true"/>
        <parameters>
          <parameter name="time" type="guint64"/>
        </parameters>
      </method>
      <method name="PeriodicIdReinit" cname="gst_clock_periodic_id_reinit">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="id" type="gpointer"/>
          <parameter name="start_time" type="guint64"/>
          <parameter name="interval" type="guint64"/>
        </parameters>
      </method>
      <method name="SetCalibration" cname="gst_clock_set_calibration">
        <return-type type="void"/>
        <parameters>
          <parameter name="internal" type="guint64"/>
          <parameter name="external" type="guint64"/>
          <parameter name="rate_num" type="guint64"/>
          <parameter name="rate_denom" type="guint64"/>
        </parameters>
      </method>
      <method name="SetMaster" cname="gst_clock_set_master">
        <return-type type="gboolean"/>
        <parameters>
          <parameter allow-none="1" name="master" type="GstClock*"/>
        </parameters>
      </method>
      <method name="SetResolution" cname="gst_clock_set_resolution">
        <return-type type="guint64"/>
        <parameters>
          <parameter name="resolution" type="guint64"/>
        </parameters>
      </method>
      <method name="SetTimeout" cname="gst_clock_set_timeout">
        <return-type type="void"/>
        <parameters>
          <parameter name="timeout" type="guint64"/>
        </parameters>
      </method>
      <method name="SingleShotIdReinit" cname="gst_clock_single_shot_id_reinit">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="id" type="gpointer"/>
          <parameter name="time" type="guint64"/>
        </parameters>
      </method>
      <method name="UnadjustUnlocked" cname="gst_clock_unadjust_unlocked">
        <return-type type="guint64"/>
        <parameters>
          <parameter name="external" type="guint64"/>
        </parameters>
      </method>
      <property name="Timeout" cname="timeout" type="guint64" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="WindowSize" cname="window-size" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="WindowThreshold" cname="window-threshold" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="object" access="public" writeable="false" readable="true" name="Object" type="GstObject*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GstClockPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
    </object>
    <object name="ControlBinding" cname="GstControlBinding" abstract="true" opaque="false" hidden="false" parent="GstObject">
      <class_struct cname="GstControlBindingClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GstObjectClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="sync_values"/>
        <method vm="get_value"/>
        <method vm="get_value_array"/>
        <method vm="get_g_value_array"/>
        <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
      </class_struct>
      <method name="GetType" cname="gst_control_binding_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <virtual_method name="GetGValueArray" cname="get_g_value_array">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="timestamp" type="guint64"/>
          <parameter name="interval" type="guint64"/>
          <parameter name="n_values" type="guint"/>
          <parameter name="values" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="GetValue" cname="get_value">
        <return-type type="GValue*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="timestamp" type="guint64"/>
        </parameters>
      </virtual_method>
      <virtual_method name="GetValueArray" cname="get_value_array">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="timestamp" type="guint64"/>
          <parameter name="interval" type="guint64"/>
          <parameter name="n_values" type="guint"/>
          <parameter name="values" type="gpointer"/>
        </parameters>
      </virtual_method>
      <virtual_method name="SyncValues" cname="sync_values">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="_object" type="GstObject*"/>
          <parameter name="timestamp" type="guint64"/>
          <parameter name="last_sync" type="guint64"/>
        </parameters>
      </virtual_method>
      <method name="GetGValueArray" cname="gst_control_binding_get_g_value_array">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="timestamp" type="guint64"/>
          <parameter name="interval" type="guint64"/>
          <parameter name="n_values" type="guint"/>
          <parameter name="values" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetValue" cname="gst_control_binding_get_value">
        <return-type type="GValue*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="timestamp" type="guint64"/>
        </parameters>
      </method>
      <method name="GetValueArray" cname="gst_control_binding_get_value_array">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="timestamp" type="guint64"/>
          <parameter name="interval" type="guint64"/>
          <parameter name="n_values" type="guint"/>
          <parameter name="values" type="gpointer"/>
        </parameters>
      </method>
      <method name="IsDisabled" cname="gst_control_binding_is_disabled">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="SetDisabled" cname="gst_control_binding_set_disabled">
        <return-type type="void"/>
        <parameters>
          <parameter name="disabled" type="gboolean"/>
        </parameters>
      </method>
      <method name="SyncValues" cname="gst_control_binding_sync_values">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="_object" type="GstObject*"/>
          <parameter name="timestamp" type="guint64"/>
          <parameter name="last_sync" type="guint64"/>
        </parameters>
      </method>
      <property name="Name" cname="name" type="gchar*" readable="true" writeable="true" construct="false" construct-only="true"/>
      <property name="Object" cname="object" type="GstObject*" readable="true" writeable="true" construct="false" construct-only="true"/>
      <field cname="parent" access="public" writeable="false" readable="true" name="Parent" type="GstObject*"/>
      <field cname="name" access="public" writeable="false" readable="true" name="NameField" type="gchar*"/>
      <field cname="pspec" access="public" writeable="false" readable="true" name="Pspec" type="GParamSpec*"/>
      <field cname="object" access="private" writeable="false" readable="false" name="ObjectField" type="GstObject*"/>
      <field cname="disabled" access="private" writeable="false" readable="false" name="Disabled" type="gboolean"/>
      <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
    </object>
    <object name="ControlSource" cname="GstControlSource" abstract="true" opaque="false" hidden="false" parent="GstObject">
      <class_struct cname="GstControlSourceClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GstObjectClass">
          <warning>missing glib:type-name</warning>
        </field>
        <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
      </class_struct>
      <method name="GetType" cname="gst_control_source_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="GetValue" cname="gst_control_source_get_value">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="timestamp" type="guint64"/>
          <parameter name="value" type="gdouble"/>
        </parameters>
      </method>
      <method name="GetValueArray" cname="gst_control_source_get_value_array">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="timestamp" type="guint64"/>
          <parameter name="interval" type="guint64"/>
          <parameter name="n_values" type="guint"/>
          <parameter name="values" type="gdouble"/>
        </parameters>
      </method>
      <field cname="parent" access="public" writeable="false" readable="true" name="Parent" type="GstObject*"/>
      <field cname="get_value" access="public" writeable="false" readable="true" name="GetValueFunc" type="GstControlSourceGetValue"/>
      <field cname="get_value_array" access="public" writeable="false" readable="true" name="GetValueArrayFunc" type="GstControlSourceGetValueArray"/>
      <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
    </object>
    <object name="Element" cname="GstElement" abstract="true" opaque="false" hidden="false" parent="GstObject">
      <class_struct cname="GstElementClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GstObjectClass">
          <warning>missing glib:type-name</warning>
        </field>
        <field cname="metadata" access="public" writeable="false" readable="true" name="Metadata" type="gpointer"/>
        <field cname="elementfactory" access="public" writeable="false" readable="true" name="Elementfactory" type="GstElementFactory*"/>
        <field cname="padtemplates" access="public" writeable="false" readable="true" name="Padtemplates" type="gpointer" element_type="gpointer"/>
        <field cname="numpadtemplates" access="public" writeable="false" readable="true" name="Numpadtemplates" type="gint"/>
        <field cname="pad_templ_cookie" access="public" writeable="false" readable="true" name="PadTemplCookie" type="guint32"/>
        <method signal_vm="pad_added"/>
        <method signal_vm="pad_removed"/>
        <method signal_vm="no_more_pads"/>
        <method vm="request_new_pad"/>
        <method vm="release_pad"/>
        <method vm="get_state"/>
        <method vm="set_state"/>
        <method vm="change_state"/>
        <method vm="state_changed"/>
        <method vm="set_bus"/>
        <method vm="provide_clock"/>
        <method vm="set_clock"/>
        <method vm="send_event"/>
        <method vm="query"/>
        <method vm="post_message"/>
        <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="19"/>
      </class_struct>
      <method name="AddMetadata" cname="gst_element_class_add_metadata" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="key" type="const-gchar*"/>
          <parameter name="value" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="AddPadTemplate" cname="gst_element_class_add_pad_template" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="templ" type="GstPadTemplate*" owned="true"/>
        </parameters>
      </method>
      <method name="AddStaticMetadata" cname="gst_element_class_add_static_metadata" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="key" type="const-gchar*"/>
          <parameter name="value" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetMetadata" cname="gst_element_class_get_metadata" shared="true">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="key" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetPadTemplate" cname="gst_element_class_get_pad_template" shared="true">
        <return-type type="GstPadTemplate*"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetPadTemplateList" cname="gst_element_class_get_pad_template_list" shared="true">
        <return-type type="GstPadTemplate*" element_type="GstPadTemplate*"/>
        <parameters/>
      </method>
      <method name="SetMetadata" cname="gst_element_class_set_metadata" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="longname" type="const-gchar*"/>
          <parameter name="classification" type="const-gchar*"/>
          <parameter name="description" type="const-gchar*"/>
          <parameter name="author" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetStaticMetadata" cname="gst_element_class_set_static_metadata" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="longname" type="const-gchar*"/>
          <parameter name="classification" type="const-gchar*"/>
          <parameter name="description" type="const-gchar*"/>
          <parameter name="author" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetType" cname="gst_element_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="MakeFromUri" cname="gst_element_make_from_uri" shared="true">
        <return-type type="GstElement*"/>
        <parameters throws="1">
          <parameter name="type" type="GstURIType"/>
          <parameter name="uri" type="const-gchar*"/>
          <parameter allow-none="1" name="elementname" type="const-gchar*"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="Register" cname="gst_element_register" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter allow-none="1" name="plugin" type="GstPlugin*"/>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="rank" type="guint"/>
          <parameter name="type" type="GType"/>
        </parameters>
      </method>
      <method name="StateChangeReturnGetName" cname="gst_element_state_change_return_get_name" shared="true">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="state_ret" type="GstStateChangeReturn"/>
        </parameters>
      </method>
      <method name="StateGetName" cname="gst_element_state_get_name" shared="true">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="state" type="GstState"/>
        </parameters>
      </method>
      <virtual_method name="ChangeState" cname="change_state">
        <return-type type="GstStateChangeReturn"/>
        <parameters>
          <parameter name="transition" type="GstStateChange"/>
        </parameters>
      </virtual_method>
      <virtual_method name="GetState" cname="get_state">
        <return-type type="GstStateChangeReturn"/>
        <parameters>
          <parameter allow-none="1" name="state" type="GstState" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="pending" type="GstState" owned="true" pass_as="out"/>
          <parameter name="timeout" type="guint64"/>
        </parameters>
      </virtual_method>
      <virtual_method name="PostMessage" cname="post_message">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="message" type="GstMessage*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="ProvideClock" cname="provide_clock">
        <return-type type="GstClock*" owned="true"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="Query" cname="query">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="query" type="GstQuery*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="ReleasePad" cname="release_pad">
        <return-type type="void"/>
        <parameters>
          <parameter name="pad" type="GstPad*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="RequestNewPad" cname="request_new_pad" hidden="true">
        <return-type type="GstPad*"/>
        <parameters>
          <parameter name="templ" type="GstPadTemplate*"/>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="caps" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="SendEvent" cname="send_event">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="event" type="GstEvent*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="SetBus" cname="set_bus">
        <return-type type="void"/>
        <parameters>
          <parameter name="bus" type="GstBus*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="SetClock" cname="set_clock">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="clock" type="GstClock*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="SetState" cname="set_state">
        <return-type type="GstStateChangeReturn"/>
        <parameters>
          <parameter name="state" type="GstState"/>
        </parameters>
      </virtual_method>
      <virtual_method name="StateChanged" cname="state_changed">
        <return-type type="void"/>
        <parameters>
          <parameter name="oldstate" type="GstState"/>
          <parameter name="newstate" type="GstState"/>
          <parameter name="pending" type="GstState"/>
        </parameters>
      </virtual_method>
      <method name="AbortState" cname="gst_element_abort_state">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="AddPad" cname="gst_element_add_pad">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="pad" type="GstPad*" owned="true"/>
        </parameters>
      </method>
      <method name="ChangeState" cname="gst_element_change_state">
        <return-type type="GstStateChangeReturn"/>
        <parameters>
          <parameter name="transition" type="GstStateChange"/>
        </parameters>
      </method>
      <method name="ContinueState" cname="gst_element_continue_state">
        <return-type type="GstStateChangeReturn"/>
        <parameters>
          <parameter name="_ret" type="GstStateChangeReturn"/>
        </parameters>
      </method>
      <method name="CreateAllPads" cname="gst_element_create_all_pads">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="GetBaseTime" cname="gst_element_get_base_time">
        <return-type type="guint64"/>
        <parameters/>
      </method>
      <method name="GetBus" cname="gst_element_get_bus">
        <return-type type="GstBus*" owned="true"/>
        <parameters/>
      </method>
      <method name="GetClock" cname="gst_element_get_clock">
        <return-type type="GstClock*" owned="true"/>
        <parameters/>
      </method>
      <method name="GetCompatiblePad" cname="gst_element_get_compatible_pad">
        <return-type type="GstPad*" owned="true"/>
        <parameters>
          <parameter name="pad" type="GstPad*"/>
          <parameter allow-none="1" name="caps" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetCompatiblePadTemplate" cname="gst_element_get_compatible_pad_template">
        <return-type type="GstPadTemplate*"/>
        <parameters>
          <parameter name="compattempl" type="GstPadTemplate*"/>
        </parameters>
      </method>
      <method name="GetFactory" cname="gst_element_get_factory">
        <return-type type="GstElementFactory*"/>
        <parameters/>
      </method>
      <method name="GetRequestPad" cname="gst_element_get_request_pad">
        <return-type type="GstPad*" owned="true"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetStartTime" cname="gst_element_get_start_time">
        <return-type type="guint64"/>
        <parameters/>
      </method>
      <method name="GetState" cname="gst_element_get_state">
        <return-type type="GstStateChangeReturn"/>
        <parameters>
          <parameter allow-none="1" name="state" type="GstState" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="pending" type="GstState" owned="true" pass_as="out"/>
          <parameter name="timeout" type="guint64"/>
        </parameters>
      </method>
      <method name="GetStaticPad" cname="gst_element_get_static_pad">
        <return-type type="GstPad*" owned="true"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="IsLockedState" cname="gst_element_is_locked_state">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="IteratePads" cname="gst_element_iterate_pads">
        <return-type type="GstIterator*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="IterateSinkPads" cname="gst_element_iterate_sink_pads">
        <return-type type="GstIterator*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="IterateSrcPads" cname="gst_element_iterate_src_pads">
        <return-type type="GstIterator*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="Link" cname="gst_element_link">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="dest" type="GstElement*"/>
        </parameters>
      </method>
      <method name="LinkFiltered" cname="gst_element_link_filtered">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="dest" type="GstElement*"/>
          <parameter allow-none="1" name="filter" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="LinkPads" cname="gst_element_link_pads">
        <return-type type="gboolean"/>
        <parameters>
          <parameter allow-none="1" name="srcpadname" type="const-gchar*"/>
          <parameter name="dest" type="GstElement*"/>
          <parameter allow-none="1" name="destpadname" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="LinkPadsFiltered" cname="gst_element_link_pads_filtered">
        <return-type type="gboolean"/>
        <parameters>
          <parameter allow-none="1" name="srcpadname" type="const-gchar*"/>
          <parameter name="dest" type="GstElement*"/>
          <parameter allow-none="1" name="destpadname" type="const-gchar*"/>
          <parameter allow-none="1" name="filter" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="LinkPadsFull" cname="gst_element_link_pads_full">
        <return-type type="gboolean"/>
        <parameters>
          <parameter allow-none="1" name="srcpadname" type="const-gchar*"/>
          <parameter name="dest" type="GstElement*"/>
          <parameter allow-none="1" name="destpadname" type="const-gchar*"/>
          <parameter name="flags" type="GstPadLinkCheck"/>
        </parameters>
      </method>
      <method name="LostState" cname="gst_element_lost_state">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="MessageFull" cname="gst_element_message_full">
        <return-type type="void"/>
        <parameters>
          <parameter name="type" type="GstMessageType"/>
          <parameter name="domain" type="guint32"/>
          <parameter name="code" type="gint"/>
          <parameter allow-none="1" name="text" type="gchar*" owned="true"/>
          <parameter allow-none="1" name="debug" type="gchar*" owned="true"/>
          <parameter name="file" type="const-gchar*"/>
          <parameter name="function" type="const-gchar*"/>
          <parameter name="line" type="gint"/>
        </parameters>
      </method>
      <method name="PostMessage" cname="gst_element_post_message">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="message" type="GstMessage*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ProvideClock" cname="gst_element_provide_clock">
        <return-type type="GstClock*" owned="true"/>
        <parameters/>
      </method>
      <method name="Query" cname="gst_element_query">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="query" type="GstQuery*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="QueryConvert" cname="gst_element_query_convert">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="src_format" type="GstFormat" owned="true" pass_as="ref"/>
          <parameter name="src_val" type="gint64"/>
          <parameter name="dest_format" type="GstFormat"/>
          <parameter name="dest_val" type="gint64*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="QueryDuration" cname="gst_element_query_duration">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="format" type="GstFormat"/>
          <parameter name="duration" type="gint64*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="QueryPosition" cname="gst_element_query_position">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="format" type="GstFormat"/>
          <parameter allow-none="1" name="cur" type="gint64*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ReleaseRequestPad" cname="gst_element_release_request_pad">
        <return-type type="void"/>
        <parameters>
          <parameter name="pad" type="GstPad*"/>
        </parameters>
      </method>
      <method name="RemovePad" cname="gst_element_remove_pad">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="pad" type="GstPad*" owned="true"/>
        </parameters>
      </method>
      <method name="RequestPad" cname="gst_element_request_pad">
        <return-type type="GstPad*" owned="true"/>
        <parameters>
          <parameter name="templ" type="GstPadTemplate*"/>
          <parameter allow-none="1" name="name" type="const-gchar*"/>
          <parameter allow-none="1" name="caps" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Seek" cname="gst_element_seek">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="rate" type="gdouble"/>
          <parameter name="format" type="GstFormat"/>
          <parameter name="flags" type="GstSeekFlags"/>
          <parameter name="start_type" type="GstSeekType"/>
          <parameter name="start" type="gint64"/>
          <parameter name="stop_type" type="GstSeekType"/>
          <parameter name="stop" type="gint64"/>
        </parameters>
      </method>
      <method name="SeekSimple" cname="gst_element_seek_simple">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="format" type="GstFormat"/>
          <parameter name="seek_flags" type="GstSeekFlags"/>
          <parameter name="seek_pos" type="gint64"/>
        </parameters>
      </method>
      <method name="SendEvent" cname="gst_element_send_event">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="event" type="GstEvent*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetBaseTime" cname="gst_element_set_base_time">
        <return-type type="void"/>
        <parameters>
          <parameter name="time" type="guint64"/>
        </parameters>
      </method>
      <method name="SetBus" cname="gst_element_set_bus">
        <return-type type="void"/>
        <parameters>
          <parameter name="bus" type="GstBus*"/>
        </parameters>
      </method>
      <method name="SetClock" cname="gst_element_set_clock">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="clock" type="GstClock*"/>
        </parameters>
      </method>
      <method name="SetLockedState" cname="gst_element_set_locked_state">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="locked_state" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetStartTime" cname="gst_element_set_start_time">
        <return-type type="void"/>
        <parameters>
          <parameter name="time" type="guint64"/>
        </parameters>
      </method>
      <method name="SetState" cname="gst_element_set_state">
        <return-type type="GstStateChangeReturn"/>
        <parameters>
          <parameter name="state" type="GstState"/>
        </parameters>
      </method>
      <method name="SyncStateWithParent" cname="gst_element_sync_state_with_parent">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="Unlink" cname="gst_element_unlink">
        <return-type type="void"/>
        <parameters>
          <parameter name="dest" type="GstElement*"/>
        </parameters>
      </method>
      <method name="UnlinkPads" cname="gst_element_unlink_pads">
        <return-type type="void"/>
        <parameters>
          <parameter name="srcpadname" type="const-gchar*"/>
          <parameter name="dest" type="GstElement*"/>
          <parameter name="destpadname" type="const-gchar*"/>
        </parameters>
      </method>
      <field cname="object" access="public" writeable="false" readable="true" name="Object" type="GstObject*"/>
      <field cname="state_lock" access="public" writeable="false" readable="true" name="StateLock" type="GRecMutex">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="state_cond" access="public" writeable="false" readable="true" name="StateCond" type="GCond">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="state_cookie" access="public" writeable="false" readable="true" name="StateCookie" type="guint32"/>
      <field cname="target_state" access="public" writeable="false" readable="true" name="TargetState" type="GstState"/>
      <field cname="current_state" access="public" writeable="false" readable="true" name="CurrentState" type="GstState"/>
      <field cname="next_state" access="public" writeable="false" readable="true" name="NextState" type="GstState"/>
      <field cname="pending_state" access="public" writeable="false" readable="true" name="PendingState" type="GstState"/>
      <field cname="last_return" access="public" writeable="false" readable="true" name="LastReturn" type="GstStateChangeReturn"/>
      <field cname="bus" access="public" writeable="false" readable="true" name="Bus" type="GstBus*"/>
      <field cname="clock" access="public" writeable="false" readable="true" name="Clock" type="GstClock*"/>
      <field cname="base_time" access="public" writeable="false" readable="true" name="BaseTime" type="gint64"/>
      <field cname="start_time" access="public" writeable="false" readable="true" name="StartTime" type="guint64"/>
      <field cname="numpads" access="public" writeable="false" readable="true" name="Numpads" type="guint16"/>
      <field cname="pads" access="public" writeable="false" readable="true" name="Pads" type="GstPad*" element_type="GstPad*"/>
      <field cname="numsrcpads" access="public" writeable="false" readable="true" name="Numsrcpads" type="guint16"/>
      <field cname="srcpads" access="public" writeable="false" readable="true" name="Srcpads" type="GstPad*" element_type="GstPad*"/>
      <field cname="numsinkpads" access="public" writeable="false" readable="true" name="Numsinkpads" type="guint16"/>
      <field cname="sinkpads" access="public" writeable="false" readable="true" name="Sinkpads" type="GstPad*" element_type="GstPad*"/>
      <field cname="pads_cookie" access="public" writeable="false" readable="true" name="PadsCookie" type="guint32"/>
      <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
      <signal name="NoMorePads" cname="no-more-pads" when="last" field_name="no_more_pads">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="PadAdded" cname="pad-added" when="last" field_name="pad_added">
        <return-type type="void"/>
        <parameters>
          <parameter name="new_pad" type="GstPad*"/>
        </parameters>
      </signal>
      <signal name="PadRemoved" cname="pad-removed" when="last" field_name="pad_removed">
        <return-type type="void"/>
        <parameters>
          <parameter name="old_pad" type="GstPad*"/>
        </parameters>
      </signal>
    </object>
    <object name="ElementFactory" cname="GstElementFactory" abstract="false" opaque="false" hidden="false" parent="GstPluginFeature">
      <class_struct cname="GstElementFactoryClass"/>
      <method name="GetType" cname="gst_element_factory_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="Find" cname="gst_element_factory_find" shared="true">
        <return-type type="GstElementFactory*" owned="true"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="ListFilter" cname="gst_element_factory_list_filter" shared="true">
        <return-type type="GstElementFactory*" elements_owned="true" element_type="GstElementFactory*" owned="true"/>
        <parameters>
          <parameter name="list" type="GstElementFactory*" element_type="GstElementFactory*"/>
          <parameter name="caps" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="direction" type="GstPadDirection"/>
          <parameter name="subsetonly" type="gboolean"/>
        </parameters>
      </method>
      <method name="ListGetElements" cname="gst_element_factory_list_get_elements" shared="true">
        <return-type type="GstElementFactory*" elements_owned="true" element_type="GstElementFactory*" owned="true"/>
        <parameters>
          <parameter name="type" type="guint64"/>
          <parameter name="minrank" type="GstRank"/>
        </parameters>
      </method>
      <method name="Make" cname="gst_element_factory_make" shared="true">
        <return-type type="GstElement*"/>
        <parameters>
          <parameter name="factoryname" type="const-gchar*"/>
          <parameter allow-none="1" name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="CanSinkAllCaps" cname="gst_element_factory_can_sink_all_caps">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="caps" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="CanSinkAnyCaps" cname="gst_element_factory_can_sink_any_caps">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="caps" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="CanSrcAllCaps" cname="gst_element_factory_can_src_all_caps">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="caps" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="CanSrcAnyCaps" cname="gst_element_factory_can_src_any_caps">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="caps" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Create" cname="gst_element_factory_create">
        <return-type type="GstElement*"/>
        <parameters>
          <parameter allow-none="1" name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetElementType" cname="gst_element_factory_get_element_type">
        <return-type type="GType"/>
        <parameters/>
      </method>
      <method name="GetMetadata" cname="gst_element_factory_get_metadata">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="key" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetMetadataKeys" cname="gst_element_factory_get_metadata_keys">
        <return-type type="gchar***" owned="true" array="true" null_term_array="true"/>
        <parameters/>
      </method>
      <method name="GetNumPadTemplates" cname="gst_element_factory_get_num_pad_templates">
        <return-type type="guint"/>
        <parameters/>
      </method>
      <method name="GetStaticPadTemplates" cname="gst_element_factory_get_static_pad_templates">
        <return-type type="GList*" element_type="GList*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetUriProtocols" cname="gst_element_factory_get_uri_protocols">
        <return-type type="const-gchar**" array="true" null_term_array="true"/>
        <parameters/>
      </method>
      <method name="GetUriType" cname="gst_element_factory_get_uri_type">
        <return-type type="GstURIType"/>
        <parameters/>
      </method>
      <method name="HasInterface" cname="gst_element_factory_has_interface">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="interfacename" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="ListIsType" cname="gst_element_factory_list_is_type">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="type" type="guint64"/>
        </parameters>
      </method>
    </object>
    <object name="GhostPad" cname="GstGhostPad" abstract="false" opaque="false" hidden="false" parent="GstProxyPad">
      <class_struct cname="GstGhostPadClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GstProxyPadClass">
          <warning>missing glib:type-name</warning>
        </field>
        <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
      </class_struct>
      <method name="GetType" cname="gst_ghost_pad_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gst_ghost_pad_new">
        <parameters>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="target" type="GstPad*"/>
        </parameters>
      </constructor>
      <constructor cname="gst_ghost_pad_new_from_template">
        <parameters>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="target" type="GstPad*"/>
          <parameter name="templ" type="GstPadTemplate*"/>
        </parameters>
      </constructor>
      <constructor cname="gst_ghost_pad_new_no_target">
        <parameters>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="dir" type="GstPadDirection"/>
        </parameters>
      </constructor>
      <constructor cname="gst_ghost_pad_new_no_target_from_template">
        <parameters>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="templ" type="GstPadTemplate*"/>
        </parameters>
      </constructor>
      <method name="ActivateModeDefault" cname="gst_ghost_pad_activate_mode_default" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="pad" type="GstPad*"/>
          <parameter name="parent" type="GstObject*"/>
          <parameter name="mode" type="GstPadMode"/>
          <parameter name="active" type="gboolean"/>
        </parameters>
      </method>
      <method name="InternalActivateModeDefault" cname="gst_ghost_pad_internal_activate_mode_default" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="pad" type="GstPad*"/>
          <parameter name="parent" type="GstObject*"/>
          <parameter name="mode" type="GstPadMode"/>
          <parameter name="active" type="gboolean"/>
        </parameters>
      </method>
      <method name="Construct" cname="gst_ghost_pad_construct">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetTarget" cname="gst_ghost_pad_get_target">
        <return-type type="GstPad*" owned="true"/>
        <parameters/>
      </method>
      <method name="SetTarget" cname="gst_ghost_pad_set_target">
        <return-type type="gboolean*" owned="true"/>
        <parameters>
          <parameter allow-none="1" name="newtarget" type="GstPad*"/>
        </parameters>
      </method>
      <field cname="pad" access="public" writeable="false" readable="true" name="Pad" type="GstProxyPad*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GstGhostPadPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="Object" cname="GstObject" abstract="true" opaque="false" hidden="false" parent="GInitiallyUnowned">
      <class_struct cname="GstObjectClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GInitiallyUnownedClass">
          <warning>missing glib:type-name</warning>
        </field>
        <field cname="path_string_separator" access="public" writeable="false" readable="true" name="PathStringSeparator" type="gchar*"/>
        <method signal_vm="deep_notify"/>
        <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
      </class_struct>
      <method name="GetType" cname="gst_object_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="CheckUniqueness" cname="gst_object_check_uniqueness" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="list" type="GstObject*" element_type="GstObject*"/>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="DefaultDeepNotify" cname="gst_object_default_deep_notify" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="_object" type="GObject*"/>
          <parameter name="orig" type="GstObject*"/>
          <parameter name="pspec" type="GParamSpec*"/>
          <parameter allow-none="1" name="excluded_props" type="const-gchar**" array="true" null_term_array="true"/>
        </parameters>
      </method>
      <method name="Replace" cname="gst_object_replace" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="oldobj" type="GstObject*" owned="true" pass_as="ref"/>
          <parameter name="newobj" type="GstObject*"/>
        </parameters>
      </method>
      <method name="AddControlBinding" cname="gst_object_add_control_binding">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="binding" type="GstControlBinding*" owned="true"/>
        </parameters>
      </method>
      <method name="DefaultError" cname="gst_object_default_error">
        <return-type type="void"/>
        <parameters>
          <parameter name="error" type="GError*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter allow-none="1" name="debug" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetControlBinding" cname="gst_object_get_control_binding">
        <return-type type="GstControlBinding*" owned="true"/>
        <parameters>
          <parameter name="property_name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetControlRate" cname="gst_object_get_control_rate">
        <return-type type="guint64"/>
        <parameters/>
      </method>
      <method name="GetGValueArray" cname="gst_object_get_g_value_array">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="property_name" type="const-gchar*"/>
          <parameter name="timestamp" type="guint64"/>
          <parameter name="interval" type="guint64"/>
          <parameter name="n_values" type="guint"/>
          <parameter name="values" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetName" cname="gst_object_get_name">
        <return-type type="gchar*" owned="true"/>
        <parameters/>
      </method>
      <method name="GetParent" cname="gst_object_get_parent">
        <return-type type="GstObject*" owned="true"/>
        <parameters/>
      </method>
      <method name="GetPathString" cname="gst_object_get_path_string">
        <return-type type="gchar*" owned="true"/>
        <parameters/>
      </method>
      <method name="GetValue" cname="gst_object_get_value">
        <return-type type="GValue*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="property_name" type="const-gchar*"/>
          <parameter name="timestamp" type="guint64"/>
        </parameters>
      </method>
      <method name="GetValueArray" cname="gst_object_get_value_array">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="property_name" type="const-gchar*"/>
          <parameter name="timestamp" type="guint64"/>
          <parameter name="interval" type="guint64"/>
          <parameter name="n_values" type="guint"/>
          <parameter name="values" type="gpointer"/>
        </parameters>
      </method>
      <method name="HasActiveControlBindings" cname="gst_object_has_active_control_bindings">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="HasAncestor" cname="gst_object_has_ancestor">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="ancestor" type="GstObject*"/>
        </parameters>
      </method>
      <method name="Ref" cname="gst_object_ref">
        <return-type type="GstObject*" owned="true"/>
        <parameters/>
      </method>
      <method name="RemoveControlBinding" cname="gst_object_remove_control_binding">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="binding" type="GstControlBinding*"/>
        </parameters>
      </method>
      <method name="SetControlBindingDisabled" cname="gst_object_set_control_binding_disabled">
        <return-type type="void"/>
        <parameters>
          <parameter name="property_name" type="const-gchar*"/>
          <parameter name="disabled" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetControlBindingsDisabled" cname="gst_object_set_control_bindings_disabled">
        <return-type type="void"/>
        <parameters>
          <parameter name="disabled" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetControlRate" cname="gst_object_set_control_rate">
        <return-type type="void"/>
        <parameters>
          <parameter name="control_rate" type="guint64"/>
        </parameters>
      </method>
      <method name="SetName" cname="gst_object_set_name">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetParent" cname="gst_object_set_parent">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="parent" type="GstObject*"/>
        </parameters>
      </method>
      <method name="SuggestNextSync" cname="gst_object_suggest_next_sync">
        <return-type type="guint64"/>
        <parameters/>
      </method>
      <method name="SyncValues" cname="gst_object_sync_values">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="timestamp" type="guint64"/>
        </parameters>
      </method>
      <method name="Unparent" cname="gst_object_unparent">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="Unref" cname="gst_object_unref">
        <return-type type="void"/>
        <parameters/>
      </method>
      <property name="Name" cname="name" type="gchar*" readable="true" writeable="true" construct="true" construct-only="false"/>
      <property name="Parent" cname="parent" type="GstObject*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="object" access="public" writeable="false" readable="true" name="Object" type="GInitiallyUnowned*"/>
      <field cname="lock" access="public" writeable="false" readable="true" name="Lock" type="GMutex*"/>
      <field cname="name" access="public" writeable="false" readable="true" name="NameField" type="gchar*"/>
      <field cname="parent" access="public" writeable="false" readable="true" name="ParentField" type="GstObject*"/>
      <field cname="flags" access="public" writeable="false" readable="true" name="Flags" type="guint32"/>
      <field cname="control_bindings" access="private" writeable="false" readable="false" name="ControlBindings" type="gpointer" element_type="gpointer"/>
      <field cname="control_rate" access="private" writeable="false" readable="false" name="ControlRate" type="guint64"/>
      <field cname="last_sync" access="private" writeable="false" readable="false" name="LastSync" type="guint64"/>
      <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer"/>
      <signal name="DeepNotify" cname="deep-notify" when="first" field_name="deep_notify">
        <return-type type="void"/>
        <parameters>
          <parameter name="prop_object" type="GstObject*"/>
          <parameter name="prop" type="GParamSpec*"/>
        </parameters>
      </signal>
    </object>
    <object name="Pad" cname="GstPad" abstract="false" opaque="false" hidden="false" parent="GstObject">
      <class_struct cname="GstPadClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GstObjectClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method signal_vm="linked"/>
        <method signal_vm="unlinked"/>
        <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
      </class_struct>
      <method name="GetType" cname="gst_pad_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gst_pad_new">
        <parameters>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="direction" type="GstPadDirection"/>
        </parameters>
      </constructor>
      <constructor cname="gst_pad_new_from_static_template">
        <parameters>
          <parameter name="templ" type="GstStaticPadTemplate*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </constructor>
      <constructor cname="gst_pad_new_from_template">
        <parameters>
          <parameter name="templ" type="GstPadTemplate*"/>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </constructor>
      <method name="ActivateMode" cname="gst_pad_activate_mode">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="mode" type="GstPadMode"/>
          <parameter name="active" type="gboolean"/>
        </parameters>
      </method>
      <method name="AddProbe" cname="gst_pad_add_probe">
        <return-type type="gulong"/>
        <parameters>
          <parameter name="mask" type="GstPadProbeType"/>
          <parameter closure="2" destroy="3" scope="notified" name="callback" type="GstPadProbeCallback"/>
          <parameter name="user_data" type="gpointer"/>
          <parameter scope="async" name="destroy_data" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="CanLink" cname="gst_pad_can_link">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="sinkpad" type="GstPad*"/>
        </parameters>
      </method>
      <method name="Chain" cname="gst_pad_chain">
        <return-type type="GstFlowReturn"/>
        <parameters>
          <parameter name="buffer" type="GstBuffer*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ChainList" cname="gst_pad_chain_list">
        <return-type type="GstFlowReturn"/>
        <parameters>
          <parameter name="list" type="GstBufferList*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="CheckReconfigure" cname="gst_pad_check_reconfigure">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="CreateStreamId" cname="gst_pad_create_stream_id">
        <return-type type="gchar*" owned="true"/>
        <parameters>
          <parameter name="parent" type="GstElement*"/>
          <parameter allow-none="1" name="stream_id" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="EventDefault" cname="gst_pad_event_default">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="parent" type="GstObject*"/>
          <parameter name="event" type="GstEvent*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Forward" cname="gst_pad_forward">
        <return-type type="gboolean"/>
        <parameters>
          <parameter closure="1" scope="call" name="forward" type="GstPadForwardFunction"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="GetAllowedCaps" cname="gst_pad_get_allowed_caps">
        <return-type type="GstCaps*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetCurrentCaps" cname="gst_pad_get_current_caps">
        <return-type type="GstCaps*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetDirection" cname="gst_pad_get_direction">
        <return-type type="GstPadDirection"/>
        <parameters/>
      </method>
      <method name="GetElementPrivate" cname="gst_pad_get_element_private">
        <return-type type="gpointer"/>
        <parameters/>
      </method>
      <method name="GetOffset" cname="gst_pad_get_offset">
        <return-type type="gint64"/>
        <parameters/>
      </method>
      <method name="GetPadTemplate" cname="gst_pad_get_pad_template">
        <return-type type="GstPadTemplate*" owned="true"/>
        <parameters/>
      </method>
      <method name="GetPadTemplateCaps" cname="gst_pad_get_pad_template_caps">
        <return-type type="GstCaps*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetParentElement" cname="gst_pad_get_parent_element">
        <return-type type="GstElement*" owned="true"/>
        <parameters/>
      </method>
      <method name="GetPeer" cname="gst_pad_get_peer">
        <return-type type="GstPad*" owned="true"/>
        <parameters/>
      </method>
      <method name="GetRange" cname="gst_pad_get_range">
        <return-type type="GstFlowReturn"/>
        <parameters>
          <parameter name="offset" type="guint64"/>
          <parameter name="size" type="guint"/>
          <parameter name="buffer" type="GstBuffer**" owned="true" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetStickyEvent" cname="gst_pad_get_sticky_event">
        <return-type type="GstEvent*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="event_type" type="GstEventType"/>
          <parameter name="idx" type="guint"/>
        </parameters>
      </method>
      <method name="HasCurrentCaps" cname="gst_pad_has_current_caps">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="IsActive" cname="gst_pad_is_active">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="IsBlocked" cname="gst_pad_is_blocked">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="IsBlocking" cname="gst_pad_is_blocking">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="IsLinked" cname="gst_pad_is_linked">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="IterateInternalLinks" cname="gst_pad_iterate_internal_links">
        <return-type type="GstIterator*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="IterateInternalLinksDefault" cname="gst_pad_iterate_internal_links_default">
        <return-type type="GstIterator*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="parent" type="GstObject*"/>
        </parameters>
      </method>
      <method name="Link" cname="gst_pad_link">
        <return-type type="GstPadLinkReturn"/>
        <parameters>
          <parameter name="sinkpad" type="GstPad*"/>
        </parameters>
      </method>
      <method name="LinkFull" cname="gst_pad_link_full">
        <return-type type="GstPadLinkReturn"/>
        <parameters>
          <parameter name="sinkpad" type="GstPad*"/>
          <parameter name="flags" type="GstPadLinkCheck"/>
        </parameters>
      </method>
      <method name="MarkReconfigure" cname="gst_pad_mark_reconfigure">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="NeedsReconfigure" cname="gst_pad_needs_reconfigure">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="PauseTask" cname="gst_pad_pause_task">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="PeerQuery" cname="gst_pad_peer_query">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="query" type="GstQuery*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="PeerQueryAcceptCaps" cname="gst_pad_peer_query_accept_caps">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="caps" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="PeerQueryCaps" cname="gst_pad_peer_query_caps">
        <return-type type="GstCaps*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter allow-none="1" name="filter" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="PeerQueryConvert" cname="gst_pad_peer_query_convert">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="src_format" type="GstFormat"/>
          <parameter name="src_val" type="gint64"/>
          <parameter name="dest_format" type="GstFormat"/>
          <parameter name="dest_val" type="gint64*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="PeerQueryDuration" cname="gst_pad_peer_query_duration">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="format" type="GstFormat"/>
          <parameter allow-none="1" name="duration" type="gint64*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="PeerQueryPosition" cname="gst_pad_peer_query_position">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="format" type="GstFormat"/>
          <parameter allow-none="1" name="cur" type="gint64*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ProxyQueryAcceptCaps" cname="gst_pad_proxy_query_accept_caps">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="query" type="GstQuery*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ProxyQueryCaps" cname="gst_pad_proxy_query_caps">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="query" type="GstQuery*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="PullRange" cname="gst_pad_pull_range">
        <return-type type="GstFlowReturn"/>
        <parameters>
          <parameter name="offset" type="guint64"/>
          <parameter name="size" type="guint"/>
          <parameter name="buffer" type="GstBuffer**" owned="true" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Push" cname="gst_pad_push">
        <return-type type="GstFlowReturn"/>
        <parameters>
          <parameter name="buffer" type="GstBuffer*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="PushEvent" cname="gst_pad_push_event">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="event" type="GstEvent*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="PushList" cname="gst_pad_push_list">
        <return-type type="GstFlowReturn"/>
        <parameters>
          <parameter name="list" type="GstBufferList*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Query" cname="gst_pad_query">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="query" type="GstQuery*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="QueryAcceptCaps" cname="gst_pad_query_accept_caps">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="caps" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="QueryCaps" cname="gst_pad_query_caps">
        <return-type type="GstCaps*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter allow-none="1" name="filter" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="QueryConvert" cname="gst_pad_query_convert">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="src_format" type="GstFormat"/>
          <parameter name="src_val" type="gint64"/>
          <parameter name="dest_format" type="GstFormat"/>
          <parameter name="dest_val" type="gint64*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="QueryDefault" cname="gst_pad_query_default">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="parent" type="GstObject*"/>
          <parameter name="query" type="GstQuery*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="QueryDuration" cname="gst_pad_query_duration">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="format" type="GstFormat"/>
          <parameter allow-none="1" name="duration" type="gint64*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="QueryPosition" cname="gst_pad_query_position">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="format" type="GstFormat"/>
          <parameter name="cur" type="gint64*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="RemoveProbe" cname="gst_pad_remove_probe">
        <return-type type="void"/>
        <parameters>
          <parameter name="id" type="gulong"/>
        </parameters>
      </method>
      <method name="SendEvent" cname="gst_pad_send_event">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="event" type="GstEvent*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetActivateFunctionFull" cname="gst_pad_set_activate_function_full">
        <return-type type="void"/>
        <parameters>
          <parameter closure="1" destroy="2" scope="notified" name="activate" type="GstPadActivateFunction"/>
          <parameter name="user_data" type="gpointer"/>
          <parameter scope="async" name="notify" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="SetActivatemodeFunctionFull" cname="gst_pad_set_activatemode_function_full">
        <return-type type="void"/>
        <parameters>
          <parameter closure="1" destroy="2" scope="notified" name="activatemode" type="GstPadActivateModeFunction"/>
          <parameter name="user_data" type="gpointer"/>
          <parameter scope="async" name="notify" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="SetActive" cname="gst_pad_set_active">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="active" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetChainFunctionFull" cname="gst_pad_set_chain_function_full">
        <return-type type="void"/>
        <parameters>
          <parameter closure="1" destroy="2" scope="notified" name="chain" type="GstPadChainFunction"/>
          <parameter name="user_data" type="gpointer"/>
          <parameter scope="async" name="notify" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="SetChainListFunctionFull" cname="gst_pad_set_chain_list_function_full">
        <return-type type="void"/>
        <parameters>
          <parameter closure="1" destroy="2" scope="notified" name="chainlist" type="GstPadChainListFunction"/>
          <parameter name="user_data" type="gpointer"/>
          <parameter scope="async" name="notify" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="SetElementPrivate" cname="gst_pad_set_element_private">
        <return-type type="void"/>
        <parameters>
          <parameter name="priv" type="gpointer"/>
        </parameters>
      </method>
      <method name="SetEventFunctionFull" cname="gst_pad_set_event_function_full">
        <return-type type="void"/>
        <parameters>
          <parameter closure="1" destroy="2" scope="notified" name="event" type="GstPadEventFunction"/>
          <parameter name="user_data" type="gpointer"/>
          <parameter scope="async" name="notify" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="SetGetrangeFunctionFull" cname="gst_pad_set_getrange_function_full">
        <return-type type="void"/>
        <parameters>
          <parameter closure="1" destroy="2" scope="notified" name="get" type="GstPadGetRangeFunction"/>
          <parameter name="user_data" type="gpointer"/>
          <parameter scope="async" name="notify" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="SetIterateInternalLinksFunctionFull" cname="gst_pad_set_iterate_internal_links_function_full">
        <return-type type="void"/>
        <parameters>
          <parameter closure="1" destroy="2" scope="notified" name="iterintlink" type="GstPadIterIntLinkFunction"/>
          <parameter name="user_data" type="gpointer"/>
          <parameter scope="async" name="notify" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="SetLinkFunctionFull" cname="gst_pad_set_link_function_full">
        <return-type type="void"/>
        <parameters>
          <parameter closure="1" destroy="2" scope="notified" name="link" type="GstPadLinkFunction"/>
          <parameter name="user_data" type="gpointer"/>
          <parameter scope="async" name="notify" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="SetOffset" cname="gst_pad_set_offset">
        <return-type type="void"/>
        <parameters>
          <parameter name="offset" type="gint64"/>
        </parameters>
      </method>
      <method name="SetQueryFunctionFull" cname="gst_pad_set_query_function_full">
        <return-type type="void"/>
        <parameters>
          <parameter closure="1" destroy="2" scope="notified" name="query" type="GstPadQueryFunction"/>
          <parameter name="user_data" type="gpointer"/>
          <parameter scope="async" name="notify" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="SetUnlinkFunctionFull" cname="gst_pad_set_unlink_function_full">
        <return-type type="void"/>
        <parameters>
          <parameter closure="1" destroy="2" scope="notified" name="unlink" type="GstPadUnlinkFunction"/>
          <parameter name="user_data" type="gpointer"/>
          <parameter scope="async" name="notify" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="StartTask" cname="gst_pad_start_task">
        <return-type type="gboolean"/>
        <parameters>
          <parameter closure="1" destroy="2" scope="notified" name="func" type="GstTaskFunction"/>
          <parameter name="user_data" type="gpointer"/>
          <parameter scope="async" name="notify" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="StickyEventsForeach" cname="gst_pad_sticky_events_foreach">
        <return-type type="void"/>
        <parameters>
          <parameter closure="1" scope="call" name="foreach_func" type="GstPadStickyEventsForeachFunction"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="StopTask" cname="gst_pad_stop_task">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="Unlink" cname="gst_pad_unlink">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="sinkpad" type="GstPad*"/>
        </parameters>
      </method>
      <method name="UseFixedCaps" cname="gst_pad_use_fixed_caps">
        <return-type type="void"/>
        <parameters/>
      </method>
      <property name="Caps" cname="caps" type="GstCaps*" readable="true" writeable="false" construct="false" construct-only="false"/>
      <property name="Direction" cname="direction" type="GstPadDirection" readable="true" writeable="true" construct="false" construct-only="true"/>
      <property name="Template" cname="template" type="GstPadTemplate*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="object" access="public" writeable="false" readable="true" name="Object" type="GstObject*"/>
      <field cname="element_private" access="public" writeable="false" readable="true" name="ElementPrivate" type="gpointer"/>
      <field cname="padtemplate" access="public" writeable="false" readable="true" name="Padtemplate" type="GstPadTemplate*"/>
      <field cname="direction" access="public" writeable="false" readable="true" name="DirectionField" type="GstPadDirection"/>
      <field cname="stream_rec_lock" access="private" writeable="false" readable="false" name="StreamRecLock" type="GRecMutex">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="task" access="private" writeable="false" readable="false" name="Task" type="GstTask*"/>
      <field cname="block_cond" access="private" writeable="false" readable="false" name="BlockCond" type="GCond">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="probes" access="private" writeable="false" readable="false" name="Probes" type="GHookList">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="mode" access="private" writeable="false" readable="false" name="Mode" type="GstPadMode"/>
      <field cname="activatefunc" access="private" writeable="false" readable="false" name="Activatefunc" type="GstPadActivateFunction"/>
      <field cname="activatedata" access="private" writeable="false" readable="false" name="Activatedata" type="gpointer"/>
      <field cname="activatenotify" access="private" writeable="false" readable="false" name="Activatenotify" type="GDestroyNotify"/>
      <field cname="activatemodefunc" access="private" writeable="false" readable="false" name="Activatemodefunc" type="GstPadActivateModeFunction"/>
      <field cname="activatemodedata" access="private" writeable="false" readable="false" name="Activatemodedata" type="gpointer"/>
      <field cname="activatemodenotify" access="private" writeable="false" readable="false" name="Activatemodenotify" type="GDestroyNotify"/>
      <field cname="peer" access="private" writeable="false" readable="false" name="Peer" type="GstPad*"/>
      <field cname="linkfunc" access="private" writeable="false" readable="false" name="Linkfunc" type="GstPadLinkFunction"/>
      <field cname="linkdata" access="private" writeable="false" readable="false" name="Linkdata" type="gpointer"/>
      <field cname="linknotify" access="private" writeable="false" readable="false" name="Linknotify" type="GDestroyNotify"/>
      <field cname="unlinkfunc" access="private" writeable="false" readable="false" name="Unlinkfunc" type="GstPadUnlinkFunction"/>
      <field cname="unlinkdata" access="private" writeable="false" readable="false" name="Unlinkdata" type="gpointer"/>
      <field cname="unlinknotify" access="private" writeable="false" readable="false" name="Unlinknotify" type="GDestroyNotify"/>
      <field cname="chainfunc" access="private" writeable="false" readable="false" name="Chainfunc" type="GstPadChainFunction"/>
      <field cname="chaindata" access="private" writeable="false" readable="false" name="Chaindata" type="gpointer"/>
      <field cname="chainnotify" access="private" writeable="false" readable="false" name="Chainnotify" type="GDestroyNotify"/>
      <field cname="chainlistfunc" access="private" writeable="false" readable="false" name="Chainlistfunc" type="GstPadChainListFunction"/>
      <field cname="chainlistdata" access="private" writeable="false" readable="false" name="Chainlistdata" type="gpointer"/>
      <field cname="chainlistnotify" access="private" writeable="false" readable="false" name="Chainlistnotify" type="GDestroyNotify"/>
      <field cname="getrangefunc" access="private" writeable="false" readable="false" name="Getrangefunc" type="GstPadGetRangeFunction"/>
      <field cname="getrangedata" access="private" writeable="false" readable="false" name="Getrangedata" type="gpointer"/>
      <field cname="getrangenotify" access="private" writeable="false" readable="false" name="Getrangenotify" type="GDestroyNotify"/>
      <field cname="eventfunc" access="private" writeable="false" readable="false" name="Eventfunc" type="GstPadEventFunction"/>
      <field cname="eventdata" access="private" writeable="false" readable="false" name="Eventdata" type="gpointer"/>
      <field cname="eventnotify" access="private" writeable="false" readable="false" name="Eventnotify" type="GDestroyNotify"/>
      <field cname="offset" access="private" writeable="false" readable="false" name="Offset" type="gint64"/>
      <field cname="queryfunc" access="private" writeable="false" readable="false" name="Queryfunc" type="GstPadQueryFunction"/>
      <field cname="querydata" access="private" writeable="false" readable="false" name="Querydata" type="gpointer"/>
      <field cname="querynotify" access="private" writeable="false" readable="false" name="Querynotify" type="GDestroyNotify"/>
      <field cname="iterintlinkfunc" access="private" writeable="false" readable="false" name="Iterintlinkfunc" type="GstPadIterIntLinkFunction"/>
      <field cname="iterintlinkdata" access="private" writeable="false" readable="false" name="Iterintlinkdata" type="gpointer"/>
      <field cname="iterintlinknotify" access="private" writeable="false" readable="false" name="Iterintlinknotify" type="GDestroyNotify"/>
      <field cname="num_probes" access="private" writeable="false" readable="false" name="NumProbes" type="gint"/>
      <field cname="num_blocked" access="private" writeable="false" readable="false" name="NumBlocked" type="gint"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GstPadPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
      <signal name="Linked" cname="linked" when="last" field_name="linked">
        <return-type type="void"/>
        <parameters>
          <parameter name="peer" type="GstPad*"/>
        </parameters>
      </signal>
      <signal name="Unlinked" cname="unlinked" when="last" field_name="unlinked">
        <return-type type="void"/>
        <parameters>
          <parameter name="peer" type="GstPad*"/>
        </parameters>
      </signal>
    </object>
    <object name="PadTemplate" cname="GstPadTemplate" abstract="false" opaque="false" hidden="false" parent="GstObject">
      <class_struct cname="GstPadTemplateClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GstObjectClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method signal_vm="pad_created"/>
        <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
      </class_struct>
      <method name="GetType" cname="gst_pad_template_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gst_pad_template_new">
        <parameters>
          <parameter name="name_template" type="const-gchar*"/>
          <parameter name="direction" type="GstPadDirection"/>
          <parameter name="presence" type="GstPadPresence"/>
          <parameter name="caps" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </constructor>
      <method name="GetCaps" cname="gst_pad_template_get_caps">
        <return-type type="GstCaps*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <property name="Caps" cname="caps" type="GstCaps*" readable="true" writeable="true" construct="false" construct-only="true"/>
      <property name="Direction" cname="direction" type="GstPadDirection" readable="true" writeable="true" construct="false" construct-only="true"/>
      <property name="NameTemplate" cname="name-template" type="gchar*" readable="true" writeable="true" construct="false" construct-only="true"/>
      <property name="Presence" cname="presence" type="GstPadPresence" readable="true" writeable="true" construct="false" construct-only="true"/>
      <field cname="object" access="public" writeable="false" readable="true" name="Object" type="GstObject*"/>
      <field cname="name_template" access="public" writeable="false" readable="true" name="NameTemplateField" type="gchar*"/>
      <field cname="direction" access="public" writeable="false" readable="true" name="DirectionField" type="GstPadDirection"/>
      <field cname="presence" access="public" writeable="false" readable="true" name="PresenceField" type="GstPadPresence"/>
      <field cname="caps" access="public" writeable="false" readable="true" name="CapsField" type="GstCaps*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
      <signal name="PadCreated" cname="pad-created" when="last" field_name="pad_created">
        <return-type type="void"/>
        <parameters>
          <parameter name="pad" type="GstPad*"/>
        </parameters>
      </signal>
    </object>
    <object name="Pipeline" cname="GstPipeline" abstract="false" opaque="false" hidden="false" parent="GstBin">
      <implements>
        <interface cname="GstChildProxy"/>
      </implements>
      <class_struct cname="GstPipelineClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GstBinClass">
          <warning>missing glib:type-name</warning>
        </field>
        <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
      </class_struct>
      <method name="GetType" cname="gst_pipeline_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gst_pipeline_new">
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </constructor>
      <method name="AutoClock" cname="gst_pipeline_auto_clock">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="GetAutoFlushBus" cname="gst_pipeline_get_auto_flush_bus">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetBus" cname="gst_pipeline_get_bus">
        <return-type type="GstBus*" owned="true"/>
        <parameters/>
      </method>
      <method name="GetClock" cname="gst_pipeline_get_clock">
        <return-type type="GstClock*" owned="true"/>
        <parameters/>
      </method>
      <method name="GetDelay" cname="gst_pipeline_get_delay">
        <return-type type="guint64"/>
        <parameters/>
      </method>
      <method name="SetAutoFlushBus" cname="gst_pipeline_set_auto_flush_bus">
        <return-type type="void"/>
        <parameters>
          <parameter name="auto_flush" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetClock" cname="gst_pipeline_set_clock">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="clock" type="GstClock*"/>
        </parameters>
      </method>
      <method name="SetDelay" cname="gst_pipeline_set_delay">
        <return-type type="void"/>
        <parameters>
          <parameter name="delay" type="guint64"/>
        </parameters>
      </method>
      <method name="UseClock" cname="gst_pipeline_use_clock">
        <return-type type="void"/>
        <parameters>
          <parameter name="clock" type="GstClock*"/>
        </parameters>
      </method>
      <property name="AutoFlushBus" cname="auto-flush-bus" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Delay" cname="delay" type="guint64" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="bin" access="public" writeable="false" readable="true" name="Bin" type="GstBin*"/>
      <field cname="fixed_clock" access="public" writeable="false" readable="true" name="FixedClock" type="GstClock*"/>
      <field cname="stream_time" access="public" writeable="false" readable="true" name="StreamTime" type="guint64"/>
      <field cname="delay" access="public" writeable="false" readable="true" name="DelayField" type="guint64"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GstPipelinePrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
    </object>
    <object name="Plugin" cname="GstPlugin" abstract="false" opaque="false" hidden="false" parent="GstObject">
      <class_struct cname="GstPluginClass"/>
      <method name="GetType" cname="gst_plugin_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="ListFree" cname="gst_plugin_list_free" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="list" type="GstPlugin*" elements_owned="true" element_type="GstPlugin*" owned="true"/>
        </parameters>
      </method>
      <method name="LoadByName" cname="gst_plugin_load_by_name" shared="true">
        <return-type type="GstPlugin*" owned="true"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="LoadFile" cname="gst_plugin_load_file" shared="true">
        <return-type type="GstPlugin*" owned="true"/>
        <parameters throws="1">
          <parameter name="filename" type="const-gchar*"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="RegisterStatic" cname="gst_plugin_register_static" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="major_version" type="gint"/>
          <parameter name="minor_version" type="gint"/>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="description" type="const-gchar*"/>
          <parameter scope="call" name="init_func" type="GstPluginInitFunc"/>
          <parameter name="version" type="const-gchar*"/>
          <parameter name="license" type="const-gchar*"/>
          <parameter name="source" type="const-gchar*"/>
          <parameter name="package" type="const-gchar*"/>
          <parameter name="origin" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="RegisterStaticFull" cname="gst_plugin_register_static_full" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="major_version" type="gint"/>
          <parameter name="minor_version" type="gint"/>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="description" type="const-gchar*"/>
          <parameter closure="10" scope="call" name="init_full_func" type="GstPluginInitFullFunc"/>
          <parameter name="version" type="const-gchar*"/>
          <parameter name="license" type="const-gchar*"/>
          <parameter name="source" type="const-gchar*"/>
          <parameter name="package" type="const-gchar*"/>
          <parameter name="origin" type="const-gchar*"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="AddDependency" cname="gst_plugin_add_dependency">
        <return-type type="void"/>
        <parameters>
          <parameter name="env_vars" type="const-gchar*"/>
          <parameter name="paths" type="const-gchar*"/>
          <parameter name="names" type="const-gchar*"/>
          <parameter name="flags" type="GstPluginDependencyFlags"/>
        </parameters>
      </method>
      <method name="AddDependencySimple" cname="gst_plugin_add_dependency_simple">
        <return-type type="void"/>
        <parameters>
          <parameter name="env_vars" type="const-gchar*"/>
          <parameter name="paths" type="const-gchar*"/>
          <parameter name="names" type="const-gchar*"/>
          <parameter name="flags" type="GstPluginDependencyFlags"/>
        </parameters>
      </method>
      <method name="GetCacheData" cname="gst_plugin_get_cache_data">
        <return-type type="GstStructure*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetDescription" cname="gst_plugin_get_description">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetFilename" cname="gst_plugin_get_filename">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetLicense" cname="gst_plugin_get_license">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetName" cname="gst_plugin_get_name">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetOrigin" cname="gst_plugin_get_origin">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetPackage" cname="gst_plugin_get_package">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetReleaseDateString" cname="gst_plugin_get_release_date_string">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetSource" cname="gst_plugin_get_source">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetVersion" cname="gst_plugin_get_version">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="IsLoaded" cname="gst_plugin_is_loaded">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="Load" cname="gst_plugin_load">
        <return-type type="GstPlugin*" owned="true"/>
        <parameters/>
      </method>
      <method name="SetCacheData" cname="gst_plugin_set_cache_data">
        <return-type type="void"/>
        <parameters>
          <parameter name="cache_data" type="GstStructure*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
    </object>
    <object name="PluginFeature" cname="GstPluginFeature" abstract="true" opaque="false" hidden="false" parent="GstObject">
      <class_struct cname="GstPluginFeatureClass"/>
      <method name="GetType" cname="gst_plugin_feature_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="ListCopy" cname="gst_plugin_feature_list_copy" shared="true">
        <return-type type="GstPluginFeature*" elements_owned="true" element_type="GstPluginFeature*" owned="true"/>
        <parameters>
          <parameter name="list" type="GstPluginFeature*" element_type="GstPluginFeature*"/>
        </parameters>
      </method>
      <method name="ListDebug" cname="gst_plugin_feature_list_debug" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="list" type="GstPluginFeature*" element_type="GstPluginFeature*"/>
        </parameters>
      </method>
      <method name="ListFree" cname="gst_plugin_feature_list_free" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="list" type="GstPluginFeature*" elements_owned="true" element_type="GstPluginFeature*" owned="true"/>
        </parameters>
      </method>
      <method name="RankCompareFunc" cname="gst_plugin_feature_rank_compare_func" shared="true">
        <return-type type="gint"/>
        <parameters>
          <parameter name="p1" type="gpointer"/>
          <parameter name="p2" type="gpointer"/>
        </parameters>
      </method>
      <method name="CheckVersion" cname="gst_plugin_feature_check_version">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="min_major" type="guint"/>
          <parameter name="min_minor" type="guint"/>
          <parameter name="min_micro" type="guint"/>
        </parameters>
      </method>
      <method name="GetPlugin" cname="gst_plugin_feature_get_plugin">
        <return-type type="GstPlugin*" owned="true"/>
        <parameters/>
      </method>
      <method name="GetRank" cname="gst_plugin_feature_get_rank">
        <return-type type="guint"/>
        <parameters/>
      </method>
      <method name="Load" cname="gst_plugin_feature_load">
        <return-type type="GstPluginFeature*" owned="true"/>
        <parameters/>
      </method>
      <method name="SetRank" cname="gst_plugin_feature_set_rank">
        <return-type type="void"/>
        <parameters>
          <parameter name="rank" type="guint"/>
        </parameters>
      </method>
    </object>
    <object name="ProxyPad" cname="GstProxyPad" abstract="false" opaque="false" hidden="false" parent="GstPad">
      <class_struct cname="GstProxyPadClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GstPadClass">
          <warning>missing glib:type-name</warning>
        </field>
        <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="1"/>
      </class_struct>
      <method name="GetType" cname="gst_proxy_pad_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="ChainDefault" cname="gst_proxy_pad_chain_default" shared="true">
        <return-type type="GstFlowReturn"/>
        <parameters>
          <parameter name="pad" type="GstPad*"/>
          <parameter name="parent" type="GstObject*"/>
          <parameter name="buffer" type="GstBuffer*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ChainListDefault" cname="gst_proxy_pad_chain_list_default" shared="true">
        <return-type type="GstFlowReturn"/>
        <parameters>
          <parameter name="pad" type="GstPad*"/>
          <parameter name="parent" type="GstObject*"/>
          <parameter name="list" type="GstBufferList*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetrangeDefault" cname="gst_proxy_pad_getrange_default" shared="true">
        <return-type type="GstFlowReturn"/>
        <parameters>
          <parameter name="pad" type="GstPad*"/>
          <parameter name="parent" type="GstObject*"/>
          <parameter name="offset" type="guint64"/>
          <parameter name="size" type="guint"/>
          <parameter name="buffer" type="GstBuffer**" owned="true" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="IterateInternalLinksDefault" cname="gst_proxy_pad_iterate_internal_links_default" shared="true">
        <return-type type="GstIterator*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="pad" type="GstPad*"/>
          <parameter name="parent" type="GstObject*"/>
        </parameters>
      </method>
      <method name="GetInternal" cname="gst_proxy_pad_get_internal">
        <return-type type="GstProxyPad*" owned="true"/>
        <parameters/>
      </method>
      <field cname="pad" access="public" writeable="false" readable="true" name="Pad" type="GstPad*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GstProxyPadPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="Registry" cname="GstRegistry" abstract="false" opaque="false" hidden="false" parent="GstObject">
      <class_struct cname="GstRegistryClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GstObjectClass">
          <warning>missing glib:type-name</warning>
        </field>
      </class_struct>
      <method name="GetType" cname="gst_registry_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="ForkIsEnabled" cname="gst_registry_fork_is_enabled" shared="true">
        <return-type type="gboolean"/>
      </method>
      <method name="ForkSetEnabled" cname="gst_registry_fork_set_enabled" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="enabled" type="gboolean"/>
        </parameters>
      </method>
      <method name="Get" cname="gst_registry_get" shared="true">
        <return-type type="GstRegistry*"/>
      </method>
      <method name="AddFeature" cname="gst_registry_add_feature">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="feature" type="GstPluginFeature*" owned="true"/>
        </parameters>
      </method>
      <method name="AddPlugin" cname="gst_registry_add_plugin">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="plugin" type="GstPlugin*" owned="true"/>
        </parameters>
      </method>
      <method name="CheckFeatureVersion" cname="gst_registry_check_feature_version">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="feature_name" type="const-gchar*"/>
          <parameter name="min_major" type="guint"/>
          <parameter name="min_minor" type="guint"/>
          <parameter name="min_micro" type="guint"/>
        </parameters>
      </method>
      <method name="FeatureFilter" cname="gst_registry_feature_filter">
        <return-type type="GstPluginFeature*" elements_owned="true" element_type="GstPluginFeature*" owned="true"/>
        <parameters>
          <parameter closure="2" scope="call" name="filter" type="GstPluginFeatureFilter"/>
          <parameter name="first" type="gboolean"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="FindFeature" cname="gst_registry_find_feature">
        <return-type type="GstPluginFeature*" owned="true"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="type" type="GType"/>
        </parameters>
      </method>
      <method name="FindPlugin" cname="gst_registry_find_plugin">
        <return-type type="GstPlugin*" owned="true"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetFeatureList" cname="gst_registry_get_feature_list">
        <return-type type="GstPluginFeature*" elements_owned="true" element_type="GstPluginFeature*" owned="true"/>
        <parameters>
          <parameter name="type" type="GType"/>
        </parameters>
      </method>
      <method name="GetFeatureListByPlugin" cname="gst_registry_get_feature_list_by_plugin">
        <return-type type="GstPluginFeature*" elements_owned="true" element_type="GstPluginFeature*" owned="true"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetFeatureListCookie" cname="gst_registry_get_feature_list_cookie">
        <return-type type="guint32"/>
        <parameters/>
      </method>
      <method name="GetPluginList" cname="gst_registry_get_plugin_list">
        <return-type type="GstPlugin*" elements_owned="true" element_type="GstPlugin*" owned="true"/>
        <parameters/>
      </method>
      <method name="Lookup" cname="gst_registry_lookup">
        <return-type type="GstPlugin*" owned="true"/>
        <parameters>
          <parameter name="filename" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="LookupFeature" cname="gst_registry_lookup_feature">
        <return-type type="GstPluginFeature*" owned="true"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="PluginFilter" cname="gst_registry_plugin_filter">
        <return-type type="GstPlugin*" elements_owned="true" element_type="GstPlugin*" owned="true"/>
        <parameters>
          <parameter closure="2" scope="call" name="filter" type="GstPluginFilter"/>
          <parameter name="first" type="gboolean"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="RemoveFeature" cname="gst_registry_remove_feature">
        <return-type type="void"/>
        <parameters>
          <parameter name="feature" type="GstPluginFeature*"/>
        </parameters>
      </method>
      <method name="RemovePlugin" cname="gst_registry_remove_plugin">
        <return-type type="void"/>
        <parameters>
          <parameter name="plugin" type="GstPlugin*"/>
        </parameters>
      </method>
      <method name="ScanPath" cname="gst_registry_scan_path">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="path" type="const-gchar*"/>
        </parameters>
      </method>
      <field cname="object" access="public" writeable="false" readable="true" name="Object" type="GstObject*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GstRegistryPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <signal name="FeatureAdded" cname="feature-added" when="last">
        <return-type type="void"/>
        <parameters>
          <parameter name="feature" type="GstPluginFeature*"/>
        </parameters>
      </signal>
      <signal name="PluginAdded" cname="plugin-added" when="last">
        <return-type type="void"/>
        <parameters>
          <parameter name="plugin" type="GstPlugin*"/>
        </parameters>
      </signal>
    </object>
    <object name="SystemClock" cname="GstSystemClock" abstract="false" opaque="false" hidden="false" parent="GstClock">
      <class_struct cname="GstSystemClockClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GstClockClass">
          <warning>missing glib:type-name</warning>
        </field>
        <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
      </class_struct>
      <method name="GetType" cname="gst_system_clock_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="Obtain" cname="gst_system_clock_obtain" shared="true">
        <return-type type="GstClock*" owned="true"/>
      </method>
      <property name="ClockType" cname="clock-type" type="GstClockType" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="clock" access="public" writeable="false" readable="true" name="Clock" type="GstClock*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GstSystemClockPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
    </object>
    <object name="Task" cname="GstTask" abstract="false" opaque="false" hidden="false" parent="GstObject">
      <class_struct cname="GstTaskClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GstObjectClass">
          <warning>missing glib:type-name</warning>
        </field>
        <field cname="pool" access="private" writeable="false" readable="false" name="Pool" type="GstTaskPool*"/>
        <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
      </class_struct>
      <method name="GetType" cname="gst_task_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gst_task_new">
        <parameters>
          <parameter name="func" type="GstTaskFunction"/>
          <parameter name="user_data" type="gpointer"/>
          <parameter name="notify" type="GDestroyNotify"/>
        </parameters>
      </constructor>
      <method name="CleanupAll" cname="gst_task_cleanup_all" shared="true">
        <return-type type="void"/>
      </method>
      <method name="GetPool" cname="gst_task_get_pool">
        <return-type type="GstTaskPool*" owned="true"/>
        <parameters/>
      </method>
      <method name="GetState" cname="gst_task_get_state">
        <return-type type="GstTaskState"/>
        <parameters/>
      </method>
      <method name="Join" cname="gst_task_join">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="Pause" cname="gst_task_pause">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="SetEnterCallback" cname="gst_task_set_enter_callback">
        <return-type type="void"/>
        <parameters>
          <parameter closure="1" destroy="2" scope="notified" name="enter_func" type="GstTaskThreadFunc"/>
          <parameter name="user_data" type="gpointer"/>
          <parameter scope="async" name="notify" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="SetLeaveCallback" cname="gst_task_set_leave_callback">
        <return-type type="void"/>
        <parameters>
          <parameter closure="1" destroy="2" scope="notified" name="leave_func" type="GstTaskThreadFunc"/>
          <parameter name="user_data" type="gpointer"/>
          <parameter scope="async" name="notify" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="SetLock" cname="gst_task_set_lock">
        <return-type type="void"/>
        <parameters>
          <parameter name="mutex" type="GRecMutex*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetPool" cname="gst_task_set_pool">
        <return-type type="void"/>
        <parameters>
          <parameter name="pool" type="GstTaskPool*"/>
        </parameters>
      </method>
      <method name="SetState" cname="gst_task_set_state">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="state" type="GstTaskState"/>
        </parameters>
      </method>
      <method name="Start" cname="gst_task_start">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="Stop" cname="gst_task_stop">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <field cname="object" access="public" writeable="false" readable="true" name="Object" type="GstObject*"/>
      <field cname="state" access="public" writeable="false" readable="true" name="State" type="GstTaskState"/>
      <field cname="cond" access="public" writeable="false" readable="true" name="Cond" type="GCond">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="lock" access="public" writeable="false" readable="true" name="Lock" type="GRecMutex*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="func" access="public" writeable="false" readable="true" name="Func" type="GstTaskFunction"/>
      <field cname="user_data" access="public" writeable="false" readable="true" name="UserData" type="gpointer"/>
      <field cname="notify" access="public" writeable="false" readable="true" name="Notify" type="GDestroyNotify"/>
      <field cname="running" access="public" writeable="false" readable="true" name="Running" type="gboolean"/>
      <field cname="thread" access="private" writeable="false" readable="false" name="Thread" type="GThread*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GstTaskPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
    </object>
    <object name="TaskPool" cname="GstTaskPool" abstract="false" opaque="false" hidden="false" parent="GstObject">
      <class_struct cname="GstTaskPoolClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GstObjectClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="prepare"/>
        <method vm="cleanup"/>
        <method vm="push"/>
        <method vm="join"/>
        <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
      </class_struct>
      <method name="GetType" cname="gst_task_pool_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gst_task_pool_new" disable_void_ctor=""/>
      <virtual_method name="Cleanup" cname="cleanup">
        <return-type type="void"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="Join" cname="join">
        <return-type type="void"/>
        <parameters>
          <parameter name="id" type="gpointer"/>
        </parameters>
      </virtual_method>
      <virtual_method name="Prepare" cname="prepare">
        <return-type type="void"/>
        <parameters throws="1">
          <parameter name="error" type="GError**"/>
        </parameters>
      </virtual_method>
      <virtual_method name="Push" cname="push">
        <return-type type="gpointer"/>
        <parameters throws="1">
          <parameter closure="1" scope="async" name="func" type="GstTaskPoolFunction"/>
          <parameter closure="1" name="user_data" type="gpointer"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </virtual_method>
      <method name="Cleanup" cname="gst_task_pool_cleanup">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="Join" cname="gst_task_pool_join">
        <return-type type="void"/>
        <parameters>
          <parameter name="id" type="gpointer"/>
        </parameters>
      </method>
      <method name="Prepare" cname="gst_task_pool_prepare">
        <return-type type="void"/>
        <parameters throws="1">
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="Push" cname="gst_task_pool_push">
        <return-type type="gpointer"/>
        <parameters throws="1">
          <parameter closure="1" scope="async" name="func" type="GstTaskPoolFunction"/>
          <parameter name="user_data" type="gpointer"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <field cname="object" access="public" writeable="false" readable="true" name="Object" type="GstObject*"/>
      <field cname="pool" access="private" writeable="false" readable="false" name="Pool" type="GThreadPool*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
    </object>
    <object name="TypeFindFactory" cname="GstTypeFindFactory" abstract="false" opaque="false" hidden="false" parent="GstPluginFeature">
      <class_struct cname="GstTypeFindFactoryClass"/>
      <method name="GetType" cname="gst_type_find_factory_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="GetList" cname="gst_type_find_factory_get_list" shared="true">
        <return-type type="GstTypeFindFactory*" elements_owned="true" element_type="GstTypeFindFactory*" owned="true"/>
      </method>
      <method name="CallFunction" cname="gst_type_find_factory_call_function">
        <return-type type="void"/>
        <parameters>
          <parameter name="find" type="GstTypeFind*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetCaps" cname="gst_type_find_factory_get_caps">
        <return-type type="GstCaps*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetExtensions" cname="gst_type_find_factory_get_extensions">
        <return-type type="const-gchar**" array="true" null_term_array="true"/>
        <parameters/>
      </method>
      <method name="HasFunction" cname="gst_type_find_factory_has_function">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
    </object>
    <boxed name="AllocationParams" cname="GstAllocationParams" opaque="false" hidden="false">
      <method name="GetType" cname="gst_allocation_params_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <field cname="flags" access="public" writeable="true" readable="true" name="Flags" type="GstMemoryFlags"/>
      <field cname="align" access="public" writeable="true" readable="true" name="Align" type="gsize"/>
      <field cname="prefix" access="public" writeable="true" readable="true" name="Prefix" type="gsize"/>
      <field cname="padding" access="public" writeable="true" readable="true" name="Padding" type="gsize"/>
      <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
      <method name="Copy" cname="gst_allocation_params_copy">
        <return-type type="GstAllocationParams*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="Free" cname="gst_allocation_params_free">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="Init" cname="gst_allocation_params_init">
        <return-type type="void"/>
        <parameters/>
      </method>
    </boxed>
    <struct name="AllocatorPrivate" cname="GstAllocatorPrivate" opaque="true" hidden="true"/>
    <boxed name="AtomicQueue" cname="GstAtomicQueue" opaque="false" hidden="false">
      <method name="GetType" cname="gst_atomic_queue_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gst_atomic_queue_new">
        <parameters>
          <parameter name="initial_size" type="guint"/>
        </parameters>
      </constructor>
      <method name="Length" cname="gst_atomic_queue_length">
        <return-type type="guint"/>
        <parameters/>
      </method>
      <method name="Peek" cname="gst_atomic_queue_peek">
        <return-type type="gpointer"/>
        <parameters/>
      </method>
      <method name="Pop" cname="gst_atomic_queue_pop">
        <return-type type="gpointer*" owned="true"/>
        <parameters/>
      </method>
      <method name="Push" cname="gst_atomic_queue_push">
        <return-type type="void"/>
        <parameters>
          <parameter name="data" type="gpointer"/>
        </parameters>
      </method>
      <method name="Ref" cname="gst_atomic_queue_ref">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="Unref" cname="gst_atomic_queue_unref">
        <return-type type="void"/>
        <parameters/>
      </method>
    </boxed>
    <struct name="BinPrivate" cname="GstBinPrivate" opaque="true" hidden="true"/>
    <boxed name="Buffer" cname="GstBuffer" opaque="false" hidden="false">
      <method name="GetType" cname="gst_buffer_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <field cname="mini_object" access="public" writeable="true" readable="true" name="MiniObject" type="GstMiniObject">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="pool" access="public" writeable="true" readable="true" name="Pool" type="GstBufferPool*"/>
      <field cname="pts" access="public" writeable="true" readable="true" name="Pts" type="guint64"/>
      <field cname="dts" access="public" writeable="true" readable="true" name="Dts" type="guint64"/>
      <field cname="duration" access="public" writeable="true" readable="true" name="Duration" type="guint64"/>
      <field cname="offset" access="public" writeable="true" readable="true" name="Offset" type="guint64"/>
      <field cname="offset_end" access="public" writeable="true" readable="true" name="OffsetEnd" type="guint64"/>
      <constructor cname="gst_buffer_new" disable_void_ctor=""/>
      <constructor cname="gst_buffer_new_allocate">
        <parameters>
          <parameter name="allocator" type="GstAllocator*"/>
          <parameter name="size" type="gsize"/>
          <parameter name="params" type="GstAllocationParams*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </constructor>
      <constructor cname="gst_buffer_new_wrapped">
        <parameters>
          <parameter name="data" type="gpointer" array="true" array_length_param_index="1"/>
          <parameter name="size" type="gsize"/>
        </parameters>
      </constructor>
      <constructor cname="gst_buffer_new_wrapped_full">
        <parameters>
          <parameter name="flags" type="GstMemoryFlags"/>
          <parameter name="data" type="gpointer" array="true" array_length_param_index="4"/>
          <parameter name="maxsize" type="gsize"/>
          <parameter name="offset" type="gsize"/>
          <parameter name="size" type="gsize"/>
          <parameter name="user_data" type="gpointer"/>
          <parameter name="notify" type="GDestroyNotify"/>
        </parameters>
      </constructor>
      <method name="AddMeta" cname="gst_buffer_add_meta">
        <return-type type="GstMeta*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="info" type="GstMetaInfo*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="params" type="gpointer"/>
        </parameters>
      </method>
      <method name="Append" cname="gst_buffer_append">
        <return-type type="GstBuffer*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="buf2" type="GstBuffer*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="AppendMemory" cname="gst_buffer_append_memory">
        <return-type type="void"/>
        <parameters>
          <parameter name="mem" type="GstMemory*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="AppendRegion" cname="gst_buffer_append_region">
        <return-type type="GstBuffer*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="buf2" type="GstBuffer*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="offset" type="gssize"/>
          <parameter name="size" type="gssize"/>
        </parameters>
      </method>
      <method name="CopyInto" cname="gst_buffer_copy_into">
        <return-type type="void"/>
        <parameters>
          <parameter name="src" type="GstBuffer*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="flags" type="GstBufferCopyFlags"/>
          <parameter name="offset" type="gsize"/>
          <parameter name="size" type="gsize"/>
        </parameters>
      </method>
      <method name="CopyRegion" cname="gst_buffer_copy_region">
        <return-type type="GstBuffer*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="flags" type="GstBufferCopyFlags"/>
          <parameter name="offset" type="gsize"/>
          <parameter name="size" type="gsize"/>
        </parameters>
      </method>
      <method name="Extract" cname="gst_buffer_extract">
        <return-type type="gsize"/>
        <parameters>
          <parameter name="offset" type="gsize"/>
          <parameter name="dest" type="gpointer"/>
          <parameter name="size" type="gsize"/>
        </parameters>
      </method>
      <method name="Fill" cname="gst_buffer_fill">
        <return-type type="gsize"/>
        <parameters>
          <parameter name="offset" type="gsize"/>
          <parameter name="src" type="gpointer"/>
          <parameter name="size" type="gsize"/>
        </parameters>
      </method>
      <method name="FindMemory" cname="gst_buffer_find_memory">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="offset" type="gsize"/>
          <parameter name="size" type="gsize"/>
          <parameter name="idx" type="guint*" owned="true" pass_as="out"/>
          <parameter name="length" type="guint*" owned="true" pass_as="out"/>
          <parameter name="skip" type="gsize*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ForeachMeta" cname="gst_buffer_foreach_meta">
        <return-type type="gboolean"/>
        <parameters>
          <parameter closure="1" scope="call" name="func" type="GstBufferForeachMetaFunc"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="GetAllMemory" cname="gst_buffer_get_all_memory">
        <return-type type="GstMemory*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetMemory" cname="gst_buffer_get_memory">
        <return-type type="GstMemory*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="idx" type="guint"/>
        </parameters>
      </method>
      <method name="GetMemoryRange" cname="gst_buffer_get_memory_range">
        <return-type type="GstMemory*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="idx" type="guint"/>
          <parameter name="length" type="gint"/>
        </parameters>
      </method>
      <method name="GetMeta" cname="gst_buffer_get_meta">
        <return-type type="GstMeta*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="api" type="GType"/>
        </parameters>
      </method>
      <method name="GetSize" cname="gst_buffer_get_size">
        <return-type type="gsize"/>
        <parameters/>
      </method>
      <method name="GetSizes" cname="gst_buffer_get_sizes">
        <return-type type="gsize"/>
        <parameters>
          <parameter name="offset" type="gsize*" owned="true" pass_as="out"/>
          <parameter name="maxsize" type="gsize*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetSizesRange" cname="gst_buffer_get_sizes_range">
        <return-type type="gsize"/>
        <parameters>
          <parameter name="idx" type="guint"/>
          <parameter name="length" type="gint"/>
          <parameter name="offset" type="gsize*" owned="true" pass_as="out"/>
          <parameter name="maxsize" type="gsize*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="InsertMemory" cname="gst_buffer_insert_memory">
        <return-type type="void"/>
        <parameters>
          <parameter name="idx" type="gint"/>
          <parameter name="mem" type="GstMemory*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="IterateMeta" cname="gst_buffer_iterate_meta">
        <return-type type="GstMeta*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="state" type="gpointer"/>
        </parameters>
      </method>
      <method name="Map" cname="gst_buffer_map">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="info" type="GstMapInfo*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="flags" type="GstMapFlags"/>
        </parameters>
      </method>
      <method name="MapRange" cname="gst_buffer_map_range">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="idx" type="guint"/>
          <parameter name="length" type="gint"/>
          <parameter name="info" type="GstMapInfo*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="flags" type="GstMapFlags"/>
        </parameters>
      </method>
      <method name="Memcmp" cname="gst_buffer_memcmp">
        <return-type type="gint"/>
        <parameters>
          <parameter name="offset" type="gsize"/>
          <parameter name="mem" type="gpointer"/>
          <parameter name="size" type="gsize"/>
        </parameters>
      </method>
      <method name="Memset" cname="gst_buffer_memset">
        <return-type type="gsize"/>
        <parameters>
          <parameter name="offset" type="gsize"/>
          <parameter name="val" type="guint8"/>
          <parameter name="size" type="gsize"/>
        </parameters>
      </method>
      <method name="NMemory" cname="gst_buffer_n_memory">
        <return-type type="guint*" owned="true"/>
        <parameters/>
      </method>
      <method name="PeekMemory" cname="gst_buffer_peek_memory">
        <return-type type="GstMemory*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="idx" type="guint"/>
        </parameters>
      </method>
      <method name="PrependMemory" cname="gst_buffer_prepend_memory">
        <return-type type="void"/>
        <parameters>
          <parameter name="mem" type="GstMemory*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="RemoveAllMemory" cname="gst_buffer_remove_all_memory">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="RemoveMemory" cname="gst_buffer_remove_memory">
        <return-type type="void"/>
        <parameters>
          <parameter name="idx" type="guint"/>
        </parameters>
      </method>
      <method name="RemoveMemoryRange" cname="gst_buffer_remove_memory_range">
        <return-type type="void"/>
        <parameters>
          <parameter name="idx" type="guint"/>
          <parameter name="length" type="gint"/>
        </parameters>
      </method>
      <method name="RemoveMeta" cname="gst_buffer_remove_meta">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="meta" type="GstMeta*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ReplaceAllMemory" cname="gst_buffer_replace_all_memory">
        <return-type type="void"/>
        <parameters>
          <parameter name="mem" type="GstMemory*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ReplaceMemory" cname="gst_buffer_replace_memory">
        <return-type type="void"/>
        <parameters>
          <parameter name="idx" type="guint"/>
          <parameter name="mem" type="GstMemory*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ReplaceMemoryRange" cname="gst_buffer_replace_memory_range">
        <return-type type="void"/>
        <parameters>
          <parameter name="idx" type="guint"/>
          <parameter name="length" type="gint"/>
          <parameter name="mem" type="GstMemory*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Resize" cname="gst_buffer_resize">
        <return-type type="void"/>
        <parameters>
          <parameter name="offset" type="gssize"/>
          <parameter name="size" type="gssize"/>
        </parameters>
      </method>
      <method name="ResizeRange" cname="gst_buffer_resize_range">
        <return-type type="void"/>
        <parameters>
          <parameter name="idx" type="guint"/>
          <parameter name="length" type="gint"/>
          <parameter name="offset" type="gssize"/>
          <parameter name="size" type="gssize"/>
        </parameters>
      </method>
      <method name="SetSize" cname="gst_buffer_set_size">
        <return-type type="void"/>
        <parameters>
          <parameter name="size" type="gssize"/>
        </parameters>
      </method>
      <method name="Unmap" cname="gst_buffer_unmap">
        <return-type type="void"/>
        <parameters>
          <parameter name="info" type="GstMapInfo*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
    </boxed>
    <boxed name="BufferList" cname="GstBufferList" opaque="false" hidden="false">
      <method name="GetType" cname="gst_buffer_list_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gst_buffer_list_new" disable_void_ctor=""/>
      <constructor cname="gst_buffer_list_new_sized">
        <parameters>
          <parameter name="size" type="guint"/>
        </parameters>
      </constructor>
      <method name="Foreach" cname="gst_buffer_list_foreach">
        <return-type type="gboolean"/>
        <parameters>
          <parameter closure="1" scope="call" name="func" type="GstBufferListFunc"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="Get" cname="gst_buffer_list_get">
        <return-type type="GstBuffer*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="idx" type="guint"/>
        </parameters>
      </method>
      <method name="Insert" cname="gst_buffer_list_insert">
        <return-type type="void"/>
        <parameters>
          <parameter name="idx" type="gint"/>
          <parameter name="buffer" type="GstBuffer*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Length" cname="gst_buffer_list_length">
        <return-type type="guint"/>
        <parameters/>
      </method>
      <method name="Remove" cname="gst_buffer_list_remove">
        <return-type type="void"/>
        <parameters>
          <parameter name="idx" type="guint"/>
          <parameter name="length" type="guint"/>
        </parameters>
      </method>
    </boxed>
    <struct name="BufferPoolAcquireParams" cname="GstBufferPoolAcquireParams" opaque="false" hidden="false">
      <field cname="format" access="public" writeable="true" readable="true" name="Format" type="GstFormat"/>
      <field cname="start" access="public" writeable="true" readable="true" name="Start" type="gint64"/>
      <field cname="stop" access="public" writeable="true" readable="true" name="Stop" type="gint64"/>
      <field cname="flags" access="public" writeable="true" readable="true" name="Flags" type="GstBufferPoolAcquireFlags"/>
      <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
    </struct>
    <struct name="BufferPoolPrivate" cname="GstBufferPoolPrivate" opaque="true" hidden="true"/>
    <struct name="BusPrivate" cname="GstBusPrivate" opaque="true" hidden="true"/>
    <boxed name="Caps" cname="GstCaps" opaque="false" hidden="false">
      <method name="GetType" cname="gst_caps_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <field cname="mini_object" access="public" writeable="true" readable="true" name="MiniObject" type="GstMiniObject">
        <warning>missing glib:type-name</warning>
      </field>
      <constructor cname="gst_caps_new_any" disable_void_ctor=""/>
      <constructor cname="gst_caps_new_empty" disable_void_ctor=""/>
      <constructor cname="gst_caps_new_empty_simple">
        <parameters>
          <parameter name="media_type" type="const-gchar*"/>
        </parameters>
      </constructor>
      <method name="Append" cname="gst_caps_append">
        <return-type type="void"/>
        <parameters>
          <parameter name="caps2" type="GstCaps*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="AppendStructure" cname="gst_caps_append_structure">
        <return-type type="void"/>
        <parameters>
          <parameter name="structure" type="GstStructure*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="CanIntersect" cname="gst_caps_can_intersect">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="caps2" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="CopyNth" cname="gst_caps_copy_nth">
        <return-type type="GstCaps*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="nth" type="guint"/>
        </parameters>
      </method>
      <method name="Fixate" cname="gst_caps_fixate">
        <return-type type="GstCaps*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetSize" cname="gst_caps_get_size">
        <return-type type="guint"/>
        <parameters/>
      </method>
      <method name="GetStructure" cname="gst_caps_get_structure">
        <return-type type="GstStructure*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="index" type="guint"/>
        </parameters>
      </method>
      <method name="Intersect" cname="gst_caps_intersect">
        <return-type type="GstCaps*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="caps2" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="IntersectFull" cname="gst_caps_intersect_full">
        <return-type type="GstCaps*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="caps2" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="mode" type="GstCapsIntersectMode"/>
        </parameters>
      </method>
      <method name="IsAlwaysCompatible" cname="gst_caps_is_always_compatible">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="caps2" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="IsAny" cname="gst_caps_is_any">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="IsEmpty" cname="gst_caps_is_empty">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="IsEqual" cname="gst_caps_is_equal">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="caps2" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="IsEqualFixed" cname="gst_caps_is_equal_fixed">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="caps2" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="IsFixed" cname="gst_caps_is_fixed">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="IsStrictlyEqual" cname="gst_caps_is_strictly_equal">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="caps2" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="IsSubset" cname="gst_caps_is_subset">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="superset" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="IsSubsetStructure" cname="gst_caps_is_subset_structure">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="structure" type="GstStructure*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Merge" cname="gst_caps_merge">
        <return-type type="GstCaps*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="caps2" type="GstCaps*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="MergeStructure" cname="gst_caps_merge_structure">
        <return-type type="GstCaps*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="structure" type="GstStructure*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Normalize" cname="gst_caps_normalize">
        <return-type type="GstCaps*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="RemoveStructure" cname="gst_caps_remove_structure">
        <return-type type="void"/>
        <parameters>
          <parameter name="idx" type="guint"/>
        </parameters>
      </method>
      <method name="SetValue" cname="gst_caps_set_value">
        <return-type type="void"/>
        <parameters>
          <parameter name="field" type="const-gchar*"/>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Simplify" cname="gst_caps_simplify">
        <return-type type="GstCaps*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="StealStructure" cname="gst_caps_steal_structure">
        <return-type type="GstStructure*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="index" type="guint"/>
        </parameters>
      </method>
      <method name="Subtract" cname="gst_caps_subtract">
        <return-type type="GstCaps*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="subtrahend" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ToString" cname="gst_caps_to_string">
        <return-type type="gchar*" owned="true"/>
        <parameters/>
      </method>
      <method name="Truncate" cname="gst_caps_truncate">
        <return-type type="GstCaps*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="FromString" cname="gst_caps_from_string" shared="true">
        <return-type type="GstCaps*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="string" type="const-gchar*"/>
        </parameters>
      </method>
    </boxed>
    <struct name="ClockEntry" cname="GstClockEntry" opaque="true" hidden="false">
      <field cname="refcount" access="public" writeable="true" readable="true" name="Refcount" type="gint"/>
      <field cname="clock" access="public" writeable="true" readable="true" name="Clock" type="GstClock*"/>
      <field cname="type" access="public" writeable="true" readable="true" name="Type" type="GstClockEntryType"/>
      <field cname="time" access="public" writeable="true" readable="true" name="Time" type="guint64"/>
      <field cname="interval" access="public" writeable="true" readable="true" name="Interval" type="guint64"/>
      <field cname="status" access="public" writeable="true" readable="true" name="Status" type="GstClockReturn"/>
      <field cname="func" access="public" writeable="true" readable="true" name="Func" type="GstClockCallback"/>
      <field cname="user_data" access="public" writeable="true" readable="true" name="UserData" type="gpointer"/>
      <field cname="destroy_data" access="public" writeable="true" readable="true" name="DestroyData" type="GDestroyNotify"/>
      <field cname="unscheduled" access="public" writeable="true" readable="true" name="Unscheduled" type="gboolean"/>
      <field cname="woken_up" access="public" writeable="true" readable="true" name="WokenUp" type="gboolean"/>
      <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
    </struct>
    <struct name="ClockPrivate" cname="GstClockPrivate" opaque="true" hidden="true"/>
    <boxed name="DateTime" cname="GstDateTime" opaque="false" hidden="false">
      <method name="GetType" cname="gst_date_time_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gst_date_time_new">
        <parameters>
          <parameter name="tzoffset" type="gfloat"/>
          <parameter name="year" type="gint"/>
          <parameter name="month" type="gint"/>
          <parameter name="day" type="gint"/>
          <parameter name="hour" type="gint"/>
          <parameter name="minute" type="gint"/>
          <parameter name="seconds" type="gdouble"/>
        </parameters>
      </constructor>
      <constructor cname="gst_date_time_new_from_g_date_time">
        <parameters>
          <parameter name="dt" type="GDateTime*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </constructor>
      <constructor cname="gst_date_time_new_from_iso8601_string">
        <parameters>
          <parameter name="string" type="const-gchar*"/>
        </parameters>
      </constructor>
      <constructor cname="gst_date_time_new_from_unix_epoch_local_time">
        <parameters>
          <parameter name="secs" type="gint64"/>
        </parameters>
      </constructor>
      <constructor cname="gst_date_time_new_from_unix_epoch_utc">
        <parameters>
          <parameter name="secs" type="gint64"/>
        </parameters>
      </constructor>
      <constructor cname="gst_date_time_new_local_time">
        <parameters>
          <parameter name="year" type="gint"/>
          <parameter name="month" type="gint"/>
          <parameter name="day" type="gint"/>
          <parameter name="hour" type="gint"/>
          <parameter name="minute" type="gint"/>
          <parameter name="seconds" type="gdouble"/>
        </parameters>
      </constructor>
      <constructor cname="gst_date_time_new_now_local_time" disable_void_ctor=""/>
      <constructor cname="gst_date_time_new_now_utc" disable_void_ctor=""/>
      <constructor cname="gst_date_time_new_y">
        <parameters>
          <parameter name="year" type="gint"/>
        </parameters>
      </constructor>
      <constructor cname="gst_date_time_new_ym">
        <parameters>
          <parameter name="year" type="gint"/>
          <parameter name="month" type="gint"/>
        </parameters>
      </constructor>
      <constructor cname="gst_date_time_new_ymd">
        <parameters>
          <parameter name="year" type="gint"/>
          <parameter name="month" type="gint"/>
          <parameter name="day" type="gint"/>
        </parameters>
      </constructor>
      <method name="GetDay" cname="gst_date_time_get_day">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetHour" cname="gst_date_time_get_hour">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetMicrosecond" cname="gst_date_time_get_microsecond">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetMinute" cname="gst_date_time_get_minute">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetMonth" cname="gst_date_time_get_month">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetSecond" cname="gst_date_time_get_second">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetTimeZoneOffset" cname="gst_date_time_get_time_zone_offset">
        <return-type type="gfloat"/>
        <parameters/>
      </method>
      <method name="GetYear" cname="gst_date_time_get_year">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="HasDay" cname="gst_date_time_has_day">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="HasMonth" cname="gst_date_time_has_month">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="HasSecond" cname="gst_date_time_has_second">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="HasTime" cname="gst_date_time_has_time">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="HasYear" cname="gst_date_time_has_year">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="Ref" cname="gst_date_time_ref">
        <return-type type="GstDateTime*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="ToGDateTime" cname="gst_date_time_to_g_date_time">
        <return-type type="GDateTime*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="ToIso8601String" cname="gst_date_time_to_iso8601_string">
        <return-type type="gchar*" owned="true"/>
        <parameters/>
      </method>
      <method name="Unref" cname="gst_date_time_unref">
        <return-type type="void"/>
        <parameters/>
      </method>
    </boxed>
    <struct name="DebugCategory" cname="GstDebugCategory" opaque="false" hidden="false">
      <field cname="threshold" access="private" writeable="false" readable="false" name="Threshold" type="gint"/>
      <field cname="color" access="private" writeable="false" readable="false" name="Color" type="guint"/>
      <field cname="name" access="private" writeable="false" readable="false" name="Name" type="gchar*"/>
      <field cname="description" access="private" writeable="false" readable="false" name="Description" type="gchar*"/>
      <method name="Free" cname="gst_debug_category_free">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="GetColor" cname="gst_debug_category_get_color">
        <return-type type="guint"/>
        <parameters/>
      </method>
      <method name="GetDescription" cname="gst_debug_category_get_description">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetName" cname="gst_debug_category_get_name">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetThreshold" cname="gst_debug_category_get_threshold">
        <return-type type="GstDebugLevel"/>
        <parameters/>
      </method>
      <method name="ResetThreshold" cname="gst_debug_category_reset_threshold">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="SetThreshold" cname="gst_debug_category_set_threshold">
        <return-type type="void"/>
        <parameters>
          <parameter name="level" type="GstDebugLevel"/>
        </parameters>
      </method>
    </struct>
    <struct name="DebugMessage" cname="GstDebugMessage" opaque="true" hidden="false">
      <method name="Get" cname="gst_debug_message_get">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
    </struct>
    <boxed name="Event" cname="GstEvent" opaque="false" hidden="false">
      <method name="GetType" cname="gst_event_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <field cname="mini_object" access="public" writeable="true" readable="true" name="MiniObject" type="GstMiniObject">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="type" access="public" writeable="true" readable="true" name="Type" type="GstEventType"/>
      <field cname="timestamp" access="public" writeable="true" readable="true" name="Timestamp" type="guint64"/>
      <field cname="seqnum" access="public" writeable="true" readable="true" name="Seqnum" type="guint32"/>
      <constructor cname="gst_event_new_buffer_size">
        <parameters>
          <parameter name="format" type="GstFormat"/>
          <parameter name="minsize" type="gint64"/>
          <parameter name="maxsize" type="gint64"/>
          <parameter name="async" type="gboolean"/>
        </parameters>
      </constructor>
      <constructor cname="gst_event_new_caps">
        <parameters>
          <parameter name="caps" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </constructor>
      <constructor cname="gst_event_new_custom">
        <parameters>
          <parameter name="type" type="GstEventType"/>
          <parameter name="structure" type="GstStructure*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </constructor>
      <constructor cname="gst_event_new_eos" disable_void_ctor=""/>
      <constructor cname="gst_event_new_flush_start" disable_void_ctor=""/>
      <constructor cname="gst_event_new_flush_stop">
        <parameters>
          <parameter name="reset_time" type="gboolean"/>
        </parameters>
      </constructor>
      <constructor cname="gst_event_new_gap">
        <parameters>
          <parameter name="timestamp" type="guint64"/>
          <parameter name="duration" type="guint64"/>
        </parameters>
      </constructor>
      <constructor cname="gst_event_new_latency">
        <parameters>
          <parameter name="latency" type="guint64"/>
        </parameters>
      </constructor>
      <constructor cname="gst_event_new_navigation">
        <parameters>
          <parameter name="structure" type="GstStructure*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </constructor>
      <constructor cname="gst_event_new_qos">
        <parameters>
          <parameter name="type" type="GstQOSType"/>
          <parameter name="proportion" type="gdouble"/>
          <parameter name="diff" type="gint64"/>
          <parameter name="timestamp" type="guint64"/>
        </parameters>
      </constructor>
      <constructor cname="gst_event_new_reconfigure" disable_void_ctor=""/>
      <constructor cname="gst_event_new_seek">
        <parameters>
          <parameter name="rate" type="gdouble"/>
          <parameter name="format" type="GstFormat"/>
          <parameter name="flags" type="GstSeekFlags"/>
          <parameter name="start_type" type="GstSeekType"/>
          <parameter name="start" type="gint64"/>
          <parameter name="stop_type" type="GstSeekType"/>
          <parameter name="stop" type="gint64"/>
        </parameters>
      </constructor>
      <constructor cname="gst_event_new_segment">
        <parameters>
          <parameter name="segment" type="GstSegment*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </constructor>
      <constructor cname="gst_event_new_segment_done">
        <parameters>
          <parameter name="format" type="GstFormat"/>
          <parameter name="position" type="gint64"/>
        </parameters>
      </constructor>
      <constructor cname="gst_event_new_sink_message">
        <parameters>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="msg" type="GstMessage*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </constructor>
      <constructor cname="gst_event_new_step">
        <parameters>
          <parameter name="format" type="GstFormat"/>
          <parameter name="amount" type="guint64"/>
          <parameter name="rate" type="gdouble"/>
          <parameter name="flush" type="gboolean"/>
          <parameter name="intermediate" type="gboolean"/>
        </parameters>
      </constructor>
      <constructor cname="gst_event_new_stream_start">
        <parameters>
          <parameter name="stream_id" type="const-gchar*"/>
        </parameters>
      </constructor>
      <constructor cname="gst_event_new_tag">
        <parameters>
          <parameter name="taglist" type="GstTagList*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </constructor>
      <constructor cname="gst_event_new_toc">
        <parameters>
          <parameter name="toc" type="GstToc*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="updated" type="gboolean"/>
        </parameters>
      </constructor>
      <constructor cname="gst_event_new_toc_select">
        <parameters>
          <parameter name="uid" type="const-gchar*"/>
        </parameters>
      </constructor>
      <method name="CopySegment" cname="gst_event_copy_segment">
        <return-type type="void"/>
        <parameters>
          <parameter name="segment" type="GstSegment*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetSeqnum" cname="gst_event_get_seqnum">
        <return-type type="guint32"/>
        <parameters/>
      </method>
      <method name="GetStructure" cname="gst_event_get_structure">
        <return-type type="GstStructure*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="HasName" cname="gst_event_has_name">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="ParseBufferSize" cname="gst_event_parse_buffer_size">
        <return-type type="void"/>
        <parameters>
          <parameter name="format" type="GstFormat" owned="true" pass_as="out"/>
          <parameter name="minsize" type="gint64*" owned="true" pass_as="out"/>
          <parameter name="maxsize" type="gint64*" owned="true" pass_as="out"/>
          <parameter name="async" type="gboolean*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseCaps" cname="gst_event_parse_caps">
        <return-type type="void"/>
        <parameters>
          <parameter name="caps" type="GstCaps**" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ParseFlushStop" cname="gst_event_parse_flush_stop">
        <return-type type="void"/>
        <parameters>
          <parameter name="reset_time" type="gboolean*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseGap" cname="gst_event_parse_gap">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="timestamp" type="guint64" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="duration" type="guint64" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseLatency" cname="gst_event_parse_latency">
        <return-type type="void"/>
        <parameters>
          <parameter name="latency" type="guint64" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseQos" cname="gst_event_parse_qos">
        <return-type type="void"/>
        <parameters>
          <parameter name="type" type="GstQOSType" owned="true" pass_as="out"/>
          <parameter name="proportion" type="gdouble*" owned="true" pass_as="out"/>
          <parameter name="diff" type="gint64" owned="true" pass_as="out"/>
          <parameter name="timestamp" type="guint64" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseSeek" cname="gst_event_parse_seek">
        <return-type type="void"/>
        <parameters>
          <parameter name="rate" type="gdouble*" owned="true" pass_as="out"/>
          <parameter name="format" type="GstFormat" owned="true" pass_as="out"/>
          <parameter name="flags" type="GstSeekFlags" owned="true" pass_as="out"/>
          <parameter name="start_type" type="GstSeekType" owned="true" pass_as="out"/>
          <parameter name="start" type="gint64*" owned="true" pass_as="out"/>
          <parameter name="stop_type" type="GstSeekType" owned="true" pass_as="out"/>
          <parameter name="stop" type="gint64*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseSegment" cname="gst_event_parse_segment">
        <return-type type="void"/>
        <parameters>
          <parameter name="segment" type="GstSegment**" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ParseSegmentDone" cname="gst_event_parse_segment_done">
        <return-type type="void"/>
        <parameters>
          <parameter name="format" type="GstFormat" owned="true" pass_as="out"/>
          <parameter name="position" type="gint64*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseSinkMessage" cname="gst_event_parse_sink_message">
        <return-type type="void"/>
        <parameters>
          <parameter name="msg" type="GstMessage**" owned="true" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ParseStep" cname="gst_event_parse_step">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="format" type="GstFormat" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="amount" type="guint64*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="rate" type="gdouble*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="flush" type="gboolean*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="intermediate" type="gboolean*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseStreamStart" cname="gst_event_parse_stream_start">
        <return-type type="void"/>
        <parameters>
          <parameter name="stream_id" type="const-gchar*" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseTag" cname="gst_event_parse_tag">
        <return-type type="void"/>
        <parameters>
          <parameter name="taglist" type="GstTagList**" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ParseToc" cname="gst_event_parse_toc">
        <return-type type="void"/>
        <parameters>
          <parameter name="toc" type="GstToc**" owned="true" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="updated" type="gboolean*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseTocSelect" cname="gst_event_parse_toc_select">
        <return-type type="void"/>
        <parameters>
          <parameter name="uid" type="gchar*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="SetSeqnum" cname="gst_event_set_seqnum">
        <return-type type="void"/>
        <parameters>
          <parameter name="seqnum" type="guint32"/>
        </parameters>
      </method>
      <method name="WritableStructure" cname="gst_event_writable_structure">
        <return-type type="GstStructure*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
    </boxed>
    <struct name="FormatDefinition" cname="GstFormatDefinition" opaque="false" hidden="false">
      <field cname="value" access="public" writeable="true" readable="true" name="Value" type="GstFormat"/>
      <field cname="nick" access="public" writeable="true" readable="true" name="Nick" type="gchar*"/>
      <field cname="description" access="public" writeable="true" readable="true" name="Description" type="gchar*"/>
      <field cname="quark" access="public" writeable="true" readable="true" name="Quark" type="guint32"/>
    </struct>
    <struct name="GhostPadPrivate" cname="GstGhostPadPrivate" opaque="true" hidden="true"/>
    <boxed name="Iterator" cname="GstIterator" opaque="false" hidden="false">
      <method name="GetType" cname="gst_iterator_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <field cname="copy" access="public" writeable="true" readable="true" name="CopyFunc" type="GstIteratorCopyFunction"/>
      <field cname="next" access="public" writeable="true" readable="true" name="NextFunc" type="GstIteratorNextFunction"/>
      <field cname="item" access="public" writeable="true" readable="true" name="Item" type="GstIteratorItemFunction"/>
      <field cname="resync" access="public" writeable="true" readable="true" name="ResyncFunc" type="GstIteratorResyncFunction"/>
      <field cname="free" access="public" writeable="true" readable="true" name="FreeFunc" type="GstIteratorFreeFunction"/>
      <field cname="pushed" access="public" writeable="true" readable="true" name="Pushed" type="GstIterator*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="type" access="public" writeable="true" readable="true" name="Type" type="GType"/>
      <field cname="lock" access="public" writeable="true" readable="true" name="Lock" type="GMutex*"/>
      <field cname="cookie" access="public" writeable="true" readable="true" name="Cookie" type="guint32"/>
      <field cname="master_cookie" access="public" writeable="true" readable="true" name="MasterCookie" type="guint32"/>
      <field cname="size" access="public" writeable="true" readable="true" name="Size" type="guint"/>
      <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
      <constructor cname="gst_iterator_new_single">
        <parameters>
          <parameter name="type" type="GType"/>
          <parameter name="_object" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </constructor>
      <method name="Copy" cname="gst_iterator_copy">
        <return-type type="GstIterator*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="Filter" cname="gst_iterator_filter">
        <return-type type="GstIterator*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter scope="call" name="func" type="GCompareFunc"/>
          <parameter name="user_data" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="FindCustom" cname="gst_iterator_find_custom">
        <return-type type="gboolean"/>
        <parameters>
          <parameter closure="2" scope="call" name="func" type="GCompareFunc"/>
          <parameter name="elem" type="GValue*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="Fold" cname="gst_iterator_fold">
        <return-type type="GstIteratorResult"/>
        <parameters>
          <parameter closure="2" scope="call" name="func" type="GstIteratorFoldFunction"/>
          <parameter name="_ret" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="Foreach" cname="gst_iterator_foreach">
        <return-type type="GstIteratorResult"/>
        <parameters>
          <parameter closure="1" scope="call" name="func" type="GstIteratorForeachFunction"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="Free" cname="gst_iterator_free">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="Next" cname="gst_iterator_next">
        <return-type type="GstIteratorResult"/>
        <parameters>
          <parameter name="elem" type="GValue*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Push" cname="gst_iterator_push">
        <return-type type="void"/>
        <parameters>
          <parameter name="other" type="GstIterator*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Resync" cname="gst_iterator_resync">
        <return-type type="void"/>
        <parameters/>
      </method>
    </boxed>
    <struct name="MapInfo" cname="GstMapInfo" opaque="false" hidden="false">
      <field cname="memory" access="public" writeable="true" readable="true" name="Memory" type="GstMemory*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="flags" access="public" writeable="true" readable="true" name="Flags" type="GstMapFlags"/>
      <field cname="data" access="public" writeable="true" readable="true" name="Data" type="guint8"/>
      <field cname="size" access="public" writeable="true" readable="true" name="Size" type="gsize"/>
      <field cname="maxsize" access="public" writeable="true" readable="true" name="Maxsize" type="gsize"/>
      <field cname="user_data" access="public" writeable="true" readable="true" name="UserData" type="gpointer" array="true" array_len="4"/>
      <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
    </struct>
    <boxed name="Memory" cname="GstMemory" opaque="false" hidden="false">
      <method name="GetType" cname="gst_memory_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <field cname="mini_object" access="public" writeable="true" readable="true" name="MiniObject" type="GstMiniObject">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="allocator" access="public" writeable="true" readable="true" name="Allocator" type="GstAllocator*"/>
      <field cname="parent" access="public" writeable="true" readable="true" name="Parent" type="GstMemory*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="maxsize" access="public" writeable="true" readable="true" name="Maxsize" type="gsize"/>
      <field cname="align" access="public" writeable="true" readable="true" name="Align" type="gsize"/>
      <field cname="offset" access="public" writeable="true" readable="true" name="Offset" type="gsize"/>
      <field cname="size" access="public" writeable="true" readable="true" name="Size" type="gsize"/>
      <constructor cname="gst_memory_new_wrapped">
        <parameters>
          <parameter name="flags" type="GstMemoryFlags"/>
          <parameter name="data" type="gpointer"/>
          <parameter name="maxsize" type="gsize"/>
          <parameter name="offset" type="gsize"/>
          <parameter name="size" type="gsize"/>
          <parameter name="user_data" type="gpointer"/>
          <parameter name="notify" type="GDestroyNotify"/>
        </parameters>
      </constructor>
      <method name="Copy" cname="gst_memory_copy">
        <return-type type="GstMemory*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="offset" type="gssize"/>
          <parameter name="size" type="gssize"/>
        </parameters>
      </method>
      <method name="GetSizes" cname="gst_memory_get_sizes">
        <return-type type="gsize"/>
        <parameters>
          <parameter name="offset" type="gsize"/>
          <parameter name="maxsize" type="gsize"/>
        </parameters>
      </method>
      <method name="IsSpan" cname="gst_memory_is_span">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="mem2" type="GstMemory*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="offset" type="gsize"/>
        </parameters>
      </method>
      <method name="MakeMapped" cname="gst_memory_make_mapped">
        <return-type type="GstMemory*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="info" type="GstMapInfo*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="flags" type="GstMapFlags"/>
        </parameters>
      </method>
      <method name="Map" cname="gst_memory_map">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="info" type="GstMapInfo*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="flags" type="GstMapFlags"/>
        </parameters>
      </method>
      <method name="Resize" cname="gst_memory_resize">
        <return-type type="void"/>
        <parameters>
          <parameter name="offset" type="gssize"/>
          <parameter name="size" type="gsize"/>
        </parameters>
      </method>
      <method name="Share" cname="gst_memory_share">
        <return-type type="GstMemory*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="offset" type="gssize"/>
          <parameter name="size" type="gssize"/>
        </parameters>
      </method>
      <method name="Unmap" cname="gst_memory_unmap">
        <return-type type="void"/>
        <parameters>
          <parameter name="info" type="GstMapInfo*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
    </boxed>
    <boxed name="Message" cname="GstMessage" opaque="false" hidden="false">
      <method name="GetType" cname="gst_message_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <field cname="mini_object" access="public" writeable="true" readable="true" name="MiniObject" type="GstMiniObject">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="type" access="public" writeable="true" readable="true" name="Type" type="GstMessageType"/>
      <field cname="timestamp" access="public" writeable="true" readable="true" name="Timestamp" type="guint64"/>
      <field cname="src" access="public" writeable="true" readable="true" name="Src" type="GstObject*"/>
      <field cname="seqnum" access="public" writeable="true" readable="true" name="Seqnum" type="guint32"/>
      <field cname="lock" access="private" writeable="false" readable="false" name="Lock" type="GMutex*"/>
      <field cname="cond" access="private" writeable="false" readable="false" name="Cond" type="GCond">
        <warning>missing glib:type-name</warning>
      </field>
      <constructor cname="gst_message_new_application">
        <parameters>
          <parameter name="src" type="GstObject*"/>
          <parameter name="structure" type="GstStructure*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </constructor>
      <constructor cname="gst_message_new_async_done">
        <parameters>
          <parameter name="src" type="GstObject*"/>
          <parameter name="running_time" type="guint64"/>
        </parameters>
      </constructor>
      <constructor cname="gst_message_new_async_start">
        <parameters>
          <parameter name="src" type="GstObject*"/>
        </parameters>
      </constructor>
      <constructor cname="gst_message_new_buffering">
        <parameters>
          <parameter name="src" type="GstObject*"/>
          <parameter name="percent" type="gint"/>
        </parameters>
      </constructor>
      <constructor cname="gst_message_new_clock_lost">
        <parameters>
          <parameter name="src" type="GstObject*"/>
          <parameter name="clock" type="GstClock*"/>
        </parameters>
      </constructor>
      <constructor cname="gst_message_new_clock_provide">
        <parameters>
          <parameter name="src" type="GstObject*"/>
          <parameter name="clock" type="GstClock*"/>
          <parameter name="ready" type="gboolean"/>
        </parameters>
      </constructor>
      <constructor cname="gst_message_new_custom">
        <parameters>
          <parameter name="type" type="GstMessageType"/>
          <parameter name="src" type="GstObject*"/>
          <parameter name="structure" type="GstStructure*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </constructor>
      <constructor cname="gst_message_new_duration_changed">
        <parameters>
          <parameter name="src" type="GstObject*"/>
        </parameters>
      </constructor>
      <constructor cname="gst_message_new_element">
        <parameters>
          <parameter name="src" type="GstObject*"/>
          <parameter name="structure" type="GstStructure*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </constructor>
      <constructor cname="gst_message_new_eos">
        <parameters>
          <parameter name="src" type="GstObject*"/>
        </parameters>
      </constructor>
      <constructor cname="gst_message_new_error">
        <parameters>
          <parameter name="src" type="GstObject*"/>
          <parameter name="error" type="GError*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="debug" type="const-gchar*"/>
        </parameters>
      </constructor>
      <constructor cname="gst_message_new_info">
        <parameters>
          <parameter name="src" type="GstObject*"/>
          <parameter name="error" type="GError*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="debug" type="const-gchar*"/>
        </parameters>
      </constructor>
      <constructor cname="gst_message_new_latency">
        <parameters>
          <parameter name="src" type="GstObject*"/>
        </parameters>
      </constructor>
      <constructor cname="gst_message_new_new_clock">
        <parameters>
          <parameter name="src" type="GstObject*"/>
          <parameter name="clock" type="GstClock*"/>
        </parameters>
      </constructor>
      <constructor cname="gst_message_new_progress">
        <parameters>
          <parameter name="src" type="GstObject*"/>
          <parameter name="type" type="GstProgressType"/>
          <parameter name="code" type="const-gchar*"/>
          <parameter name="text" type="const-gchar*"/>
        </parameters>
      </constructor>
      <constructor cname="gst_message_new_qos">
        <parameters>
          <parameter name="src" type="GstObject*"/>
          <parameter name="live" type="gboolean"/>
          <parameter name="running_time" type="guint64"/>
          <parameter name="stream_time" type="guint64"/>
          <parameter name="timestamp" type="guint64"/>
          <parameter name="duration" type="guint64"/>
        </parameters>
      </constructor>
      <constructor cname="gst_message_new_request_state">
        <parameters>
          <parameter name="src" type="GstObject*"/>
          <parameter name="state" type="GstState"/>
        </parameters>
      </constructor>
      <constructor cname="gst_message_new_reset_time">
        <parameters>
          <parameter name="src" type="GstObject*"/>
          <parameter name="running_time" type="guint64"/>
        </parameters>
      </constructor>
      <constructor cname="gst_message_new_segment_done">
        <parameters>
          <parameter name="src" type="GstObject*"/>
          <parameter name="format" type="GstFormat"/>
          <parameter name="position" type="gint64"/>
        </parameters>
      </constructor>
      <constructor cname="gst_message_new_segment_start">
        <parameters>
          <parameter name="src" type="GstObject*"/>
          <parameter name="format" type="GstFormat"/>
          <parameter name="position" type="gint64"/>
        </parameters>
      </constructor>
      <constructor cname="gst_message_new_state_changed">
        <parameters>
          <parameter name="src" type="GstObject*"/>
          <parameter name="oldstate" type="GstState"/>
          <parameter name="newstate" type="GstState"/>
          <parameter name="pending" type="GstState"/>
        </parameters>
      </constructor>
      <constructor cname="gst_message_new_state_dirty">
        <parameters>
          <parameter name="src" type="GstObject*"/>
        </parameters>
      </constructor>
      <constructor cname="gst_message_new_step_done">
        <parameters>
          <parameter name="src" type="GstObject*"/>
          <parameter name="format" type="GstFormat"/>
          <parameter name="amount" type="guint64"/>
          <parameter name="rate" type="gdouble"/>
          <parameter name="flush" type="gboolean"/>
          <parameter name="intermediate" type="gboolean"/>
          <parameter name="duration" type="guint64"/>
          <parameter name="eos" type="gboolean"/>
        </parameters>
      </constructor>
      <constructor cname="gst_message_new_step_start">
        <parameters>
          <parameter name="src" type="GstObject*"/>
          <parameter name="active" type="gboolean"/>
          <parameter name="format" type="GstFormat"/>
          <parameter name="amount" type="guint64"/>
          <parameter name="rate" type="gdouble"/>
          <parameter name="flush" type="gboolean"/>
          <parameter name="intermediate" type="gboolean"/>
        </parameters>
      </constructor>
      <constructor cname="gst_message_new_stream_start">
        <parameters>
          <parameter name="src" type="GstObject*"/>
        </parameters>
      </constructor>
      <constructor cname="gst_message_new_stream_status">
        <parameters>
          <parameter name="src" type="GstObject*"/>
          <parameter name="type" type="GstStreamStatusType"/>
          <parameter name="owner" type="GstElement*"/>
        </parameters>
      </constructor>
      <constructor cname="gst_message_new_structure_change">
        <parameters>
          <parameter name="src" type="GstObject*"/>
          <parameter name="type" type="GstStructureChangeType"/>
          <parameter name="owner" type="GstElement*"/>
          <parameter name="busy" type="gboolean"/>
        </parameters>
      </constructor>
      <constructor cname="gst_message_new_tag">
        <parameters>
          <parameter name="src" type="GstObject*"/>
          <parameter name="tag_list" type="GstTagList*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </constructor>
      <constructor cname="gst_message_new_toc">
        <parameters>
          <parameter name="src" type="GstObject*"/>
          <parameter name="toc" type="GstToc*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="updated" type="gboolean"/>
        </parameters>
      </constructor>
      <constructor cname="gst_message_new_warning">
        <parameters>
          <parameter name="src" type="GstObject*"/>
          <parameter name="error" type="GError*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="debug" type="const-gchar*"/>
        </parameters>
      </constructor>
      <method name="GetSeqnum" cname="gst_message_get_seqnum">
        <return-type type="guint32"/>
        <parameters/>
      </method>
      <method name="GetStreamStatusObject" cname="gst_message_get_stream_status_object">
        <return-type type="GValue*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetStructure" cname="gst_message_get_structure">
        <return-type type="GstStructure*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="HasName" cname="gst_message_has_name">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="ParseAsyncDone" cname="gst_message_parse_async_done">
        <return-type type="void"/>
        <parameters>
          <parameter name="running_time" type="guint64" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseBuffering" cname="gst_message_parse_buffering">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="percent" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseBufferingStats" cname="gst_message_parse_buffering_stats">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="mode" type="GstBufferingMode" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="avg_in" type="gint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="avg_out" type="gint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="buffering_left" type="gint64*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseClockLost" cname="gst_message_parse_clock_lost">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="clock" type="GstClock*" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseClockProvide" cname="gst_message_parse_clock_provide">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="clock" type="GstClock*" pass_as="out"/>
          <parameter allow-none="1" name="ready" type="gboolean*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseError" cname="gst_message_parse_error">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="gerror" type="GError**" owned="true" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter allow-none="1" name="debug" type="gchar*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseInfo" cname="gst_message_parse_info">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="gerror" type="GError**" owned="true" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter allow-none="1" name="debug" type="gchar*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseNewClock" cname="gst_message_parse_new_clock">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="clock" type="GstClock*" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseProgress" cname="gst_message_parse_progress">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="type" type="GstProgressType" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="code" type="gchar*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="text" type="gchar*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseQos" cname="gst_message_parse_qos">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="live" type="gboolean*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="running_time" type="guint64*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="stream_time" type="guint64*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="timestamp" type="guint64*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="duration" type="guint64*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseQosStats" cname="gst_message_parse_qos_stats">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="format" type="GstFormat" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="processed" type="guint64*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="dropped" type="guint64*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseQosValues" cname="gst_message_parse_qos_values">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="jitter" type="gint64*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="proportion" type="gdouble*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="quality" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseRequestState" cname="gst_message_parse_request_state">
        <return-type type="void"/>
        <parameters>
          <parameter name="state" type="GstState" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseResetTime" cname="gst_message_parse_reset_time">
        <return-type type="void"/>
        <parameters>
          <parameter name="running_time" type="guint64" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseSegmentDone" cname="gst_message_parse_segment_done">
        <return-type type="void"/>
        <parameters>
          <parameter name="format" type="GstFormat" owned="true" pass_as="out"/>
          <parameter name="position" type="gint64*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseSegmentStart" cname="gst_message_parse_segment_start">
        <return-type type="void"/>
        <parameters>
          <parameter name="format" type="GstFormat" owned="true" pass_as="out"/>
          <parameter name="position" type="gint64*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseStateChanged" cname="gst_message_parse_state_changed">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="oldstate" type="GstState" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="newstate" type="GstState" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="pending" type="GstState" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseStepDone" cname="gst_message_parse_step_done">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="format" type="GstFormat" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="amount" type="guint64*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="rate" type="gdouble*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="flush" type="gboolean*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="intermediate" type="gboolean*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="duration" type="guint64*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="eos" type="gboolean*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseStepStart" cname="gst_message_parse_step_start">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="active" type="gboolean*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="format" type="GstFormat" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="amount" type="guint64*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="rate" type="gdouble*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="flush" type="gboolean*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="intermediate" type="gboolean*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseStreamStatus" cname="gst_message_parse_stream_status">
        <return-type type="void"/>
        <parameters>
          <parameter name="type" type="GstStreamStatusType" owned="true" pass_as="out"/>
          <parameter name="owner" type="GstElement*" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseStructureChange" cname="gst_message_parse_structure_change">
        <return-type type="void"/>
        <parameters>
          <parameter name="type" type="GstStructureChangeType" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="owner" type="GstElement*" pass_as="out"/>
          <parameter allow-none="1" name="busy" type="gboolean*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseTag" cname="gst_message_parse_tag">
        <return-type type="void"/>
        <parameters>
          <parameter name="tag_list" type="GstTagList**" owned="true" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ParseToc" cname="gst_message_parse_toc">
        <return-type type="void"/>
        <parameters>
          <parameter name="toc" type="GstToc**" owned="true" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="updated" type="gboolean*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseWarning" cname="gst_message_parse_warning">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="gerror" type="GError**" owned="true" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter allow-none="1" name="debug" type="gchar*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="SetBufferingStats" cname="gst_message_set_buffering_stats">
        <return-type type="void"/>
        <parameters>
          <parameter name="mode" type="GstBufferingMode"/>
          <parameter name="avg_in" type="gint"/>
          <parameter name="avg_out" type="gint"/>
          <parameter name="buffering_left" type="gint64"/>
        </parameters>
      </method>
      <method name="SetQosStats" cname="gst_message_set_qos_stats">
        <return-type type="void"/>
        <parameters>
          <parameter name="format" type="GstFormat"/>
          <parameter name="processed" type="guint64"/>
          <parameter name="dropped" type="guint64"/>
        </parameters>
      </method>
      <method name="SetQosValues" cname="gst_message_set_qos_values">
        <return-type type="void"/>
        <parameters>
          <parameter name="jitter" type="gint64"/>
          <parameter name="proportion" type="gdouble"/>
          <parameter name="quality" type="gint"/>
        </parameters>
      </method>
      <method name="SetSeqnum" cname="gst_message_set_seqnum">
        <return-type type="void"/>
        <parameters>
          <parameter name="seqnum" type="guint32"/>
        </parameters>
      </method>
      <method name="SetStreamStatusObject" cname="gst_message_set_stream_status_object">
        <return-type type="void"/>
        <parameters>
          <parameter name="_object" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
    </boxed>
    <struct name="Meta" cname="GstMeta" opaque="false" hidden="false">
      <field cname="flags" access="public" writeable="true" readable="true" name="Flags" type="GstMetaFlags"/>
      <field cname="info" access="public" writeable="true" readable="true" name="Info" type="GstMetaInfo*">
        <warning>missing glib:type-name</warning>
      </field>
      <method name="ApiTypeHasTag" cname="gst_meta_api_type_has_tag" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="api" type="GType"/>
          <parameter name="tag" type="guint32"/>
        </parameters>
      </method>
      <method name="ApiTypeRegister" cname="gst_meta_api_type_register" shared="true">
        <return-type type="GType"/>
        <parameters>
          <parameter name="api" type="const-gchar*"/>
          <parameter name="tags" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetInfo" cname="gst_meta_get_info" shared="true">
        <return-type type="GstMetaInfo*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="impl" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="Register" cname="gst_meta_register" shared="true">
        <return-type type="GstMetaInfo*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="api" type="GType"/>
          <parameter name="impl" type="const-gchar*"/>
          <parameter name="size" type="gsize"/>
          <parameter scope="async" name="init_func" type="GstMetaInitFunction"/>
          <parameter scope="async" name="free_func" type="GstMetaFreeFunction"/>
          <parameter scope="async" name="transform_func" type="GstMetaTransformFunction"/>
        </parameters>
      </method>
    </struct>
    <struct name="MetaInfo" cname="GstMetaInfo" opaque="false" hidden="false">
      <field cname="api" access="public" writeable="true" readable="true" name="Api" type="GType"/>
      <field cname="type" access="public" writeable="true" readable="true" name="Type" type="GType"/>
      <field cname="size" access="public" writeable="true" readable="true" name="Size" type="gsize"/>
      <field cname="init_func" access="public" writeable="true" readable="true" name="InitFunc" type="GstMetaInitFunction"/>
      <field cname="free_func" access="public" writeable="true" readable="true" name="FreeFunc" type="GstMetaFreeFunction"/>
      <field cname="transform_func" access="public" writeable="true" readable="true" name="TransformFunc" type="GstMetaTransformFunction"/>
      <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
    </struct>
    <struct name="MetaTransformCopy" cname="GstMetaTransformCopy" opaque="false" hidden="false">
      <field cname="region" access="public" writeable="true" readable="true" name="Region" type="gboolean"/>
      <field cname="offset" access="public" writeable="true" readable="true" name="Offset" type="gsize"/>
      <field cname="size" access="public" writeable="true" readable="true" name="Size" type="gsize"/>
    </struct>
    <struct name="MiniObject" cname="GstMiniObject" opaque="false" hidden="false">
      <field cname="type" access="public" writeable="true" readable="true" name="Type" type="GType"/>
      <field cname="refcount" access="public" writeable="true" readable="true" name="Refcount" type="gint"/>
      <field cname="lockstate" access="public" writeable="true" readable="true" name="Lockstate" type="gint"/>
      <field cname="flags" access="public" writeable="true" readable="true" name="Flags" type="guint"/>
      <field cname="copy" access="public" writeable="true" readable="true" name="CopyFunc" type="GstMiniObjectCopyFunction"/>
      <field cname="dispose" access="public" writeable="true" readable="true" name="Dispose" type="GstMiniObjectDisposeFunction"/>
      <field cname="free" access="public" writeable="true" readable="true" name="Free" type="GstMiniObjectFreeFunction"/>
      <field cname="n_qdata" access="private" writeable="false" readable="false" name="NQdata" type="guint"/>
      <field cname="qdata" access="private" writeable="false" readable="false" name="Qdata" type="gpointer"/>
      <method name="GetQdata" cname="gst_mini_object_get_qdata">
        <return-type type="gpointer"/>
        <parameters>
          <parameter name="quark" type="guint32"/>
        </parameters>
      </method>
      <method name="IsWritable" cname="gst_mini_object_is_writable">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="Lock" cname="gst_mini_object_lock">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="flags" type="GstLockFlags"/>
        </parameters>
      </method>
      <method name="SetQdata" cname="gst_mini_object_set_qdata">
        <return-type type="void"/>
        <parameters>
          <parameter name="quark" type="guint32"/>
          <parameter name="data" type="gpointer"/>
          <parameter scope="async" name="destroy" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="StealQdata" cname="gst_mini_object_steal_qdata">
        <return-type type="gpointer*" owned="true"/>
        <parameters>
          <parameter name="quark" type="guint32"/>
        </parameters>
      </method>
      <method name="Unlock" cname="gst_mini_object_unlock">
        <return-type type="void"/>
        <parameters>
          <parameter name="flags" type="GstLockFlags"/>
        </parameters>
      </method>
      <method name="Unref" cname="gst_mini_object_unref">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="Replace" cname="gst_mini_object_replace" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="olddata" type="GstMiniObject**" owned="true" pass_as="ref">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="newdata" type="GstMiniObject*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Take" cname="gst_mini_object_take" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="olddata" type="GstMiniObject**" owned="true" pass_as="ref">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="newdata" type="GstMiniObject*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
    </struct>
    <struct name="PadPrivate" cname="GstPadPrivate" opaque="true" hidden="true"/>
    <struct name="PadProbeInfo" cname="GstPadProbeInfo" opaque="false" hidden="false">
      <field cname="type" access="public" writeable="true" readable="true" name="Type" type="GstPadProbeType"/>
      <field cname="id" access="public" writeable="true" readable="true" name="Id" type="gulong"/>
      <field cname="data" access="public" writeable="true" readable="true" name="Data" type="gpointer"/>
      <field cname="offset" access="public" writeable="true" readable="true" name="Offset" type="guint64"/>
      <field cname="size" access="public" writeable="true" readable="true" name="Size" type="guint"/>
      <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
      <method name="GetBuffer" cname="gst_pad_probe_info_get_buffer">
        <return-type type="GstBuffer*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetBufferList" cname="gst_pad_probe_info_get_buffer_list">
        <return-type type="GstBufferList*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetEvent" cname="gst_pad_probe_info_get_event">
        <return-type type="GstEvent*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetQuery" cname="gst_pad_probe_info_get_query">
        <return-type type="GstQuery*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
    </struct>
    <struct name="ParamSpecFraction" cname="GstParamSpecFraction" opaque="false" hidden="false">
      <field cname="parent_instance" access="public" writeable="true" readable="true" name="ParentInstance" type="GParamSpec*"/>
      <field cname="min_num" access="public" writeable="true" readable="true" name="MinNum" type="gint"/>
      <field cname="min_den" access="public" writeable="true" readable="true" name="MinDen" type="gint"/>
      <field cname="max_num" access="public" writeable="true" readable="true" name="MaxNum" type="gint"/>
      <field cname="max_den" access="public" writeable="true" readable="true" name="MaxDen" type="gint"/>
      <field cname="def_num" access="public" writeable="true" readable="true" name="DefNum" type="gint"/>
      <field cname="def_den" access="public" writeable="true" readable="true" name="DefDen" type="gint"/>
    </struct>
    <boxed name="ParseContext" cname="GstParseContext" opaque="false" hidden="false">
      <method name="GetType" cname="gst_parse_context_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gst_parse_context_new" disable_void_ctor=""/>
      <method name="Free" cname="gst_parse_context_free">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="GetMissingElements" cname="gst_parse_context_get_missing_elements">
        <return-type type="gchar***" owned="true" array="true" null_term_array="true"/>
        <parameters/>
      </method>
    </boxed>
    <struct name="PipelinePrivate" cname="GstPipelinePrivate" opaque="true" hidden="true"/>
    <struct name="PluginDesc" cname="GstPluginDesc" opaque="false" hidden="false">
      <field cname="major_version" access="public" writeable="true" readable="true" name="MajorVersion" type="gint"/>
      <field cname="minor_version" access="public" writeable="true" readable="true" name="MinorVersion" type="gint"/>
      <field cname="name" access="public" writeable="true" readable="true" name="Name" type="gchar*"/>
      <field cname="description" access="public" writeable="true" readable="true" name="Description" type="gchar*"/>
      <field cname="plugin_init" access="public" writeable="true" readable="true" name="PluginInit" type="GstPluginInitFunc"/>
      <field cname="version" access="public" writeable="true" readable="true" name="Version" type="gchar*"/>
      <field cname="license" access="public" writeable="true" readable="true" name="License" type="gchar*"/>
      <field cname="source" access="public" writeable="true" readable="true" name="Source" type="gchar*"/>
      <field cname="package" access="public" writeable="true" readable="true" name="Package" type="gchar*"/>
      <field cname="origin" access="public" writeable="true" readable="true" name="Origin" type="gchar*"/>
      <field cname="release_datetime" access="public" writeable="true" readable="true" name="ReleaseDatetime" type="gchar*"/>
      <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
    </struct>
    <struct name="Poll" cname="GstPoll" opaque="true" hidden="false">
      <method name="AddFd" cname="gst_poll_add_fd">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="fd" type="GstPollFD*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="FdCanRead" cname="gst_poll_fd_can_read">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="fd" type="GstPollFD*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="FdCanWrite" cname="gst_poll_fd_can_write">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="fd" type="GstPollFD*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="FdCtlRead" cname="gst_poll_fd_ctl_read">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="fd" type="GstPollFD*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="active" type="gboolean"/>
        </parameters>
      </method>
      <method name="FdCtlWrite" cname="gst_poll_fd_ctl_write">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="fd" type="GstPollFD*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="active" type="gboolean"/>
        </parameters>
      </method>
      <method name="FdHasClosed" cname="gst_poll_fd_has_closed">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="fd" type="GstPollFD*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="FdHasError" cname="gst_poll_fd_has_error">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="fd" type="GstPollFD*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="FdIgnored" cname="gst_poll_fd_ignored">
        <return-type type="void"/>
        <parameters>
          <parameter name="fd" type="GstPollFD*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Free" cname="gst_poll_free">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="GetReadGpollfd" cname="gst_poll_get_read_gpollfd">
        <return-type type="void"/>
        <parameters>
          <parameter name="fd" type="GPollFD*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ReadControl" cname="gst_poll_read_control">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="RemoveFd" cname="gst_poll_remove_fd">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="fd" type="GstPollFD*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Restart" cname="gst_poll_restart">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="SetControllable" cname="gst_poll_set_controllable">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="controllable" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetFlushing" cname="gst_poll_set_flushing">
        <return-type type="void"/>
        <parameters>
          <parameter name="flushing" type="gboolean"/>
        </parameters>
      </method>
      <method name="Wait" cname="gst_poll_wait">
        <return-type type="gint"/>
        <parameters>
          <parameter name="timeout" type="guint64"/>
        </parameters>
      </method>
      <method name="WriteControl" cname="gst_poll_write_control">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
    </struct>
    <struct name="PollFD" cname="GstPollFD" opaque="false" hidden="false">
      <field cname="fd" access="public" writeable="true" readable="true" name="Fd" type="gint"/>
      <field cname="idx" access="private" writeable="false" readable="false" name="Idx" type="gint"/>
      <method name="Init" cname="gst_poll_fd_init">
        <return-type type="void"/>
        <parameters/>
      </method>
    </struct>
    <struct name="ProxyPadPrivate" cname="GstProxyPadPrivate" opaque="true" hidden="true"/>
    <boxed name="Query" cname="GstQuery" opaque="false" hidden="false">
      <method name="GetType" cname="gst_query_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <field cname="mini_object" access="public" writeable="true" readable="true" name="MiniObject" type="GstMiniObject">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="type" access="public" writeable="true" readable="true" name="Type" type="GstQueryType"/>
      <constructor cname="gst_query_new_accept_caps">
        <parameters>
          <parameter name="caps" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </constructor>
      <constructor cname="gst_query_new_allocation">
        <parameters>
          <parameter name="caps" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="need_pool" type="gboolean"/>
        </parameters>
      </constructor>
      <constructor cname="gst_query_new_buffering">
        <parameters>
          <parameter name="format" type="GstFormat"/>
        </parameters>
      </constructor>
      <constructor cname="gst_query_new_caps">
        <parameters>
          <parameter name="filter" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </constructor>
      <constructor cname="gst_query_new_convert">
        <parameters>
          <parameter name="src_format" type="GstFormat"/>
          <parameter name="value" type="gint64"/>
          <parameter name="dest_format" type="GstFormat"/>
        </parameters>
      </constructor>
      <constructor cname="gst_query_new_custom">
        <parameters>
          <parameter name="type" type="GstQueryType"/>
          <parameter name="structure" type="GstStructure*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </constructor>
      <constructor cname="gst_query_new_drain" disable_void_ctor=""/>
      <constructor cname="gst_query_new_duration">
        <parameters>
          <parameter name="format" type="GstFormat"/>
        </parameters>
      </constructor>
      <constructor cname="gst_query_new_formats" disable_void_ctor=""/>
      <constructor cname="gst_query_new_latency" disable_void_ctor=""/>
      <constructor cname="gst_query_new_position">
        <parameters>
          <parameter name="format" type="GstFormat"/>
        </parameters>
      </constructor>
      <constructor cname="gst_query_new_scheduling" disable_void_ctor=""/>
      <constructor cname="gst_query_new_seeking">
        <parameters>
          <parameter name="format" type="GstFormat"/>
        </parameters>
      </constructor>
      <constructor cname="gst_query_new_segment">
        <parameters>
          <parameter name="format" type="GstFormat"/>
        </parameters>
      </constructor>
      <constructor cname="gst_query_new_uri" disable_void_ctor=""/>
      <method name="AddAllocationMeta" cname="gst_query_add_allocation_meta">
        <return-type type="void"/>
        <parameters>
          <parameter name="api" type="GType"/>
          <parameter allow-none="1" name="params" type="GstStructure*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="AddAllocationParam" cname="gst_query_add_allocation_param">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="allocator" type="GstAllocator*"/>
          <parameter allow-none="1" name="params" type="GstAllocationParams*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="AddAllocationPool" cname="gst_query_add_allocation_pool">
        <return-type type="void"/>
        <parameters>
          <parameter name="pool" type="GstBufferPool*"/>
          <parameter name="size" type="guint"/>
          <parameter name="min_buffers" type="guint"/>
          <parameter name="max_buffers" type="guint"/>
        </parameters>
      </method>
      <method name="AddBufferingRange" cname="gst_query_add_buffering_range">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="start" type="gint64"/>
          <parameter name="stop" type="gint64"/>
        </parameters>
      </method>
      <method name="AddSchedulingMode" cname="gst_query_add_scheduling_mode">
        <return-type type="void"/>
        <parameters>
          <parameter name="mode" type="GstPadMode"/>
        </parameters>
      </method>
      <method name="FindAllocationMeta" cname="gst_query_find_allocation_meta">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="api" type="GType"/>
          <parameter allow-none="1" name="index" type="guint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetNAllocationMetas" cname="gst_query_get_n_allocation_metas">
        <return-type type="guint"/>
        <parameters/>
      </method>
      <method name="GetNAllocationParams" cname="gst_query_get_n_allocation_params">
        <return-type type="guint"/>
        <parameters/>
      </method>
      <method name="GetNAllocationPools" cname="gst_query_get_n_allocation_pools">
        <return-type type="guint"/>
        <parameters/>
      </method>
      <method name="GetNBufferingRanges" cname="gst_query_get_n_buffering_ranges">
        <return-type type="guint"/>
        <parameters/>
      </method>
      <method name="GetNSchedulingModes" cname="gst_query_get_n_scheduling_modes">
        <return-type type="guint"/>
        <parameters/>
      </method>
      <method name="GetStructure" cname="gst_query_get_structure">
        <return-type type="GstStructure*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="HasSchedulingMode" cname="gst_query_has_scheduling_mode">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="mode" type="GstPadMode"/>
        </parameters>
      </method>
      <method name="HasSchedulingModeWithFlags" cname="gst_query_has_scheduling_mode_with_flags">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="mode" type="GstPadMode"/>
          <parameter name="flags" type="GstSchedulingFlags"/>
        </parameters>
      </method>
      <method name="ParseAcceptCaps" cname="gst_query_parse_accept_caps">
        <return-type type="void"/>
        <parameters>
          <parameter name="caps" type="GstCaps**" owned="true" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ParseAcceptCapsResult" cname="gst_query_parse_accept_caps_result">
        <return-type type="void"/>
        <parameters>
          <parameter name="_result" type="gboolean"/>
        </parameters>
      </method>
      <method name="ParseAllocation" cname="gst_query_parse_allocation">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="caps" type="GstCaps**" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter allow-none="1" name="need_pool" type="gboolean*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseBufferingPercent" cname="gst_query_parse_buffering_percent">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="busy" type="gboolean*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="percent" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseBufferingRange" cname="gst_query_parse_buffering_range">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="format" type="GstFormat" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="start" type="gint64*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="stop" type="gint64*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="estimated_total" type="gint64*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseBufferingStats" cname="gst_query_parse_buffering_stats">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="mode" type="GstBufferingMode" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="avg_in" type="gint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="avg_out" type="gint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="buffering_left" type="gint64*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseCaps" cname="gst_query_parse_caps">
        <return-type type="void"/>
        <parameters>
          <parameter name="filter" type="GstCaps**" owned="true" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ParseCapsResult" cname="gst_query_parse_caps_result">
        <return-type type="void"/>
        <parameters>
          <parameter name="caps" type="GstCaps**" owned="true" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ParseConvert" cname="gst_query_parse_convert">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="src_format" type="GstFormat" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="src_value" type="gint64*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="dest_format" type="GstFormat" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="dest_value" type="gint64*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseDuration" cname="gst_query_parse_duration">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="format" type="GstFormat" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="duration" type="gint64*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseLatency" cname="gst_query_parse_latency">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="live" type="gboolean*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="min_latency" type="guint64" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="max_latency" type="guint64" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseNFormats" cname="gst_query_parse_n_formats">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="n_formats" type="guint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseNthAllocationMeta" cname="gst_query_parse_nth_allocation_meta">
        <return-type type="GType"/>
        <parameters>
          <parameter name="index" type="guint"/>
          <parameter allow-none="1" name="params" type="GstStructure**" owned="true" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ParseNthAllocationParam" cname="gst_query_parse_nth_allocation_param">
        <return-type type="void"/>
        <parameters>
          <parameter name="index" type="guint"/>
          <parameter allow-none="1" name="allocator" type="GstAllocator*" pass_as="out"/>
          <parameter allow-none="1" name="params" type="GstAllocationParams*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ParseNthAllocationPool" cname="gst_query_parse_nth_allocation_pool">
        <return-type type="void"/>
        <parameters>
          <parameter name="index" type="guint"/>
          <parameter allow-none="1" name="pool" type="GstBufferPool*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="size" type="guint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="min_buffers" type="guint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="max_buffers" type="guint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseNthBufferingRange" cname="gst_query_parse_nth_buffering_range">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="index" type="guint"/>
          <parameter allow-none="1" name="start" type="gint64*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="stop" type="gint64*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseNthFormat" cname="gst_query_parse_nth_format">
        <return-type type="void"/>
        <parameters>
          <parameter name="nth" type="guint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="format" type="GstFormat" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseNthSchedulingMode" cname="gst_query_parse_nth_scheduling_mode">
        <return-type type="GstPadMode"/>
        <parameters>
          <parameter name="index" type="guint"/>
        </parameters>
      </method>
      <method name="ParsePosition" cname="gst_query_parse_position">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="format" type="GstFormat" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="cur" type="gint64*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseScheduling" cname="gst_query_parse_scheduling">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="flags" type="GstSchedulingFlags" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="minsize" type="gint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="maxsize" type="gint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="align" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseSeeking" cname="gst_query_parse_seeking">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="format" type="GstFormat" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="seekable" type="gboolean*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="segment_start" type="gint64*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="segment_end" type="gint64*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseSegment" cname="gst_query_parse_segment">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="rate" type="gdouble*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="format" type="GstFormat" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="start_value" type="gint64*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="stop_value" type="gint64*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseUri" cname="gst_query_parse_uri">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="uri" type="gchar*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="RemoveNthAllocationMeta" cname="gst_query_remove_nth_allocation_meta">
        <return-type type="void"/>
        <parameters>
          <parameter name="index" type="guint"/>
        </parameters>
      </method>
      <method name="SetAcceptCapsResult" cname="gst_query_set_accept_caps_result">
        <return-type type="void"/>
        <parameters>
          <parameter name="_result" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetBufferingPercent" cname="gst_query_set_buffering_percent">
        <return-type type="void"/>
        <parameters>
          <parameter name="busy" type="gboolean"/>
          <parameter name="percent" type="gint"/>
        </parameters>
      </method>
      <method name="SetBufferingRange" cname="gst_query_set_buffering_range">
        <return-type type="void"/>
        <parameters>
          <parameter name="format" type="GstFormat"/>
          <parameter name="start" type="gint64"/>
          <parameter name="stop" type="gint64"/>
          <parameter name="estimated_total" type="gint64"/>
        </parameters>
      </method>
      <method name="SetBufferingStats" cname="gst_query_set_buffering_stats">
        <return-type type="void"/>
        <parameters>
          <parameter name="mode" type="GstBufferingMode"/>
          <parameter name="avg_in" type="gint"/>
          <parameter name="avg_out" type="gint"/>
          <parameter name="buffering_left" type="gint64"/>
        </parameters>
      </method>
      <method name="SetCapsResult" cname="gst_query_set_caps_result">
        <return-type type="void"/>
        <parameters>
          <parameter name="caps" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetConvert" cname="gst_query_set_convert">
        <return-type type="void"/>
        <parameters>
          <parameter name="src_format" type="GstFormat"/>
          <parameter name="src_value" type="gint64"/>
          <parameter name="dest_format" type="GstFormat"/>
          <parameter name="dest_value" type="gint64"/>
        </parameters>
      </method>
      <method name="SetDuration" cname="gst_query_set_duration">
        <return-type type="void"/>
        <parameters>
          <parameter name="format" type="GstFormat"/>
          <parameter name="duration" type="gint64"/>
        </parameters>
      </method>
      <method name="SetFormatsv" cname="gst_query_set_formatsv">
        <return-type type="void"/>
        <parameters>
          <parameter name="n_formats" type="gint"/>
          <parameter name="formats" type="GstFormat*" array="true" array_length_param_index="0"/>
        </parameters>
      </method>
      <method name="SetLatency" cname="gst_query_set_latency">
        <return-type type="void"/>
        <parameters>
          <parameter name="live" type="gboolean"/>
          <parameter name="min_latency" type="guint64"/>
          <parameter name="max_latency" type="guint64"/>
        </parameters>
      </method>
      <method name="SetNthAllocationParam" cname="gst_query_set_nth_allocation_param">
        <return-type type="void"/>
        <parameters>
          <parameter name="index" type="guint"/>
          <parameter allow-none="1" name="allocator" type="GstAllocator*"/>
          <parameter allow-none="1" name="params" type="GstAllocationParams*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetNthAllocationPool" cname="gst_query_set_nth_allocation_pool">
        <return-type type="void"/>
        <parameters>
          <parameter name="index" type="guint"/>
          <parameter name="pool" type="GstBufferPool*"/>
          <parameter name="size" type="guint"/>
          <parameter name="min_buffers" type="guint"/>
          <parameter name="max_buffers" type="guint"/>
        </parameters>
      </method>
      <method name="SetPosition" cname="gst_query_set_position">
        <return-type type="void"/>
        <parameters>
          <parameter name="format" type="GstFormat"/>
          <parameter name="cur" type="gint64"/>
        </parameters>
      </method>
      <method name="SetScheduling" cname="gst_query_set_scheduling">
        <return-type type="void"/>
        <parameters>
          <parameter name="flags" type="GstSchedulingFlags"/>
          <parameter name="minsize" type="gint"/>
          <parameter name="maxsize" type="gint"/>
          <parameter name="align" type="gint"/>
        </parameters>
      </method>
      <method name="SetSeeking" cname="gst_query_set_seeking">
        <return-type type="void"/>
        <parameters>
          <parameter name="format" type="GstFormat"/>
          <parameter name="seekable" type="gboolean"/>
          <parameter name="segment_start" type="gint64"/>
          <parameter name="segment_end" type="gint64"/>
        </parameters>
      </method>
      <method name="SetSegment" cname="gst_query_set_segment">
        <return-type type="void"/>
        <parameters>
          <parameter name="rate" type="gdouble"/>
          <parameter name="format" type="GstFormat"/>
          <parameter name="start_value" type="gint64"/>
          <parameter name="stop_value" type="gint64"/>
        </parameters>
      </method>
      <method name="SetUri" cname="gst_query_set_uri">
        <return-type type="void"/>
        <parameters>
          <parameter name="uri" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="WritableStructure" cname="gst_query_writable_structure">
        <return-type type="GstStructure*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
    </boxed>
    <struct name="RegistryPrivate" cname="GstRegistryPrivate" opaque="true" hidden="true"/>
    <boxed name="Sample" cname="GstSample" opaque="false" hidden="false">
      <method name="GetType" cname="gst_sample_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gst_sample_new">
        <parameters>
          <parameter name="buffer" type="GstBuffer*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="caps" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="segment" type="GstSegment*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="info" type="GstStructure*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </constructor>
      <method name="GetBuffer" cname="gst_sample_get_buffer">
        <return-type type="GstBuffer*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetCaps" cname="gst_sample_get_caps">
        <return-type type="GstCaps*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetInfo" cname="gst_sample_get_info">
        <return-type type="GstStructure*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetSegment" cname="gst_sample_get_segment">
        <return-type type="GstSegment*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
    </boxed>
    <boxed name="Segment" cname="GstSegment" opaque="false" hidden="false">
      <method name="GetType" cname="gst_segment_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <field cname="flags" access="public" writeable="true" readable="true" name="Flags" type="GstSegmentFlags"/>
      <field cname="rate" access="public" writeable="true" readable="true" name="Rate" type="gdouble"/>
      <field cname="applied_rate" access="public" writeable="true" readable="true" name="AppliedRate" type="gdouble"/>
      <field cname="format" access="public" writeable="true" readable="true" name="Format" type="GstFormat"/>
      <field cname="base" access="public" writeable="true" readable="true" name="Base" type="guint64"/>
      <field cname="offset" access="public" writeable="true" readable="true" name="Offset" type="guint64"/>
      <field cname="start" access="public" writeable="true" readable="true" name="Start" type="guint64"/>
      <field cname="stop" access="public" writeable="true" readable="true" name="Stop" type="guint64"/>
      <field cname="time" access="public" writeable="true" readable="true" name="Time" type="guint64"/>
      <field cname="position" access="public" writeable="true" readable="true" name="Position" type="guint64"/>
      <field cname="duration" access="public" writeable="true" readable="true" name="Duration" type="guint64"/>
      <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
      <constructor cname="gst_segment_new" disable_void_ctor=""/>
      <method name="Clip" cname="gst_segment_clip">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="format" type="GstFormat"/>
          <parameter name="start" type="guint64"/>
          <parameter name="stop" type="guint64"/>
          <parameter allow-none="1" name="clip_start" type="guint64*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="clip_stop" type="guint64*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="Copy" cname="gst_segment_copy">
        <return-type type="GstSegment*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="CopyInto" cname="gst_segment_copy_into">
        <return-type type="void"/>
        <parameters>
          <parameter name="dest" type="GstSegment*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="DoSeek" cname="gst_segment_do_seek">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="rate" type="gdouble"/>
          <parameter name="format" type="GstFormat"/>
          <parameter name="flags" type="GstSeekFlags"/>
          <parameter name="start_type" type="GstSeekType"/>
          <parameter name="start" type="guint64"/>
          <parameter name="stop_type" type="GstSeekType"/>
          <parameter name="stop" type="guint64"/>
          <parameter name="update" type="gboolean"/>
        </parameters>
      </method>
      <method name="Free" cname="gst_segment_free">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="Init" cname="gst_segment_init">
        <return-type type="void"/>
        <parameters>
          <parameter name="format" type="GstFormat"/>
        </parameters>
      </method>
      <method name="SetRunningTime" cname="gst_segment_set_running_time">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="format" type="GstFormat"/>
          <parameter name="running_time" type="guint64"/>
        </parameters>
      </method>
      <method name="ToPosition" cname="gst_segment_to_position">
        <return-type type="guint64"/>
        <parameters>
          <parameter name="format" type="GstFormat"/>
          <parameter name="running_time" type="guint64"/>
        </parameters>
      </method>
      <method name="ToRunningTime" cname="gst_segment_to_running_time">
        <return-type type="guint64"/>
        <parameters>
          <parameter name="format" type="GstFormat"/>
          <parameter name="position" type="guint64"/>
        </parameters>
      </method>
      <method name="ToStreamTime" cname="gst_segment_to_stream_time">
        <return-type type="guint64"/>
        <parameters>
          <parameter name="format" type="GstFormat"/>
          <parameter name="position" type="guint64"/>
        </parameters>
      </method>
    </boxed>
    <struct name="StaticCaps" cname="GstStaticCaps" opaque="false" hidden="false">
      <field cname="caps" access="public" writeable="true" readable="true" name="Caps" type="GstCaps*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="string" access="public" writeable="true" readable="true" name="String" type="gchar*"/>
      <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
      <method name="Cleanup" cname="gst_static_caps_cleanup">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="Get" cname="gst_static_caps_get">
        <return-type type="GstCaps*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
    </struct>
    <struct name="StaticPadTemplate" cname="GstStaticPadTemplate" opaque="false" hidden="false">
      <field cname="name_template" access="public" writeable="true" readable="true" name="NameTemplate" type="gchar*"/>
      <field cname="direction" access="public" writeable="true" readable="true" name="Direction" type="GstPadDirection"/>
      <field cname="presence" access="public" writeable="true" readable="true" name="Presence" type="GstPadPresence"/>
      <field cname="static_caps" access="public" writeable="true" readable="true" name="StaticCaps" type="GstStaticCaps">
        <warning>missing glib:type-name</warning>
      </field>
      <method name="Get" cname="gst_static_pad_template_get">
        <return-type type="GstPadTemplate*" owned="true"/>
        <parameters/>
      </method>
      <method name="GetCaps" cname="gst_static_pad_template_get_caps">
        <return-type type="GstCaps*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
    </struct>
    <boxed name="Structure" cname="GstStructure" opaque="false" hidden="false">
      <method name="GetType" cname="gst_structure_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <field cname="type" access="public" writeable="true" readable="true" name="Type" type="GType"/>
      <field cname="name" access="private" writeable="false" readable="false" name="Name" type="guint32"/>
      <constructor cname="gst_structure_new_empty">
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </constructor>
      <constructor cname="gst_structure_new_id_empty">
        <parameters>
          <parameter name="quark" type="guint32"/>
        </parameters>
      </constructor>
      <method name="CanIntersect" cname="gst_structure_can_intersect">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="struct2" type="GstStructure*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Copy" cname="gst_structure_copy">
        <return-type type="GstStructure*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="Fixate" cname="gst_structure_fixate">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="FixateField" cname="gst_structure_fixate_field">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="field_name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="FixateFieldBoolean" cname="gst_structure_fixate_field_boolean">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="field_name" type="const-gchar*"/>
          <parameter name="target" type="gboolean"/>
        </parameters>
      </method>
      <method name="FixateFieldNearestDouble" cname="gst_structure_fixate_field_nearest_double">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="field_name" type="const-gchar*"/>
          <parameter name="target" type="gdouble"/>
        </parameters>
      </method>
      <method name="FixateFieldNearestFraction" cname="gst_structure_fixate_field_nearest_fraction">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="field_name" type="const-gchar*"/>
          <parameter name="target_numerator" type="gint"/>
          <parameter name="target_denominator" type="gint"/>
        </parameters>
      </method>
      <method name="FixateFieldNearestInt" cname="gst_structure_fixate_field_nearest_int">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="field_name" type="const-gchar*"/>
          <parameter name="target" type="gint"/>
        </parameters>
      </method>
      <method name="FixateFieldString" cname="gst_structure_fixate_field_string">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="field_name" type="const-gchar*"/>
          <parameter name="target" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="Foreach" cname="gst_structure_foreach">
        <return-type type="gboolean"/>
        <parameters>
          <parameter closure="1" scope="call" name="func" type="GstStructureForeachFunc"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="Free" cname="gst_structure_free">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="GetBoolean" cname="gst_structure_get_boolean">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="fieldname" type="const-gchar*"/>
          <parameter name="value" type="gboolean*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetClockTime" cname="gst_structure_get_clock_time">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="fieldname" type="const-gchar*"/>
          <parameter name="value" type="guint64" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetDate" cname="gst_structure_get_date">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="fieldname" type="const-gchar*"/>
          <parameter name="value" type="GDate**" owned="true" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetDateTime" cname="gst_structure_get_date_time">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="fieldname" type="const-gchar*"/>
          <parameter name="value" type="GstDateTime**" owned="true" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetDouble" cname="gst_structure_get_double">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="fieldname" type="const-gchar*"/>
          <parameter name="value" type="gdouble*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetEnum" cname="gst_structure_get_enum">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="fieldname" type="const-gchar*"/>
          <parameter name="enumtype" type="GType"/>
          <parameter name="value" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetFieldType" cname="gst_structure_get_field_type">
        <return-type type="GType"/>
        <parameters>
          <parameter name="fieldname" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetFraction" cname="gst_structure_get_fraction">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="fieldname" type="const-gchar*"/>
          <parameter name="value_numerator" type="gint*" owned="true" pass_as="out"/>
          <parameter name="value_denominator" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetInt" cname="gst_structure_get_int">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="fieldname" type="const-gchar*"/>
          <parameter name="value" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetName" cname="gst_structure_get_name">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetNameId" cname="gst_structure_get_name_id">
        <return-type type="guint32"/>
        <parameters/>
      </method>
      <method name="GetString" cname="gst_structure_get_string">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="fieldname" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetUint" cname="gst_structure_get_uint">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="fieldname" type="const-gchar*"/>
          <parameter name="value" type="guint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetValue" cname="gst_structure_get_value">
        <return-type type="GValue*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="fieldname" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="HasField" cname="gst_structure_has_field">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="fieldname" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="HasFieldTyped" cname="gst_structure_has_field_typed">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="fieldname" type="const-gchar*"/>
          <parameter name="type" type="GType"/>
        </parameters>
      </method>
      <method name="HasName" cname="gst_structure_has_name">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="IdGetValue" cname="gst_structure_id_get_value">
        <return-type type="GValue*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="field" type="guint32"/>
        </parameters>
      </method>
      <method name="IdHasField" cname="gst_structure_id_has_field">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="field" type="guint32"/>
        </parameters>
      </method>
      <method name="IdHasFieldTyped" cname="gst_structure_id_has_field_typed">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="field" type="guint32"/>
          <parameter name="type" type="GType"/>
        </parameters>
      </method>
      <method name="IdSetValue" cname="gst_structure_id_set_value">
        <return-type type="void"/>
        <parameters>
          <parameter name="field" type="guint32"/>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="IdTakeValue" cname="gst_structure_id_take_value">
        <return-type type="void"/>
        <parameters>
          <parameter name="field" type="guint32"/>
          <parameter name="value" type="GValue*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Intersect" cname="gst_structure_intersect">
        <return-type type="GstStructure*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="struct2" type="GstStructure*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="IsEqual" cname="gst_structure_is_equal">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="structure2" type="GstStructure*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="IsSubset" cname="gst_structure_is_subset">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="superset" type="GstStructure*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="MapInPlace" cname="gst_structure_map_in_place">
        <return-type type="gboolean"/>
        <parameters>
          <parameter closure="1" scope="call" name="func" type="GstStructureMapFunc"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="NFields" cname="gst_structure_n_fields">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="NthFieldName" cname="gst_structure_nth_field_name">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="index" type="guint"/>
        </parameters>
      </method>
      <method name="RemoveAllFields" cname="gst_structure_remove_all_fields">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="RemoveField" cname="gst_structure_remove_field">
        <return-type type="void"/>
        <parameters>
          <parameter name="fieldname" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetName" cname="gst_structure_set_name">
        <return-type type="void"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetParentRefcount" cname="gst_structure_set_parent_refcount">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="refcount" type="gint"/>
        </parameters>
      </method>
      <method name="SetValue" cname="gst_structure_set_value">
        <return-type type="void"/>
        <parameters>
          <parameter name="fieldname" type="const-gchar*"/>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="TakeValue" cname="gst_structure_take_value">
        <return-type type="void"/>
        <parameters>
          <parameter name="fieldname" type="const-gchar*"/>
          <parameter name="value" type="GValue*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ToString" cname="gst_structure_to_string">
        <return-type type="gchar*" owned="true"/>
        <parameters/>
      </method>
      <method name="FromString" cname="gst_structure_from_string" shared="true">
        <return-type type="GstStructure*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="string" type="const-gchar*"/>
          <parameter allow-none="1" name="end" type="const-gchar*" pass_as="out"/>
        </parameters>
      </method>
    </boxed>
    <struct name="SystemClockPrivate" cname="GstSystemClockPrivate" opaque="true" hidden="true"/>
    <boxed name="TagList" cname="GstTagList" opaque="false" hidden="false">
      <method name="GetType" cname="gst_tag_list_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <field cname="mini_object" access="public" writeable="true" readable="true" name="MiniObject" type="GstMiniObject">
        <warning>missing glib:type-name</warning>
      </field>
      <constructor cname="gst_tag_list_new_empty" disable_void_ctor=""/>
      <constructor cname="gst_tag_list_new_from_string">
        <parameters>
          <parameter name="str" type="const-gchar*"/>
        </parameters>
      </constructor>
      <method name="AddValue" cname="gst_tag_list_add_value">
        <return-type type="void"/>
        <parameters>
          <parameter name="mode" type="GstTagMergeMode"/>
          <parameter name="tag" type="const-gchar*"/>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Foreach" cname="gst_tag_list_foreach">
        <return-type type="void"/>
        <parameters>
          <parameter closure="1" scope="call" name="func" type="GstTagForeachFunc"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="GetBoolean" cname="gst_tag_list_get_boolean">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="tag" type="const-gchar*"/>
          <parameter name="value" type="gboolean*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetBooleanIndex" cname="gst_tag_list_get_boolean_index">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="tag" type="const-gchar*"/>
          <parameter name="index" type="guint"/>
          <parameter name="value" type="gboolean*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetDate" cname="gst_tag_list_get_date">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="tag" type="const-gchar*"/>
          <parameter name="value" type="GDate**" owned="true" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetDateIndex" cname="gst_tag_list_get_date_index">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="tag" type="const-gchar*"/>
          <parameter name="index" type="guint"/>
          <parameter name="value" type="GDate**" owned="true" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetDateTime" cname="gst_tag_list_get_date_time">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="tag" type="const-gchar*"/>
          <parameter name="value" type="GstDateTime**" owned="true" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetDateTimeIndex" cname="gst_tag_list_get_date_time_index">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="tag" type="const-gchar*"/>
          <parameter name="index" type="guint"/>
          <parameter name="value" type="GstDateTime**" owned="true" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetDouble" cname="gst_tag_list_get_double">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="tag" type="const-gchar*"/>
          <parameter name="value" type="gdouble*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetDoubleIndex" cname="gst_tag_list_get_double_index">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="tag" type="const-gchar*"/>
          <parameter name="index" type="guint"/>
          <parameter name="value" type="gdouble*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetFloat" cname="gst_tag_list_get_float">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="tag" type="const-gchar*"/>
          <parameter name="value" type="gfloat*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetFloatIndex" cname="gst_tag_list_get_float_index">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="tag" type="const-gchar*"/>
          <parameter name="index" type="guint"/>
          <parameter name="value" type="gfloat*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetInt" cname="gst_tag_list_get_int">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="tag" type="const-gchar*"/>
          <parameter name="value" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetInt64" cname="gst_tag_list_get_int64">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="tag" type="const-gchar*"/>
          <parameter name="value" type="gint64"/>
        </parameters>
      </method>
      <method name="GetInt64Index" cname="gst_tag_list_get_int64_index">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="tag" type="const-gchar*"/>
          <parameter name="index" type="guint"/>
          <parameter name="value" type="gint64*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetIntIndex" cname="gst_tag_list_get_int_index">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="tag" type="const-gchar*"/>
          <parameter name="index" type="guint"/>
          <parameter name="value" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetPointer" cname="gst_tag_list_get_pointer">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="tag" type="const-gchar*"/>
          <parameter name="value" type="gpointer" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetPointerIndex" cname="gst_tag_list_get_pointer_index">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="tag" type="const-gchar*"/>
          <parameter name="index" type="guint"/>
          <parameter name="value" type="gpointer" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetSample" cname="gst_tag_list_get_sample">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="tag" type="const-gchar*"/>
          <parameter name="sample" type="GstSample**" owned="true" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetSampleIndex" cname="gst_tag_list_get_sample_index">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="tag" type="const-gchar*"/>
          <parameter name="index" type="guint"/>
          <parameter name="sample" type="GstSample**" owned="true" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetScope" cname="gst_tag_list_get_scope">
        <return-type type="GstTagScope"/>
        <parameters/>
      </method>
      <method name="GetString" cname="gst_tag_list_get_string">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="tag" type="const-gchar*"/>
          <parameter name="value" type="gchar*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetStringIndex" cname="gst_tag_list_get_string_index">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="tag" type="const-gchar*"/>
          <parameter name="index" type="guint"/>
          <parameter name="value" type="gchar*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetTagSize" cname="gst_tag_list_get_tag_size">
        <return-type type="guint"/>
        <parameters>
          <parameter name="tag" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetUint" cname="gst_tag_list_get_uint">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="tag" type="const-gchar*"/>
          <parameter name="value" type="guint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetUint64" cname="gst_tag_list_get_uint64">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="tag" type="const-gchar*"/>
          <parameter name="value" type="guint64*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetUint64Index" cname="gst_tag_list_get_uint64_index">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="tag" type="const-gchar*"/>
          <parameter name="index" type="guint"/>
          <parameter name="value" type="guint64*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetUintIndex" cname="gst_tag_list_get_uint_index">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="tag" type="const-gchar*"/>
          <parameter name="index" type="guint"/>
          <parameter name="value" type="guint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetValueIndex" cname="gst_tag_list_get_value_index">
        <return-type type="GValue*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="tag" type="const-gchar*"/>
          <parameter name="index" type="guint"/>
        </parameters>
      </method>
      <method name="Insert" cname="gst_tag_list_insert">
        <return-type type="void"/>
        <parameters>
          <parameter name="from" type="GstTagList*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="mode" type="GstTagMergeMode"/>
        </parameters>
      </method>
      <method name="IsEmpty" cname="gst_tag_list_is_empty">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="IsEqual" cname="gst_tag_list_is_equal">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="list2" type="GstTagList*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Merge" cname="gst_tag_list_merge">
        <return-type type="GstTagList*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="list2" type="GstTagList*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="mode" type="GstTagMergeMode"/>
        </parameters>
      </method>
      <method name="NTags" cname="gst_tag_list_n_tags">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="NthTagName" cname="gst_tag_list_nth_tag_name">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="index" type="guint"/>
        </parameters>
      </method>
      <method name="PeekStringIndex" cname="gst_tag_list_peek_string_index">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="tag" type="const-gchar*"/>
          <parameter name="index" type="guint"/>
          <parameter name="value" type="const-gchar*" pass_as="out"/>
        </parameters>
      </method>
      <method name="RemoveTag" cname="gst_tag_list_remove_tag">
        <return-type type="void"/>
        <parameters>
          <parameter name="tag" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetScope" cname="gst_tag_list_set_scope">
        <return-type type="void"/>
        <parameters>
          <parameter name="scope" type="GstTagScope"/>
        </parameters>
      </method>
      <method name="ToString" cname="gst_tag_list_to_string">
        <return-type type="gchar*" owned="true"/>
        <parameters/>
      </method>
      <method name="CopyValue" cname="gst_tag_list_copy_value" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="dest" type="GValue*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="list" type="GstTagList*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="tag" type="const-gchar*"/>
        </parameters>
      </method>
    </boxed>
    <struct name="TaskPrivate" cname="GstTaskPrivate" opaque="true" hidden="true"/>
    <struct name="TimedValue" cname="GstTimedValue" opaque="false" hidden="false">
      <field cname="timestamp" access="public" writeable="true" readable="true" name="Timestamp" type="guint64"/>
      <field cname="value" access="public" writeable="true" readable="true" name="Value" type="gdouble"/>
    </struct>
    <boxed name="Toc" cname="GstToc" opaque="false" hidden="false">
      <method name="GetType" cname="gst_toc_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gst_toc_new">
        <parameters>
          <parameter name="scope" type="GstTocScope"/>
        </parameters>
      </constructor>
      <method name="AppendEntry" cname="gst_toc_append_entry">
        <return-type type="void"/>
        <parameters>
          <parameter name="entry" type="GstTocEntry*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Dump" cname="gst_toc_dump">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="FindEntry" cname="gst_toc_find_entry">
        <return-type type="GstTocEntry*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="uid" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetEntries" cname="gst_toc_get_entries">
        <return-type type="GList*" element_type="GList*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetScope" cname="gst_toc_get_scope">
        <return-type type="GstTocScope"/>
        <parameters/>
      </method>
      <method name="GetTags" cname="gst_toc_get_tags">
        <return-type type="GstTagList*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="MergeTags" cname="gst_toc_merge_tags">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="tags" type="GstTagList*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="mode" type="GstTagMergeMode"/>
        </parameters>
      </method>
      <method name="SetTags" cname="gst_toc_set_tags">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="tags" type="GstTagList*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
    </boxed>
    <boxed name="TocEntry" cname="GstTocEntry" opaque="false" hidden="false">
      <method name="GetType" cname="gst_toc_entry_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gst_toc_entry_new">
        <parameters>
          <parameter name="type" type="GstTocEntryType"/>
          <parameter name="uid" type="const-gchar*"/>
        </parameters>
      </constructor>
      <method name="AppendSubEntry" cname="gst_toc_entry_append_sub_entry">
        <return-type type="void"/>
        <parameters>
          <parameter name="subentry" type="GstTocEntry*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetEntryType" cname="gst_toc_entry_get_entry_type">
        <return-type type="GstTocEntryType"/>
        <parameters/>
      </method>
      <method name="GetParent" cname="gst_toc_entry_get_parent">
        <return-type type="GstTocEntry*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetStartStopTimes" cname="gst_toc_entry_get_start_stop_times">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="start" type="gint64*" owned="true" pass_as="out"/>
          <parameter name="stop" type="gint64*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetSubEntries" cname="gst_toc_entry_get_sub_entries">
        <return-type type="GList*" element_type="GList*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetTags" cname="gst_toc_entry_get_tags">
        <return-type type="GstTagList*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetToc" cname="gst_toc_entry_get_toc">
        <return-type type="GstToc*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetUid" cname="gst_toc_entry_get_uid">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="IsAlternative" cname="gst_toc_entry_is_alternative">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="IsSequence" cname="gst_toc_entry_is_sequence">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="MergeTags" cname="gst_toc_entry_merge_tags">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="tags" type="GstTagList*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="mode" type="GstTagMergeMode"/>
        </parameters>
      </method>
      <method name="SetStartStopTimes" cname="gst_toc_entry_set_start_stop_times">
        <return-type type="void"/>
        <parameters>
          <parameter name="start" type="gint64"/>
          <parameter name="stop" type="gint64"/>
        </parameters>
      </method>
      <method name="SetTags" cname="gst_toc_entry_set_tags">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="tags" type="GstTagList*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
    </boxed>
    <struct name="TypeFind" cname="GstTypeFind" opaque="false" hidden="false">
      <field cname="data" access="public" writeable="true" readable="true" name="Data" type="gpointer"/>
      <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
      <method name="GetLength" cname="gst_type_find_get_length">
        <return-type type="guint64"/>
        <parameters/>
      </method>
      <method name="Peek" cname="gst_type_find_peek">
        <return-type type="guint8*" array="true" array_length_param_index="1"/>
        <parameters>
          <parameter name="offset" type="gint64"/>
          <parameter name="size" type="guint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="Suggest" cname="gst_type_find_suggest">
        <return-type type="void"/>
        <parameters>
          <parameter name="probability" type="guint"/>
          <parameter name="caps" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Register" cname="gst_type_find_register" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="plugin" type="GstPlugin*"/>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="rank" type="guint"/>
          <parameter closure="6" destroy="7" scope="notified" name="func" type="GstTypeFindFunction"/>
          <parameter allow-none="1" name="extensions" type="const-gchar*"/>
          <parameter name="possible_caps" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="data" type="gpointer"/>
          <parameter scope="async" name="data_notify" type="GDestroyNotify"/>
        </parameters>
      </method>
    </struct>
    <struct name="ValueTable" cname="GstValueTable" opaque="false" hidden="false">
      <field cname="type" access="public" writeable="true" readable="true" name="Type" type="GType"/>
      <field cname="compare" access="public" writeable="true" readable="true" name="Compare" type="GstValueCompareFunc"/>
      <field cname="serialize" access="public" writeable="true" readable="true" name="Serialize" type="GstValueSerializeFunc"/>
      <field cname="deserialize" access="public" writeable="true" readable="true" name="Deserialize" type="GstValueDeserializeFunc"/>
      <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
    </struct>
    <callback name="BufferForeachMetaFunc" cname="GstBufferForeachMetaFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="buffer" type="GstBuffer*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="meta" type="GstMeta**">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="BufferListFunc" cname="GstBufferListFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="buffer" type="GstBuffer**">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="idx" type="guint"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="BusFunc" cname="GstBusFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="bus" type="GstBus*"/>
        <parameter name="message" type="GstMessage*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="BusSyncHandler" cname="GstBusSyncHandler">
      <return-type type="GstBusSyncReply"/>
      <parameters>
        <parameter name="bus" type="GstBus*"/>
        <parameter name="message" type="GstMessage*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="ClockCallback" cname="GstClockCallback">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="clock" type="GstClock*"/>
        <parameter name="time" type="guint64"/>
        <parameter name="id" type="gpointer"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="ControlBindingConvert" cname="GstControlBindingConvert">
      <return-type type="void"/>
      <parameters>
        <parameter name="binding" type="GstControlBinding*"/>
        <parameter name="src_value" type="gdouble"/>
        <parameter name="dest_value" type="GValue*">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <callback name="ControlSourceGetValue" cname="GstControlSourceGetValue">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="self" type="GstControlSource*"/>
        <parameter name="timestamp" type="guint64"/>
        <parameter name="value" type="gdouble"/>
      </parameters>
    </callback>
    <callback name="ControlSourceGetValueArray" cname="GstControlSourceGetValueArray">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="self" type="GstControlSource*"/>
        <parameter name="timestamp" type="guint64"/>
        <parameter name="interval" type="guint64"/>
        <parameter name="n_values" type="guint"/>
        <parameter name="values" type="gdouble"/>
      </parameters>
    </callback>
    <callback name="DebugFuncPtr" cname="GstDebugFuncPtr">
      <return-type type="void"/>
    </callback>
    <callback name="IteratorCopyFunction" cname="GstIteratorCopyFunction">
      <return-type type="void"/>
      <parameters>
        <parameter name="it" type="GstIterator*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="copy" type="GstIterator*">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <callback name="IteratorFoldFunction" cname="GstIteratorFoldFunction">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="item" type="GValue*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="_ret" type="GValue*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="IteratorForeachFunction" cname="GstIteratorForeachFunction">
      <return-type type="void"/>
      <parameters>
        <parameter name="item" type="GValue*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="IteratorFreeFunction" cname="GstIteratorFreeFunction">
      <return-type type="void"/>
      <parameters>
        <parameter name="it" type="GstIterator*">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <callback name="IteratorItemFunction" cname="GstIteratorItemFunction">
      <return-type type="GstIteratorItem"/>
      <parameters>
        <parameter name="it" type="GstIterator*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="item" type="GValue*">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <callback name="IteratorNextFunction" cname="GstIteratorNextFunction">
      <return-type type="GstIteratorResult"/>
      <parameters>
        <parameter name="it" type="GstIterator*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="_result" type="GValue*">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <callback name="IteratorResyncFunction" cname="GstIteratorResyncFunction">
      <return-type type="void"/>
      <parameters>
        <parameter name="it" type="GstIterator*">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <callback name="LogFunction" cname="GstLogFunction">
      <return-type type="void"/>
      <parameters>
        <parameter name="category" type="GstDebugCategory*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="level" type="GstDebugLevel"/>
        <parameter name="file" type="const-gchar*"/>
        <parameter name="function" type="const-gchar*"/>
        <parameter name="line" type="gint"/>
        <parameter name="_object" type="GObject*"/>
        <parameter name="message" type="GstDebugMessage*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="MemoryCopyFunction" cname="GstMemoryCopyFunction">
      <return-type type="GstMemory*" owned="true">
        <warning>missing glib:type-name</warning>
      </return-type>
      <parameters>
        <parameter name="mem" type="GstMemory*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="offset" type="gssize"/>
        <parameter name="size" type="gssize"/>
      </parameters>
    </callback>
    <callback name="MemoryIsSpanFunction" cname="GstMemoryIsSpanFunction">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="mem1" type="GstMemory*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="mem2" type="GstMemory*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="offset" type="gsize"/>
      </parameters>
    </callback>
    <callback hidden="0" name="MemoryMapFunction" cname="GstMemoryMapFunction">
      <return-type type="gpointer"/>
      <parameters>
        <parameter name="mem" type="GstMemory*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="maxsize" type="gsize"/>
        <parameter name="flags" type="GstMapFlags"/>
      </parameters>
    </callback>
    <callback name="MemoryShareFunction" cname="GstMemoryShareFunction">
      <return-type type="GstMemory*" owned="true">
        <warning>missing glib:type-name</warning>
      </return-type>
      <parameters>
        <parameter name="mem" type="GstMemory*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="offset" type="gssize"/>
        <parameter name="size" type="gssize"/>
      </parameters>
    </callback>
    <callback name="MemoryUnmapFunction" cname="GstMemoryUnmapFunction">
      <return-type type="void"/>
      <parameters>
        <parameter name="mem" type="GstMemory*">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <callback name="MetaFreeFunction" cname="GstMetaFreeFunction">
      <return-type type="void"/>
      <parameters>
        <parameter name="meta" type="GstMeta*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="buffer" type="GstBuffer*">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <callback name="MetaInitFunction" cname="GstMetaInitFunction">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="meta" type="GstMeta*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="params" type="gpointer"/>
        <parameter name="buffer" type="GstBuffer*">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <callback name="MetaTransformFunction" cname="GstMetaTransformFunction">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="transbuf" type="GstBuffer*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="meta" type="GstMeta*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="buffer" type="GstBuffer*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="type" type="guint32"/>
        <parameter name="data" type="gpointer"/>
      </parameters>
    </callback>
    <callback hidden="0" name="MiniObjectCopyFunction" cname="GstMiniObjectCopyFunction">
      <return-type type="GstMiniObject*">
        <warning>missing glib:type-name</warning>
      </return-type>
      <parameters>
        <parameter name="obj" type="GstMiniObject*">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <callback name="MiniObjectDisposeFunction" cname="GstMiniObjectDisposeFunction">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="obj" type="GstMiniObject*">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <callback name="MiniObjectFreeFunction" cname="GstMiniObjectFreeFunction">
      <return-type type="void"/>
      <parameters>
        <parameter name="obj" type="GstMiniObject*">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <callback name="MiniObjectNotify" cname="GstMiniObjectNotify">
      <return-type type="void"/>
      <parameters>
        <parameter name="user_data" type="gpointer"/>
        <parameter name="obj" type="GstMiniObject*">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <callback name="PadActivateFunction" cname="GstPadActivateFunction">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="pad" type="GstPad*"/>
        <parameter name="parent" type="GstObject*"/>
      </parameters>
    </callback>
    <callback name="PadActivateModeFunction" cname="GstPadActivateModeFunction">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="pad" type="GstPad*"/>
        <parameter name="parent" type="GstObject*"/>
        <parameter name="mode" type="GstPadMode"/>
        <parameter name="active" type="gboolean"/>
      </parameters>
    </callback>
    <callback name="PadChainFunction" cname="GstPadChainFunction">
      <return-type type="GstFlowReturn"/>
      <parameters>
        <parameter name="pad" type="GstPad*"/>
        <parameter name="parent" type="GstObject*"/>
        <parameter name="buffer" type="GstBuffer*">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <callback name="PadChainListFunction" cname="GstPadChainListFunction">
      <return-type type="GstFlowReturn"/>
      <parameters>
        <parameter name="pad" type="GstPad*"/>
        <parameter name="parent" type="GstObject*"/>
        <parameter name="list" type="GstBufferList*">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <callback name="PadEventFunction" cname="GstPadEventFunction">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="pad" type="GstPad*"/>
        <parameter name="parent" type="GstObject*"/>
        <parameter name="event" type="GstEvent*">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <callback name="PadForwardFunction" cname="GstPadForwardFunction">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="pad" type="GstPad*"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="PadGetRangeFunction" cname="GstPadGetRangeFunction">
      <return-type type="GstFlowReturn"/>
      <parameters>
        <parameter name="pad" type="GstPad*"/>
        <parameter name="parent" type="GstObject*"/>
        <parameter name="offset" type="guint64"/>
        <parameter name="length" type="guint"/>
        <parameter name="buffer" type="GstBuffer**">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <callback name="PadIterIntLinkFunction" cname="GstPadIterIntLinkFunction">
      <return-type type="GstIterator*" owned="true">
        <warning>missing glib:type-name</warning>
      </return-type>
      <parameters>
        <parameter name="pad" type="GstPad*"/>
        <parameter name="parent" type="GstObject*"/>
      </parameters>
    </callback>
    <callback name="PadLinkFunction" cname="GstPadLinkFunction">
      <return-type type="GstPadLinkReturn"/>
      <parameters>
        <parameter name="pad" type="GstPad*"/>
        <parameter name="parent" type="GstObject*"/>
        <parameter name="peer" type="GstPad*"/>
      </parameters>
    </callback>
    <callback name="PadProbeCallback" cname="GstPadProbeCallback">
      <return-type type="GstPadProbeReturn"/>
      <parameters>
        <parameter name="pad" type="GstPad*"/>
        <parameter name="info" type="GstPadProbeInfo*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="PadQueryFunction" cname="GstPadQueryFunction">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="pad" type="GstPad*"/>
        <parameter name="parent" type="GstObject*"/>
        <parameter name="query" type="GstQuery*">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <callback name="PadStickyEventsForeachFunction" cname="GstPadStickyEventsForeachFunction">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="pad" type="GstPad*"/>
        <parameter name="event" type="GstEvent**">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="PadUnlinkFunction" cname="GstPadUnlinkFunction">
      <return-type type="void"/>
      <parameters>
        <parameter name="pad" type="GstPad*"/>
        <parameter name="parent" type="GstObject*"/>
      </parameters>
    </callback>
    <callback name="PluginFeatureFilter" cname="GstPluginFeatureFilter">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="feature" type="GstPluginFeature*"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="PluginFilter" cname="GstPluginFilter">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="plugin" type="GstPlugin*"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="PluginInitFullFunc" cname="GstPluginInitFullFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="plugin" type="GstPlugin*"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="PluginInitFunc" cname="GstPluginInitFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="plugin" type="GstPlugin*"/>
      </parameters>
    </callback>
    <callback name="StructureForeachFunc" cname="GstStructureForeachFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="field_id" type="guint32"/>
        <parameter name="value" type="GValue*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="StructureMapFunc" cname="GstStructureMapFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="field_id" type="guint32"/>
        <parameter name="value" type="GValue*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="TagForeachFunc" cname="GstTagForeachFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="list" type="GstTagList*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="tag" type="const-gchar*"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="TagMergeFunc" cname="GstTagMergeFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="dest" type="GValue*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="src" type="GValue*">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <callback name="TaskFunction" cname="GstTaskFunction">
      <return-type type="void"/>
      <parameters>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="TaskPoolFunction" cname="GstTaskPoolFunction">
      <return-type type="void"/>
      <parameters>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="TaskThreadFunc" cname="GstTaskThreadFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="task" type="GstTask*"/>
        <parameter name="thread" type="GThread*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="TypeFindFunction" cname="GstTypeFindFunction">
      <return-type type="void"/>
      <parameters>
        <parameter name="find" type="GstTypeFind*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="ValueCompareFunc" cname="GstValueCompareFunc">
      <return-type type="gint"/>
      <parameters>
        <parameter name="value1" type="GValue*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="value2" type="GValue*">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <callback name="ValueDeserializeFunc" cname="GstValueDeserializeFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="dest" type="GValue*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="s" type="const-gchar*"/>
      </parameters>
    </callback>
    <callback name="ValueSerializeFunc" cname="GstValueSerializeFunc">
      <return-type type="gchar*" owned="true"/>
      <parameters>
        <parameter name="value1" type="GValue*">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <callback name="Alloc" cname="GstAllocFunc">
      <return-type type="GstMemory*" owned="true">
        <warning>missing glib:type-name</warning>
      </return-type>
      <parameters>
        <parameter name="allocator" type="GstAllocator*"/>
        <parameter name="size" type="gsize"/>
        <parameter allow-none="1" name="params" type="GstAllocationParams*">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <callback name="Free" cname="GstFreeFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="allocator" type="GstAllocator*"/>
        <parameter name="memory" type="GstMemory*" owned="true">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <callback name="ElementAdded" cname="GstElementAddedFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="bin" type="GstBin*"/>
        <parameter name="child" type="GstElement*"/>
      </parameters>
    </callback>
    <callback name="ElementRemoved" cname="GstElementRemovedFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="bin" type="GstBin*"/>
        <parameter name="child" type="GstElement*"/>
      </parameters>
    </callback>
    <callback name="AddElement" cname="GstAddElementFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="bin" type="GstBin*"/>
        <parameter name="element" type="GstElement*"/>
      </parameters>
    </callback>
    <callback name="RemoveElement" cname="GstRemoveElementFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="bin" type="GstBin*"/>
        <parameter name="element" type="GstElement*"/>
      </parameters>
    </callback>
    <callback name="HandleMessage" cname="GstHandleMessageFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="bin" type="GstBin*"/>
        <parameter name="message" type="GstMessage*">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <callback name="DoLatency" cname="GstDoLatencyFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="bin" type="GstBin*"/>
      </parameters>
    </callback>
    <callback name="GetOptions" cname="GstGetOptionsFunc">
      <return-type type="const-gchar**" array="true" null_term_array="true"/>
      <parameters>
        <parameter name="pool" type="GstBufferPool*"/>
      </parameters>
    </callback>
    <callback name="SetConfig" cname="GstSetConfigFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="pool" type="GstBufferPool*"/>
        <parameter name="config" type="GstStructure*" owned="true">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <callback name="Start" cname="GstStartFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="pool" type="GstBufferPool*"/>
      </parameters>
    </callback>
    <callback name="Stop" cname="GstStopFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="pool" type="GstBufferPool*"/>
      </parameters>
    </callback>
    <callback name="AcquireBuffer" cname="GstAcquireBufferFunc">
      <return-type type="GstFlowReturn"/>
      <parameters>
        <parameter name="pool" type="GstBufferPool*"/>
        <parameter name="buffer" type="GstBuffer**" owned="true" pass_as="out">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter allow-none="1" name="params" type="GstBufferPoolAcquireParams*">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <callback name="AllocBuffer" cname="GstAllocBufferFunc">
      <return-type type="GstFlowReturn"/>
      <parameters>
        <parameter name="pool" type="GstBufferPool*"/>
        <parameter name="buffer" type="GstBuffer**">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="params" type="GstBufferPoolAcquireParams*">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <callback name="ResetBuffer" cname="GstResetBufferFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="pool" type="GstBufferPool*"/>
        <parameter name="buffer" type="GstBuffer*">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <callback name="ReleaseBuffer" cname="GstReleaseBufferFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="pool" type="GstBufferPool*"/>
        <parameter name="buffer" type="GstBuffer*" owned="true">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <callback name="FreeBuffer" cname="GstFreeBufferFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="pool" type="GstBufferPool*"/>
        <parameter name="buffer" type="GstBuffer*">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <callback name="Message" cname="GstMessageFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="bus" type="GstBus*"/>
        <parameter name="message" type="GstMessage*">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <callback name="SyncMessage" cname="GstSyncMessageFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="bus" type="GstBus*"/>
        <parameter name="message" type="GstMessage*">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <callback name="GetChildByName" cname="GstGetChildByNameFunc">
      <return-type type="GObject*" owned="true"/>
      <parameters>
        <parameter name="parent" type="GstChildProxy*"/>
        <parameter name="name" type="const-gchar*"/>
      </parameters>
    </callback>
    <callback name="GetChildByIndex" cname="GstGetChildByIndexFunc">
      <return-type type="GObject*" owned="true"/>
      <parameters>
        <parameter name="parent" type="GstChildProxy*"/>
        <parameter name="index" type="guint"/>
      </parameters>
    </callback>
    <callback name="GetChildrenCount" cname="GstGetChildrenCountFunc">
      <return-type type="guint"/>
      <parameters>
        <parameter name="parent" type="GstChildProxy*"/>
      </parameters>
    </callback>
    <callback name="ChildAdded" cname="GstChildAddedFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="parent" type="GstChildProxy*"/>
        <parameter name="child" type="GObject*"/>
        <parameter name="name" type="const-gchar*"/>
      </parameters>
    </callback>
    <callback name="ChildRemoved" cname="GstChildRemovedFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="parent" type="GstChildProxy*"/>
        <parameter name="child" type="GObject*"/>
        <parameter name="name" type="const-gchar*"/>
      </parameters>
    </callback>
    <callback name="ChangeResolution" cname="GstChangeResolutionFunc">
      <return-type type="guint64"/>
      <parameters>
        <parameter name="clock" type="GstClock*"/>
        <parameter name="old_resolution" type="guint64"/>
        <parameter name="new_resolution" type="guint64"/>
      </parameters>
    </callback>
    <callback name="GetResolution" cname="GstGetResolutionFunc">
      <return-type type="guint64"/>
      <parameters>
        <parameter name="clock" type="GstClock*"/>
      </parameters>
    </callback>
    <callback name="GetInternalTime" cname="GstGetInternalTimeFunc">
      <return-type type="guint64"/>
      <parameters>
        <parameter name="clock" type="GstClock*"/>
      </parameters>
    </callback>
    <callback name="Wait" cname="GstWaitFunc">
      <return-type type="GstClockReturn"/>
      <parameters>
        <parameter name="clock" type="GstClock*"/>
        <parameter name="entry" type="GstClockEntry*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="jitter" type="gint64"/>
      </parameters>
    </callback>
    <callback name="WaitAsync" cname="GstWaitAsyncFunc">
      <return-type type="GstClockReturn"/>
      <parameters>
        <parameter name="clock" type="GstClock*"/>
        <parameter name="entry" type="GstClockEntry*">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <callback name="Unschedule" cname="GstUnscheduleFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="clock" type="GstClock*"/>
        <parameter name="entry" type="GstClockEntry*">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <callback name="SyncValues" cname="GstSyncValuesFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="binding" type="GstControlBinding*"/>
        <parameter name="_object" type="GstObject*"/>
        <parameter name="timestamp" type="guint64"/>
        <parameter name="last_sync" type="guint64"/>
      </parameters>
    </callback>
    <callback name="GetValue" cname="GstGetValueFunc">
      <return-type type="GValue*" owned="true">
        <warning>missing glib:type-name</warning>
      </return-type>
      <parameters>
        <parameter name="binding" type="GstControlBinding*"/>
        <parameter name="timestamp" type="guint64"/>
      </parameters>
    </callback>
    <callback name="GetValueArray" cname="GstGetValueArrayFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="binding" type="GstControlBinding*"/>
        <parameter name="timestamp" type="guint64"/>
        <parameter name="interval" type="guint64"/>
        <parameter name="n_values" type="guint"/>
        <parameter name="values" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="GetGValueArray" cname="GstGetGValueArrayFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="binding" type="GstControlBinding*"/>
        <parameter name="timestamp" type="guint64"/>
        <parameter name="interval" type="guint64"/>
        <parameter name="n_values" type="guint"/>
        <parameter name="values" type="GValue*">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <callback name="PadAdded" cname="GstPadAddedFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="element" type="GstElement*"/>
        <parameter name="pad" type="GstPad*"/>
      </parameters>
    </callback>
    <callback name="PadRemoved" cname="GstPadRemovedFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="element" type="GstElement*"/>
        <parameter name="pad" type="GstPad*"/>
      </parameters>
    </callback>
    <callback name="NoMorePads" cname="GstNoMorePadsFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="element" type="GstElement*"/>
      </parameters>
    </callback>
    <callback hidden="0" name="RequestNewPad" cname="GstRequestNewPadFunc">
      <return-type type="GstPad*"/>
      <parameters>
        <parameter name="element" type="GstElement*"/>
        <parameter name="templ" type="GstPadTemplate*"/>
        <parameter name="name" type="const-gchar*"/>
        <parameter name="caps" type="GstCaps*">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <callback name="ReleasePad" cname="GstReleasePadFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="element" type="GstElement*"/>
        <parameter name="pad" type="GstPad*"/>
      </parameters>
    </callback>
    <callback name="GetState" cname="GstGetStateFunc">
      <return-type type="GstStateChangeReturn"/>
      <parameters>
        <parameter name="element" type="GstElement*"/>
        <parameter allow-none="1" name="state" type="GstState" owned="true" pass_as="out"/>
        <parameter allow-none="1" name="pending" type="GstState" owned="true" pass_as="out"/>
        <parameter name="timeout" type="guint64"/>
      </parameters>
    </callback>
    <callback name="SetState" cname="GstSetStateFunc">
      <return-type type="GstStateChangeReturn"/>
      <parameters>
        <parameter name="element" type="GstElement*"/>
        <parameter name="state" type="GstState"/>
      </parameters>
    </callback>
    <callback name="ChangeState" cname="GstChangeStateFunc">
      <return-type type="GstStateChangeReturn"/>
      <parameters>
        <parameter name="element" type="GstElement*"/>
        <parameter name="transition" type="GstStateChange"/>
      </parameters>
    </callback>
    <callback name="StateChanged" cname="GstStateChangedFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="element" type="GstElement*"/>
        <parameter name="oldstate" type="GstState"/>
        <parameter name="newstate" type="GstState"/>
        <parameter name="pending" type="GstState"/>
      </parameters>
    </callback>
    <callback name="SetBus" cname="GstSetBusFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="element" type="GstElement*"/>
        <parameter name="bus" type="GstBus*"/>
      </parameters>
    </callback>
    <callback name="ProvideClock" cname="GstProvideClockFunc">
      <return-type type="GstClock*" owned="true"/>
      <parameters>
        <parameter name="element" type="GstElement*"/>
      </parameters>
    </callback>
    <callback name="SetClock" cname="GstSetClockFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="element" type="GstElement*"/>
        <parameter name="clock" type="GstClock*"/>
      </parameters>
    </callback>
    <callback name="SendEvent" cname="GstSendEventFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="element" type="GstElement*"/>
        <parameter name="event" type="GstEvent*" owned="true">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <callback name="Query" cname="GstQueryFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="element" type="GstElement*"/>
        <parameter name="query" type="GstQuery*">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <callback name="PostMessage" cname="GstPostMessageFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="element" type="GstElement*"/>
        <parameter name="message" type="GstMessage*" owned="true">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <callback name="DeepNotify" cname="GstDeepNotifyFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="_object" type="GstObject*"/>
        <parameter name="orig" type="GstObject*"/>
        <parameter name="pspec" type="GParamSpec*"/>
      </parameters>
    </callback>
    <callback name="Linked" cname="GstLinkedFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="pad" type="GstPad*"/>
        <parameter name="peer" type="GstPad*"/>
      </parameters>
    </callback>
    <callback name="Unlinked" cname="GstUnlinkedFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="pad" type="GstPad*"/>
        <parameter name="peer" type="GstPad*"/>
      </parameters>
    </callback>
    <callback name="PadCreated" cname="GstPadCreatedFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="templ" type="GstPadTemplate*"/>
        <parameter name="pad" type="GstPad*"/>
      </parameters>
    </callback>
    <callback name="GetPresetNames" cname="GstGetPresetNamesFunc">
      <return-type type="gchar***" owned="true" array="true" null_term_array="true"/>
      <parameters>
        <parameter name="preset" type="GstPreset*"/>
      </parameters>
    </callback>
    <callback name="GetPropertyNames" cname="GstGetPropertyNamesFunc">
      <return-type type="gchar***" owned="true" array="true" null_term_array="true"/>
      <parameters>
        <parameter name="preset" type="GstPreset*"/>
      </parameters>
    </callback>
    <callback name="LoadPreset" cname="GstLoadPresetFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="preset" type="GstPreset*"/>
        <parameter name="name" type="const-gchar*"/>
      </parameters>
    </callback>
    <callback name="SavePreset" cname="GstSavePresetFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="preset" type="GstPreset*"/>
        <parameter name="name" type="const-gchar*"/>
      </parameters>
    </callback>
    <callback name="RenamePreset" cname="GstRenamePresetFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="preset" type="GstPreset*"/>
        <parameter name="old_name" type="const-gchar*"/>
        <parameter name="new_name" type="const-gchar*"/>
      </parameters>
    </callback>
    <callback name="DeletePreset" cname="GstDeletePresetFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="preset" type="GstPreset*"/>
        <parameter name="name" type="const-gchar*"/>
      </parameters>
    </callback>
    <callback name="SetMeta" cname="GstSetMetaFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="preset" type="GstPreset*"/>
        <parameter name="name" type="const-gchar*"/>
        <parameter name="tag" type="const-gchar*"/>
        <parameter name="value" type="const-gchar*"/>
      </parameters>
    </callback>
    <callback name="GetMeta" cname="GstGetMetaFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="preset" type="GstPreset*"/>
        <parameter name="name" type="const-gchar*"/>
        <parameter name="tag" type="const-gchar*"/>
        <parameter name="value" type="gchar*" owned="true" pass_as="out"/>
      </parameters>
    </callback>
    <callback name="Prepare" cname="GstPrepareFunc">
      <return-type type="void"/>
      <parameters throws="1">
        <parameter name="pool" type="GstTaskPool*"/>
        <parameter name="error" type="GError**"/>
      </parameters>
    </callback>
    <callback name="Cleanup" cname="GstCleanupFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="pool" type="GstTaskPool*"/>
      </parameters>
    </callback>
    <callback name="Push" cname="GstPushFunc">
      <return-type type="gpointer"/>
      <parameters throws="1">
        <parameter name="pool" type="GstTaskPool*"/>
        <parameter scope="async" name="func" type="GstTaskPoolFunction"/>
        <parameter name="user_data" type="gpointer"/>
        <parameter name="error" type="GError**"/>
      </parameters>
    </callback>
    <callback name="Join" cname="GstJoinFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="pool" type="GstTaskPool*"/>
        <parameter name="id" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="Peek" cname="GstPeekFunc">
      <return-type type="guint8"/>
      <parameters>
        <parameter name="data" type="gpointer"/>
        <parameter name="offset" type="gint64"/>
        <parameter name="size" type="guint"/>
      </parameters>
    </callback>
    <callback name="Suggest" cname="GstSuggestFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="data" type="gpointer"/>
        <parameter name="probability" type="guint"/>
        <parameter name="caps" type="GstCaps*">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <callback name="GetLength" cname="GstGetLengthFunc">
      <return-type type="guint64"/>
      <parameters>
        <parameter name="data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="GetType" cname="GstGetTypeFunc">
      <return-type type="GstURIType"/>
      <parameters>
        <parameter name="type" type="GType"/>
      </parameters>
    </callback>
    <callback name="GetProtocols" cname="GstGetProtocolsFunc">
      <return-type type="const gchar* const*" array="true" null_term_array="true"/>
      <parameters>
        <parameter name="type" type="GType"/>
      </parameters>
    </callback>
    <callback name="GetUri" cname="GstGetUriFunc">
      <return-type type="gchar*" owned="true"/>
      <parameters>
        <parameter name="handler" type="GstURIHandler*"/>
      </parameters>
    </callback>
    <callback name="SetUri" cname="GstSetUriFunc">
      <return-type type="gboolean"/>
      <parameters throws="1">
        <parameter name="handler" type="GstURIHandler*"/>
        <parameter name="uri" type="const-gchar*"/>
        <parameter name="error" type="GError**"/>
      </parameters>
    </callback>
    <object name="Global" cname="GstGlobal" opaque="true">
      <method name="CapsFromString" cname="gst_caps_from_string" shared="true">
        <return-type type="GstCaps*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="string" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="CoreErrorQuark" cname="gst_core_error_quark" shared="true">
        <return-type type="guint32"/>
      </method>
      <method name="DebugAddLogFunction" cname="gst_debug_add_log_function" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter closure="1" destroy="2" scope="notified" name="func" type="GstLogFunction"/>
          <parameter name="user_data" type="gpointer"/>
          <parameter scope="async" name="notify" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="DebugBinToDotFile" cname="gst_debug_bin_to_dot_file" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="bin" type="GstBin*"/>
          <parameter name="details" type="GstDebugGraphDetails"/>
          <parameter name="file_name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="DebugBinToDotFileWithTs" cname="gst_debug_bin_to_dot_file_with_ts" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="bin" type="GstBin*"/>
          <parameter name="details" type="GstDebugGraphDetails"/>
          <parameter name="file_name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="DebugConstructTermColor" cname="gst_debug_construct_term_color" shared="true">
        <return-type type="gchar*" owned="true"/>
        <parameters>
          <parameter name="colorinfo" type="guint"/>
        </parameters>
      </method>
      <method name="DebugConstructWinColor" cname="gst_debug_construct_win_color" shared="true">
        <return-type type="gint"/>
        <parameters>
          <parameter name="colorinfo" type="guint"/>
        </parameters>
      </method>
      <method name="DebugGetAllCategories" cname="gst_debug_get_all_categories" shared="true">
        <return-type type="GSList*" elements_owned="true" element_type="GSList*">
          <warning>missing glib:type-name</warning>
        </return-type>
      </method>
      <method name="DebugGetDefaultThreshold" cname="gst_debug_get_default_threshold" shared="true">
        <return-type type="GstDebugLevel"/>
      </method>
      <method name="DebugIsActive" cname="gst_debug_is_active" shared="true">
        <return-type type="gboolean"/>
      </method>
      <method name="DebugIsColored" cname="gst_debug_is_colored" shared="true">
        <return-type type="gboolean"/>
      </method>
      <method name="DebugLevelGetName" cname="gst_debug_level_get_name" shared="true">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="level" type="GstDebugLevel"/>
        </parameters>
      </method>
      <method name="DebugLog" cname="gst_debug_log" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="category" type="GstDebugCategory*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="level" type="GstDebugLevel"/>
          <parameter name="file" type="const-gchar*"/>
          <parameter name="function" type="const-gchar*"/>
          <parameter name="line" type="gint"/>
          <parameter allow-none="1" name="_object" type="GObject*"/>
          <parameter name="format" type="const-gchar*"/>
          <parameter name="arg7" type="va_list"/>
        </parameters>
      </method>
      <method name="DebugLogDefault" cname="gst_debug_log_default" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="category" type="GstDebugCategory*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="level" type="GstDebugLevel"/>
          <parameter name="file" type="const-gchar*"/>
          <parameter name="function" type="const-gchar*"/>
          <parameter name="line" type="gint"/>
          <parameter allow-none="1" name="_object" type="GObject*"/>
          <parameter name="message" type="GstDebugMessage*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="unused" type="gpointer"/>
        </parameters>
      </method>
      <method name="DebugLogValist" cname="gst_debug_log_valist" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="category" type="GstDebugCategory*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="level" type="GstDebugLevel"/>
          <parameter name="file" type="const-gchar*"/>
          <parameter name="function" type="const-gchar*"/>
          <parameter name="line" type="gint"/>
          <parameter allow-none="1" name="_object" type="GObject*"/>
          <parameter name="format" type="const-gchar*"/>
          <parameter name="args" type="va_list"/>
        </parameters>
      </method>
      <method name="DebugPrintStackTrace" cname="gst_debug_print_stack_trace" shared="true">
        <return-type type="void"/>
      </method>
      <method name="DebugRemoveLogFunction" cname="gst_debug_remove_log_function" shared="true">
        <return-type type="guint"/>
        <parameters>
          <parameter scope="call" name="func" type="GstLogFunction"/>
        </parameters>
      </method>
      <method name="DebugRemoveLogFunctionByData" cname="gst_debug_remove_log_function_by_data" shared="true">
        <return-type type="guint"/>
        <parameters>
          <parameter name="data" type="gpointer"/>
        </parameters>
      </method>
      <method name="DebugSetActive" cname="gst_debug_set_active" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="active" type="gboolean"/>
        </parameters>
      </method>
      <method name="DebugSetColored" cname="gst_debug_set_colored" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="colored" type="gboolean"/>
        </parameters>
      </method>
      <method name="DebugSetDefaultThreshold" cname="gst_debug_set_default_threshold" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="level" type="GstDebugLevel"/>
        </parameters>
      </method>
      <method name="DebugSetThresholdForName" cname="gst_debug_set_threshold_for_name" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="level" type="GstDebugLevel"/>
        </parameters>
      </method>
      <method name="DebugUnsetThresholdForName" cname="gst_debug_unset_threshold_for_name" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="Deinit" cname="gst_deinit" shared="true">
        <return-type type="void"/>
      </method>
      <method name="ErrorGetMessage" cname="gst_error_get_message" shared="true">
        <return-type type="gchar*" owned="true"/>
        <parameters>
          <parameter name="domain" type="guint32"/>
          <parameter name="code" type="gint"/>
        </parameters>
      </method>
      <method name="EventTypeGetFlags" cname="gst_event_type_get_flags" shared="true">
        <return-type type="GstEventTypeFlags"/>
        <parameters>
          <parameter name="type" type="GstEventType"/>
        </parameters>
      </method>
      <method name="EventTypeGetName" cname="gst_event_type_get_name" shared="true">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="type" type="GstEventType"/>
        </parameters>
      </method>
      <method name="EventTypeToQuark" cname="gst_event_type_to_quark" shared="true">
        <return-type type="guint32"/>
        <parameters>
          <parameter name="type" type="GstEventType"/>
        </parameters>
      </method>
      <method name="FilenameToUri" cname="gst_filename_to_uri" shared="true">
        <return-type type="gchar*" owned="true"/>
        <parameters throws="1">
          <parameter name="filename" type="const-gchar*"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="FlowGetName" cname="gst_flow_get_name" shared="true">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="_ret" type="GstFlowReturn"/>
        </parameters>
      </method>
      <method name="FlowToQuark" cname="gst_flow_to_quark" shared="true">
        <return-type type="guint32"/>
        <parameters>
          <parameter name="_ret" type="GstFlowReturn"/>
        </parameters>
      </method>
      <method name="FormatGetByNick" cname="gst_format_get_by_nick" shared="true">
        <return-type type="GstFormat"/>
        <parameters>
          <parameter name="nick" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="FormatGetDetails" cname="gst_format_get_details" shared="true">
        <return-type type="GstFormatDefinition*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="format" type="GstFormat"/>
        </parameters>
      </method>
      <method name="FormatGetName" cname="gst_format_get_name" shared="true">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="format" type="GstFormat"/>
        </parameters>
      </method>
      <method name="FormatIterateDefinitions" cname="gst_format_iterate_definitions" shared="true">
        <return-type type="GstIterator*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
      </method>
      <method name="FormatRegister" cname="gst_format_register" shared="true">
        <return-type type="GstFormat"/>
        <parameters>
          <parameter name="nick" type="const-gchar*"/>
          <parameter name="description" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="FormatToQuark" cname="gst_format_to_quark" shared="true">
        <return-type type="guint32"/>
        <parameters>
          <parameter name="format" type="GstFormat"/>
        </parameters>
      </method>
      <method name="FormatsContains" cname="gst_formats_contains" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="formats" type="GstFormat*" array="true" null_term_array="true"/>
          <parameter name="format" type="GstFormat"/>
        </parameters>
      </method>
      <method name="Init" cname="gst_init" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="argc" type="gint*" owned="true" pass_as="ref"/>
          <parameter allow-none="1" name="argv" type="char***" owned="true" pass_as="ref" array="true" array_length_param_index="0"/>
        </parameters>
      </method>
      <method name="InitCheck" cname="gst_init_check" shared="true">
        <return-type type="gboolean"/>
        <parameters throws="1">
          <parameter allow-none="1" name="argc" type="gint*" owned="true" pass_as="ref"/>
          <parameter allow-none="1" name="argv" type="char***" owned="true" pass_as="ref" array="true" array_length_param_index="0"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="InitGetOptionGroup" cname="gst_init_get_option_group" shared="true">
        <return-type type="GOptionGroup*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
      </method>
      <method name="IsInitialized" cname="gst_is_initialized" shared="true">
        <return-type type="gboolean"/>
      </method>
      <method name="LibraryErrorQuark" cname="gst_library_error_quark" shared="true">
        <return-type type="guint32"/>
      </method>
      <method name="MessageTypeGetName" cname="gst_message_type_get_name" shared="true">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="type" type="GstMessageType"/>
        </parameters>
      </method>
      <method name="MessageTypeToQuark" cname="gst_message_type_to_quark" shared="true">
        <return-type type="guint32"/>
        <parameters>
          <parameter name="type" type="GstMessageType"/>
        </parameters>
      </method>
      <method name="MetaApiTypeHasTag" cname="gst_meta_api_type_has_tag" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="api" type="GType"/>
          <parameter name="tag" type="guint32"/>
        </parameters>
      </method>
      <method name="MetaApiTypeRegister" cname="gst_meta_api_type_register" shared="true">
        <return-type type="GType"/>
        <parameters>
          <parameter name="api" type="const-gchar*"/>
          <parameter name="tags" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="MetaGetInfo" cname="gst_meta_get_info" shared="true">
        <return-type type="GstMetaInfo*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="impl" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="MetaRegister" cname="gst_meta_register" shared="true">
        <return-type type="GstMetaInfo*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="api" type="GType"/>
          <parameter name="impl" type="const-gchar*"/>
          <parameter name="size" type="gsize"/>
          <parameter scope="async" name="init_func" type="GstMetaInitFunction"/>
          <parameter scope="async" name="free_func" type="GstMetaFreeFunction"/>
          <parameter scope="async" name="transform_func" type="GstMetaTransformFunction"/>
        </parameters>
      </method>
      <method name="MiniObjectReplace" cname="gst_mini_object_replace" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="olddata" type="GstMiniObject**" owned="true" pass_as="ref">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="newdata" type="GstMiniObject*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="MiniObjectTake" cname="gst_mini_object_take" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="olddata" type="GstMiniObject**" owned="true" pass_as="ref">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="newdata" type="GstMiniObject*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="PadModeGetName" cname="gst_pad_mode_get_name" shared="true">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="mode" type="GstPadMode"/>
        </parameters>
      </method>
      <method name="ParamSpecFraction" cname="gst_param_spec_fraction" shared="true">
        <return-type type="GParamSpec*" owned="true"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="nick" type="const-gchar*"/>
          <parameter name="blurb" type="const-gchar*"/>
          <parameter name="min_num" type="gint"/>
          <parameter name="min_denom" type="gint"/>
          <parameter name="max_num" type="gint"/>
          <parameter name="max_denom" type="gint"/>
          <parameter name="default_num" type="gint"/>
          <parameter name="default_denom" type="gint"/>
          <parameter name="flags" type="GParamFlags"/>
        </parameters>
      </method>
      <method name="ParseBinFromDescription" cname="gst_parse_bin_from_description" shared="true">
        <return-type type="GstBin*"/>
        <parameters throws="1">
          <parameter name="bin_description" type="const-gchar*"/>
          <parameter name="ghost_unlinked_pads" type="gboolean"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="ParseBinFromDescriptionFull" cname="gst_parse_bin_from_description_full" shared="true">
        <return-type type="GstBin*" owned="true"/>
        <parameters throws="1">
          <parameter name="bin_description" type="const-gchar*"/>
          <parameter name="ghost_unlinked_pads" type="gboolean"/>
          <parameter allow-none="1" name="context" type="GstParseContext*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="flags" type="GstParseFlags"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="ParseErrorQuark" cname="gst_parse_error_quark" shared="true">
        <return-type type="guint32"/>
      </method>
      <method name="ParseLaunch" cname="gst_parse_launch" shared="true">
        <return-type type="GstElement*"/>
        <parameters throws="1">
          <parameter name="pipeline_description" type="const-gchar*"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="ParseLaunchFull" cname="gst_parse_launch_full" shared="true">
        <return-type type="GstElement*" owned="true"/>
        <parameters throws="1">
          <parameter name="pipeline_description" type="const-gchar*"/>
          <parameter allow-none="1" name="context" type="GstParseContext*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="flags" type="GstParseFlags"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="ParseLaunchv" cname="gst_parse_launchv" shared="true">
        <return-type type="GstElement*" owned="true"/>
        <parameters throws="1">
          <parameter name="argv" type="const-gchar**" array="true" null_term_array="true"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="ParseLaunchvFull" cname="gst_parse_launchv_full" shared="true">
        <return-type type="GstElement*" owned="true"/>
        <parameters throws="1">
          <parameter name="argv" type="const-gchar**" array="true" null_term_array="true"/>
          <parameter allow-none="1" name="context" type="GstParseContext*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="flags" type="GstParseFlags"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="PluginErrorQuark" cname="gst_plugin_error_quark" shared="true">
        <return-type type="guint32"/>
      </method>
      <method name="PollNew" cname="gst_poll_new" shared="true">
        <return-type type="GstPoll*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="controllable" type="gboolean"/>
        </parameters>
      </method>
      <method name="PollNewTimer" cname="gst_poll_new_timer" shared="true">
        <return-type type="GstPoll*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
      </method>
      <method name="PresetGetAppDir" cname="gst_preset_get_app_dir" shared="true">
        <return-type type="const-gchar*"/>
      </method>
      <method name="PresetSetAppDir" cname="gst_preset_set_app_dir" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="app_dir" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="QueryTypeGetFlags" cname="gst_query_type_get_flags" shared="true">
        <return-type type="GstQueryTypeFlags"/>
        <parameters>
          <parameter name="type" type="GstQueryType"/>
        </parameters>
      </method>
      <method name="QueryTypeGetName" cname="gst_query_type_get_name" shared="true">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="type" type="GstQueryType"/>
        </parameters>
      </method>
      <method name="QueryTypeToQuark" cname="gst_query_type_to_quark" shared="true">
        <return-type type="guint32"/>
        <parameters>
          <parameter name="type" type="GstQueryType"/>
        </parameters>
      </method>
      <method name="ResourceErrorQuark" cname="gst_resource_error_quark" shared="true">
        <return-type type="guint32"/>
      </method>
      <method name="SegtrapIsEnabled" cname="gst_segtrap_is_enabled" shared="true">
        <return-type type="gboolean"/>
      </method>
      <method name="SegtrapSetEnabled" cname="gst_segtrap_set_enabled" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="enabled" type="gboolean"/>
        </parameters>
      </method>
      <method name="StaticCapsGetType" cname="gst_static_caps_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="StaticPadTemplateGetType" cname="gst_static_pad_template_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="StreamErrorQuark" cname="gst_stream_error_quark" shared="true">
        <return-type type="guint32"/>
      </method>
      <method name="StructureFromString" cname="gst_structure_from_string" shared="true">
        <return-type type="GstStructure*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="string" type="const-gchar*"/>
          <parameter allow-none="1" name="end" type="const-gchar*" pass_as="out"/>
        </parameters>
      </method>
      <method name="TagExists" cname="gst_tag_exists" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="tag" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="TagGetDescription" cname="gst_tag_get_description" shared="true">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="tag" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="TagGetFlag" cname="gst_tag_get_flag" shared="true">
        <return-type type="GstTagFlag"/>
        <parameters>
          <parameter name="tag" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="TagGetNick" cname="gst_tag_get_nick" shared="true">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="tag" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="TagGetType" cname="gst_tag_get_type" shared="true">
        <return-type type="GType"/>
        <parameters>
          <parameter name="tag" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="TagIsFixed" cname="gst_tag_is_fixed" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="tag" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="TagListCopyValue" cname="gst_tag_list_copy_value" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="dest" type="GValue*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="list" type="GstTagList*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="tag" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="TagMergeStringsWithComma" cname="gst_tag_merge_strings_with_comma" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="dest" type="GValue*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="src" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="TagMergeUseFirst" cname="gst_tag_merge_use_first" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="dest" type="GValue*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="src" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="TagRegister" cname="gst_tag_register" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="flag" type="GstTagFlag"/>
          <parameter name="type" type="GType"/>
          <parameter name="nick" type="const-gchar*"/>
          <parameter name="blurb" type="const-gchar*"/>
          <parameter name="func" type="GstTagMergeFunc"/>
        </parameters>
      </method>
      <method name="TagRegisterStatic" cname="gst_tag_register_static" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="flag" type="GstTagFlag"/>
          <parameter name="type" type="GType"/>
          <parameter name="nick" type="const-gchar*"/>
          <parameter name="blurb" type="const-gchar*"/>
          <parameter name="func" type="GstTagMergeFunc"/>
        </parameters>
      </method>
      <method name="TocEntryTypeGetNick" cname="gst_toc_entry_type_get_nick" shared="true">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="type" type="GstTocEntryType"/>
        </parameters>
      </method>
      <method name="TypeFindGetType" cname="gst_type_find_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="TypeFindRegister" cname="gst_type_find_register" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="plugin" type="GstPlugin*"/>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="rank" type="guint"/>
          <parameter closure="6" destroy="7" scope="notified" name="func" type="GstTypeFindFunction"/>
          <parameter allow-none="1" name="extensions" type="const-gchar*"/>
          <parameter name="possible_caps" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="data" type="gpointer"/>
          <parameter scope="async" name="data_notify" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="UpdateRegistry" cname="gst_update_registry" shared="true">
        <return-type type="gboolean"/>
      </method>
      <method name="UriConstruct" cname="gst_uri_construct" shared="true">
        <return-type type="gchar*" owned="true"/>
        <parameters>
          <parameter name="protocol" type="const-gchar*"/>
          <parameter name="location" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="UriErrorQuark" cname="gst_uri_error_quark" shared="true">
        <return-type type="guint32"/>
      </method>
      <method name="UriGetLocation" cname="gst_uri_get_location" shared="true">
        <return-type type="gchar*" owned="true"/>
        <parameters>
          <parameter name="uri" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="UriGetProtocol" cname="gst_uri_get_protocol" shared="true">
        <return-type type="gchar*" owned="true"/>
        <parameters>
          <parameter name="uri" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="UriHasProtocol" cname="gst_uri_has_protocol" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="uri" type="const-gchar*"/>
          <parameter name="protocol" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="UriIsValid" cname="gst_uri_is_valid" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="uri" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="UriProtocolIsSupported" cname="gst_uri_protocol_is_supported" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="type" type="GstURIType"/>
          <parameter name="protocol" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="UriProtocolIsValid" cname="gst_uri_protocol_is_valid" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="protocol" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="UtilArrayBinarySearch" cname="gst_util_array_binary_search" shared="true">
        <return-type type="gpointer"/>
        <parameters>
          <parameter name="array" type="gpointer"/>
          <parameter name="num_elements" type="guint"/>
          <parameter name="element_size" type="gsize"/>
          <parameter closure="6" scope="call" name="search_func" type="GCompareDataFunc"/>
          <parameter name="mode" type="GstSearchMode"/>
          <parameter name="search_data" type="gpointer"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="UtilDoubleToFraction" cname="gst_util_double_to_fraction" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="src" type="gdouble"/>
          <parameter name="dest_n" type="gint*" owned="true" pass_as="out"/>
          <parameter name="dest_d" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="UtilDumpMem" cname="gst_util_dump_mem" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="mem" type="guint8"/>
          <parameter name="size" type="guint"/>
        </parameters>
      </method>
      <method name="UtilFractionAdd" cname="gst_util_fraction_add" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="a_n" type="gint"/>
          <parameter name="a_d" type="gint"/>
          <parameter name="b_n" type="gint"/>
          <parameter name="b_d" type="gint"/>
          <parameter name="res_n" type="gint*" owned="true" pass_as="out"/>
          <parameter name="res_d" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="UtilFractionCompare" cname="gst_util_fraction_compare" shared="true">
        <return-type type="gint"/>
        <parameters>
          <parameter name="a_n" type="gint"/>
          <parameter name="a_d" type="gint"/>
          <parameter name="b_n" type="gint"/>
          <parameter name="b_d" type="gint"/>
        </parameters>
      </method>
      <method name="UtilFractionMultiply" cname="gst_util_fraction_multiply" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="a_n" type="gint"/>
          <parameter name="a_d" type="gint"/>
          <parameter name="b_n" type="gint"/>
          <parameter name="b_d" type="gint"/>
          <parameter name="res_n" type="gint*" owned="true" pass_as="out"/>
          <parameter name="res_d" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="UtilFractionToDouble" cname="gst_util_fraction_to_double" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="src_n" type="gint"/>
          <parameter name="src_d" type="gint"/>
          <parameter name="dest" type="gdouble*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="UtilGdoubleToGuint64" cname="gst_util_gdouble_to_guint64" shared="true">
        <return-type type="guint64"/>
        <parameters>
          <parameter name="value" type="gdouble"/>
        </parameters>
      </method>
      <method name="UtilGetTimestamp" cname="gst_util_get_timestamp" shared="true">
        <return-type type="guint64"/>
      </method>
      <method name="UtilGreatestCommonDivisor" cname="gst_util_greatest_common_divisor" shared="true">
        <return-type type="gint"/>
        <parameters>
          <parameter name="a" type="gint"/>
          <parameter name="b" type="gint"/>
        </parameters>
      </method>
      <method name="UtilGreatestCommonDivisorInt64" cname="gst_util_greatest_common_divisor_int64" shared="true">
        <return-type type="gint64"/>
        <parameters>
          <parameter name="a" type="gint64"/>
          <parameter name="b" type="gint64"/>
        </parameters>
      </method>
      <method name="UtilGuint64ToGdouble" cname="gst_util_guint64_to_gdouble" shared="true">
        <return-type type="gdouble"/>
        <parameters>
          <parameter name="value" type="guint64"/>
        </parameters>
      </method>
      <method name="UtilSeqnumCompare" cname="gst_util_seqnum_compare" shared="true">
        <return-type type="gint32"/>
        <parameters>
          <parameter name="s1" type="guint32"/>
          <parameter name="s2" type="guint32"/>
        </parameters>
      </method>
      <method name="UtilSeqnumNext" cname="gst_util_seqnum_next" shared="true">
        <return-type type="guint32"/>
      </method>
      <method name="UtilSetObjectArg" cname="gst_util_set_object_arg" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="_object" type="GObject*"/>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="value" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="UtilSetValueFromString" cname="gst_util_set_value_from_string" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="value" type="GValue*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="value_str" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="UtilUint64Scale" cname="gst_util_uint64_scale" shared="true">
        <return-type type="guint64"/>
        <parameters>
          <parameter name="val" type="guint64"/>
          <parameter name="num" type="guint64"/>
          <parameter name="denom" type="guint64"/>
        </parameters>
      </method>
      <method name="UtilUint64ScaleCeil" cname="gst_util_uint64_scale_ceil" shared="true">
        <return-type type="guint64"/>
        <parameters>
          <parameter name="val" type="guint64"/>
          <parameter name="num" type="guint64"/>
          <parameter name="denom" type="guint64"/>
        </parameters>
      </method>
      <method name="UtilUint64ScaleInt" cname="gst_util_uint64_scale_int" shared="true">
        <return-type type="guint64"/>
        <parameters>
          <parameter name="val" type="guint64"/>
          <parameter name="num" type="gint"/>
          <parameter name="denom" type="gint"/>
        </parameters>
      </method>
      <method name="UtilUint64ScaleIntCeil" cname="gst_util_uint64_scale_int_ceil" shared="true">
        <return-type type="guint64"/>
        <parameters>
          <parameter name="val" type="guint64"/>
          <parameter name="num" type="gint"/>
          <parameter name="denom" type="gint"/>
        </parameters>
      </method>
      <method name="UtilUint64ScaleIntRound" cname="gst_util_uint64_scale_int_round" shared="true">
        <return-type type="guint64"/>
        <parameters>
          <parameter name="val" type="guint64"/>
          <parameter name="num" type="gint"/>
          <parameter name="denom" type="gint"/>
        </parameters>
      </method>
      <method name="UtilUint64ScaleRound" cname="gst_util_uint64_scale_round" shared="true">
        <return-type type="guint64"/>
        <parameters>
          <parameter name="val" type="guint64"/>
          <parameter name="num" type="guint64"/>
          <parameter name="denom" type="guint64"/>
        </parameters>
      </method>
      <method name="ValueCanCompare" cname="gst_value_can_compare" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="value1" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="value2" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ValueCanIntersect" cname="gst_value_can_intersect" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="value1" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="value2" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ValueCanSubtract" cname="gst_value_can_subtract" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="minuend" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="subtrahend" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ValueCanUnion" cname="gst_value_can_union" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="value1" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="value2" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ValueCompare" cname="gst_value_compare" shared="true">
        <return-type type="gint"/>
        <parameters>
          <parameter name="value1" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="value2" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ValueDeserialize" cname="gst_value_deserialize" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="dest" type="GValue*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="src" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="ValueFixate" cname="gst_value_fixate" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="dest" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="src" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ValueFractionMultiply" cname="gst_value_fraction_multiply" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="product" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="factor1" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="factor2" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ValueFractionSubtract" cname="gst_value_fraction_subtract" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="dest" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="minuend" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="subtrahend" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ValueGetBitmask" cname="gst_value_get_bitmask" shared="true">
        <return-type type="guint64"/>
        <parameters>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ValueGetCaps" cname="gst_value_get_caps" shared="true">
        <return-type type="GstCaps*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ValueGetDoubleRangeMax" cname="gst_value_get_double_range_max" shared="true">
        <return-type type="gdouble"/>
        <parameters>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ValueGetDoubleRangeMin" cname="gst_value_get_double_range_min" shared="true">
        <return-type type="gdouble"/>
        <parameters>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ValueGetFractionDenominator" cname="gst_value_get_fraction_denominator" shared="true">
        <return-type type="gint"/>
        <parameters>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ValueGetFractionNumerator" cname="gst_value_get_fraction_numerator" shared="true">
        <return-type type="gint"/>
        <parameters>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ValueGetFractionRangeMax" cname="gst_value_get_fraction_range_max" shared="true">
        <return-type type="GValue*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ValueGetFractionRangeMin" cname="gst_value_get_fraction_range_min" shared="true">
        <return-type type="GValue*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ValueGetInt64RangeMax" cname="gst_value_get_int64_range_max" shared="true">
        <return-type type="gint64"/>
        <parameters>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ValueGetInt64RangeMin" cname="gst_value_get_int64_range_min" shared="true">
        <return-type type="gint64"/>
        <parameters>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ValueGetInt64RangeStep" cname="gst_value_get_int64_range_step" shared="true">
        <return-type type="gint64"/>
        <parameters>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ValueGetIntRangeMax" cname="gst_value_get_int_range_max" shared="true">
        <return-type type="gint"/>
        <parameters>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ValueGetIntRangeMin" cname="gst_value_get_int_range_min" shared="true">
        <return-type type="gint"/>
        <parameters>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ValueGetIntRangeStep" cname="gst_value_get_int_range_step" shared="true">
        <return-type type="gint"/>
        <parameters>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ValueGetStructure" cname="gst_value_get_structure" shared="true">
        <return-type type="GstStructure*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ValueInitAndCopy" cname="gst_value_init_and_copy" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="dest" type="GValue*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="src" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ValueIntersect" cname="gst_value_intersect" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="dest" type="GValue*" owned="true" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="value1" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="value2" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ValueIsFixed" cname="gst_value_is_fixed" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ValueIsSubset" cname="gst_value_is_subset" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="value1" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="value2" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ValueRegister" cname="gst_value_register" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="table" type="GstValueTable*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ValueSerialize" cname="gst_value_serialize" shared="true">
        <return-type type="gchar*" owned="true"/>
        <parameters>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ValueSetBitmask" cname="gst_value_set_bitmask" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="bitmask" type="guint64"/>
        </parameters>
      </method>
      <method name="ValueSetCaps" cname="gst_value_set_caps" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="caps" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ValueSetDoubleRange" cname="gst_value_set_double_range" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="start" type="gdouble"/>
          <parameter name="end" type="gdouble"/>
        </parameters>
      </method>
      <method name="ValueSetFraction" cname="gst_value_set_fraction" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="numerator" type="gint"/>
          <parameter name="denominator" type="gint"/>
        </parameters>
      </method>
      <method name="ValueSetFractionRange" cname="gst_value_set_fraction_range" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="start" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="end" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ValueSetFractionRangeFull" cname="gst_value_set_fraction_range_full" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="numerator_start" type="gint"/>
          <parameter name="denominator_start" type="gint"/>
          <parameter name="numerator_end" type="gint"/>
          <parameter name="denominator_end" type="gint"/>
        </parameters>
      </method>
      <method name="ValueSetInt64Range" cname="gst_value_set_int64_range" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="start" type="gint64"/>
          <parameter name="end" type="gint64"/>
        </parameters>
      </method>
      <method name="ValueSetInt64RangeStep" cname="gst_value_set_int64_range_step" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="start" type="gint64"/>
          <parameter name="end" type="gint64"/>
          <parameter name="step" type="gint64"/>
        </parameters>
      </method>
      <method name="ValueSetIntRange" cname="gst_value_set_int_range" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="start" type="gint"/>
          <parameter name="end" type="gint"/>
        </parameters>
      </method>
      <method name="ValueSetIntRangeStep" cname="gst_value_set_int_range_step" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="start" type="gint"/>
          <parameter name="end" type="gint"/>
          <parameter name="step" type="gint"/>
        </parameters>
      </method>
      <method name="ValueSetStructure" cname="gst_value_set_structure" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="structure" type="GstStructure*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ValueSubtract" cname="gst_value_subtract" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="dest" type="GValue*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="minuend" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="subtrahend" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ValueUnion" cname="gst_value_union" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="dest" type="GValue*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="value1" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="value2" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Version" cname="gst_version" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="major" type="guint*" owned="true" pass_as="out"/>
          <parameter name="minor" type="guint*" owned="true" pass_as="out"/>
          <parameter name="micro" type="guint*" owned="true" pass_as="out"/>
          <parameter name="nano" type="guint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="VersionString" cname="gst_version_string" shared="true">
        <return-type type="gchar*" owned="true"/>
      </method>
    </object>
    <object name="Constants" cname="GstConstants" opaque="true">
      <constant value="SystemMemory" ctype="gchar*" gtype="gchar*" name="ALLOCATOR_SYSMEM"/>
      <constant value="0" ctype="GstBufferCopyFlags" gtype="GstBufferCopyFlags" name="BUFFER_COPY_ALL"/>
      <constant value="0" ctype="gint" gtype="gint" name="BUFFER_COPY_METADATA"/>
      <constant value="18446744073709551615" ctype="guint64" gtype="guint64" name="BUFFER_OFFSET_NONE"/>
      <constant value="1" ctype="gint" gtype="gint" name="CAN_INLINE"/>
      <constant value="18446744073709551615" ctype="GstClockTime" gtype="GstClockTime" name="CLOCK_TIME_NONE"/>
      <constant value="240" ctype="gint" gtype="gint" name="DEBUG_BG_MASK"/>
      <constant value="15" ctype="gint" gtype="gint" name="DEBUG_FG_MASK"/>
      <constant value="65280" ctype="gint" gtype="gint" name="DEBUG_FORMAT_MASK"/>
      <constant value="Decoder" ctype="gchar*" gtype="gchar*" name="ELEMENT_FACTORY_KLASS_DECODER"/>
      <constant value="Demuxer" ctype="gchar*" gtype="gchar*" name="ELEMENT_FACTORY_KLASS_DEMUXER"/>
      <constant value="Depayloader" ctype="gchar*" gtype="gchar*" name="ELEMENT_FACTORY_KLASS_DEPAYLOADER"/>
      <constant value="Encoder" ctype="gchar*" gtype="gchar*" name="ELEMENT_FACTORY_KLASS_ENCODER"/>
      <constant value="Formatter" ctype="gchar*" gtype="gchar*" name="ELEMENT_FACTORY_KLASS_FORMATTER"/>
      <constant value="Audio" ctype="gchar*" gtype="gchar*" name="ELEMENT_FACTORY_KLASS_MEDIA_AUDIO"/>
      <constant value="Image" ctype="gchar*" gtype="gchar*" name="ELEMENT_FACTORY_KLASS_MEDIA_IMAGE"/>
      <constant value="Metadata" ctype="gchar*" gtype="gchar*" name="ELEMENT_FACTORY_KLASS_MEDIA_METADATA"/>
      <constant value="Subtitle" ctype="gchar*" gtype="gchar*" name="ELEMENT_FACTORY_KLASS_MEDIA_SUBTITLE"/>
      <constant value="Video" ctype="gchar*" gtype="gchar*" name="ELEMENT_FACTORY_KLASS_MEDIA_VIDEO"/>
      <constant value="Muxer" ctype="gchar*" gtype="gchar*" name="ELEMENT_FACTORY_KLASS_MUXER"/>
      <constant value="Parser" ctype="gchar*" gtype="gchar*" name="ELEMENT_FACTORY_KLASS_PARSER"/>
      <constant value="Payloader" ctype="gchar*" gtype="gchar*" name="ELEMENT_FACTORY_KLASS_PAYLOADER"/>
      <constant value="Sink" ctype="gchar*" gtype="gchar*" name="ELEMENT_FACTORY_KLASS_SINK"/>
      <constant value="Source" ctype="gchar*" gtype="gchar*" name="ELEMENT_FACTORY_KLASS_SRC"/>
      <constant value="562949953421311" ctype="gint" gtype="gint" name="ELEMENT_FACTORY_TYPE_ANY"/>
      <constant value="3940649673949188" ctype="gint" gtype="gint" name="ELEMENT_FACTORY_TYPE_AUDIOVIDEO_SINKS"/>
      <constant value="1125899906842626" ctype="gint" gtype="gint" name="ELEMENT_FACTORY_TYPE_AUDIO_ENCODER"/>
      <constant value="353" ctype="gint" gtype="gint" name="ELEMENT_FACTORY_TYPE_DECODABLE"/>
      <constant value="1" ctype="gint" gtype="gint" name="ELEMENT_FACTORY_TYPE_DECODER"/>
      <constant value="32" ctype="gint" gtype="gint" name="ELEMENT_FACTORY_TYPE_DEMUXER"/>
      <constant value="256" ctype="gint" gtype="gint" name="ELEMENT_FACTORY_TYPE_DEPAYLOADER"/>
      <constant value="2" ctype="gint" gtype="gint" name="ELEMENT_FACTORY_TYPE_ENCODER"/>
      <constant value="512" ctype="gint" gtype="gint" name="ELEMENT_FACTORY_TYPE_FORMATTER"/>
      <constant value="281474976710656" ctype="gint" gtype="gint" name="ELEMENT_FACTORY_TYPE_MAX_ELEMENTS"/>
      <constant value="18446462598732840960" ctype="gint" gtype="gint" name="ELEMENT_FACTORY_TYPE_MEDIA_ANY"/>
      <constant value="1125899906842624" ctype="gint" gtype="gint" name="ELEMENT_FACTORY_TYPE_MEDIA_AUDIO"/>
      <constant value="2251799813685248" ctype="gint" gtype="gint" name="ELEMENT_FACTORY_TYPE_MEDIA_IMAGE"/>
      <constant value="9007199254740992" ctype="gint" gtype="gint" name="ELEMENT_FACTORY_TYPE_MEDIA_METADATA"/>
      <constant value="4503599627370496" ctype="gint" gtype="gint" name="ELEMENT_FACTORY_TYPE_MEDIA_SUBTITLE"/>
      <constant value="562949953421312" ctype="gint" gtype="gint" name="ELEMENT_FACTORY_TYPE_MEDIA_VIDEO"/>
      <constant value="16" ctype="gint" gtype="gint" name="ELEMENT_FACTORY_TYPE_MUXER"/>
      <constant value="64" ctype="gint" gtype="gint" name="ELEMENT_FACTORY_TYPE_PARSER"/>
      <constant value="128" ctype="gint" gtype="gint" name="ELEMENT_FACTORY_TYPE_PAYLOADER"/>
      <constant value="4" ctype="gint" gtype="gint" name="ELEMENT_FACTORY_TYPE_SINK"/>
      <constant value="8" ctype="gint" gtype="gint" name="ELEMENT_FACTORY_TYPE_SRC"/>
      <constant value="2814749767106562" ctype="gint" gtype="gint" name="ELEMENT_FACTORY_TYPE_VIDEO_ENCODER"/>
      <constant value="author" ctype="gchar*" gtype="gchar*" name="ELEMENT_METADATA_AUTHOR"/>
      <constant value="description" ctype="gchar*" gtype="gchar*" name="ELEMENT_METADATA_DESCRIPTION"/>
      <constant value="doc-uri" ctype="gchar*" gtype="gchar*" name="ELEMENT_METADATA_DOC_URI"/>
      <constant value="icon-name" ctype="gchar*" gtype="gchar*" name="ELEMENT_METADATA_ICON_NAME"/>
      <constant value="klass" ctype="gchar*" gtype="gchar*" name="ELEMENT_METADATA_KLASS"/>
      <constant value="long-name" ctype="gchar*" gtype="gchar*" name="ELEMENT_METADATA_LONGNAME"/>
      <constant value="system error: %s" ctype="gchar*" gtype="gchar*" name="ERROR_SYSTEM"/>
      <constant value="8" ctype="gint" gtype="gint" name="EVENT_NUM_SHIFT"/>
      <constant value="0" ctype="gint" gtype="gint" name="EVENT_TYPE_BOTH"/>
      <constant value="1000000" ctype="gint64" gtype="gint64" name="FORMAT_PERCENT_MAX"/>
      <constant value="10000" ctype="gint64" gtype="gint64" name="FORMAT_PERCENT_SCALE"/>
      <constant value="c%c%c%c" ctype="gchar*" gtype="gchar*" name="FOURCC_FORMAT"/>
      <constant value="unknown" ctype="gchar*" gtype="gchar*" name="LICENSE_UNKNOWN"/>
      <constant value="0" ctype="gint" gtype="gint" name="LOCK_FLAG_READWRITE"/>
      <constant value="0" ctype="gint" gtype="gint" name="MAP_READWRITE"/>
      <constant value="1000000" ctype="gint" gtype="gint" name="MSECOND"/>
      <constant value="1" ctype="gint" gtype="gint" name="NSECOND"/>
      <constant value="2" ctype="gint" gtype="gint" name="PARAM_CONTROLLABLE"/>
      <constant value="8" ctype="gint" gtype="gint" name="PARAM_MUTABLE_PAUSED"/>
      <constant value="16" ctype="gint" gtype="gint" name="PARAM_MUTABLE_PLAYING"/>
      <constant value="4" ctype="gint" gtype="gint" name="PARAM_MUTABLE_READY"/>
      <constant value="256" ctype="gint" gtype="gint" name="PARAM_USER_SHIFT"/>
      <constant value="8" ctype="gint" gtype="gint" name="QUERY_NUM_SHIFT"/>
      <constant value="0" ctype="gint" gtype="gint" name="QUERY_TYPE_BOTH"/>
      <constant value="1000000000" ctype="gint" gtype="gint" name="SECOND"/>
      <constant value="album" ctype="gchar*" gtype="gchar*" name="TAG_ALBUM"/>
      <constant value="album-artist" ctype="gchar*" gtype="gchar*" name="TAG_ALBUM_ARTIST"/>
      <constant value="album-artist-sortname" ctype="gchar*" gtype="gchar*" name="TAG_ALBUM_ARTIST_SORTNAME"/>
      <constant value="replaygain-album-gain" ctype="gchar*" gtype="gchar*" name="TAG_ALBUM_GAIN"/>
      <constant value="replaygain-album-peak" ctype="gchar*" gtype="gchar*" name="TAG_ALBUM_PEAK"/>
      <constant value="album-sortname" ctype="gchar*" gtype="gchar*" name="TAG_ALBUM_SORTNAME"/>
      <constant value="album-disc-count" ctype="gchar*" gtype="gchar*" name="TAG_ALBUM_VOLUME_COUNT"/>
      <constant value="album-disc-number" ctype="gchar*" gtype="gchar*" name="TAG_ALBUM_VOLUME_NUMBER"/>
      <constant value="application-data" ctype="gchar*" gtype="gchar*" name="TAG_APPLICATION_DATA"/>
      <constant value="application-name" ctype="gchar*" gtype="gchar*" name="TAG_APPLICATION_NAME"/>
      <constant value="artist" ctype="gchar*" gtype="gchar*" name="TAG_ARTIST"/>
      <constant value="artist-sortname" ctype="gchar*" gtype="gchar*" name="TAG_ARTIST_SORTNAME"/>
      <constant value="attachment" ctype="gchar*" gtype="gchar*" name="TAG_ATTACHMENT"/>
      <constant value="audio-codec" ctype="gchar*" gtype="gchar*" name="TAG_AUDIO_CODEC"/>
      <constant value="beats-per-minute" ctype="gchar*" gtype="gchar*" name="TAG_BEATS_PER_MINUTE"/>
      <constant value="bitrate" ctype="gchar*" gtype="gchar*" name="TAG_BITRATE"/>
      <constant value="codec" ctype="gchar*" gtype="gchar*" name="TAG_CODEC"/>
      <constant value="comment" ctype="gchar*" gtype="gchar*" name="TAG_COMMENT"/>
      <constant value="composer" ctype="gchar*" gtype="gchar*" name="TAG_COMPOSER"/>
      <constant value="composer-sortname" ctype="gchar*" gtype="gchar*" name="TAG_COMPOSER_SORTNAME"/>
      <constant value="contact" ctype="gchar*" gtype="gchar*" name="TAG_CONTACT"/>
      <constant value="container-format" ctype="gchar*" gtype="gchar*" name="TAG_CONTAINER_FORMAT"/>
      <constant value="copyright" ctype="gchar*" gtype="gchar*" name="TAG_COPYRIGHT"/>
      <constant value="copyright-uri" ctype="gchar*" gtype="gchar*" name="TAG_COPYRIGHT_URI"/>
      <constant value="date" ctype="gchar*" gtype="gchar*" name="TAG_DATE"/>
      <constant value="datetime" ctype="gchar*" gtype="gchar*" name="TAG_DATE_TIME"/>
      <constant value="description" ctype="gchar*" gtype="gchar*" name="TAG_DESCRIPTION"/>
      <constant value="device-manufacturer" ctype="gchar*" gtype="gchar*" name="TAG_DEVICE_MANUFACTURER"/>
      <constant value="device-model" ctype="gchar*" gtype="gchar*" name="TAG_DEVICE_MODEL"/>
      <constant value="duration" ctype="gchar*" gtype="gchar*" name="TAG_DURATION"/>
      <constant value="encoded-by" ctype="gchar*" gtype="gchar*" name="TAG_ENCODED_BY"/>
      <constant value="encoder" ctype="gchar*" gtype="gchar*" name="TAG_ENCODER"/>
      <constant value="encoder-version" ctype="gchar*" gtype="gchar*" name="TAG_ENCODER_VERSION"/>
      <constant value="extended-comment" ctype="gchar*" gtype="gchar*" name="TAG_EXTENDED_COMMENT"/>
      <constant value="genre" ctype="gchar*" gtype="gchar*" name="TAG_GENRE"/>
      <constant value="geo-location-capture-direction" ctype="gchar*" gtype="gchar*" name="TAG_GEO_LOCATION_CAPTURE_DIRECTION"/>
      <constant value="geo-location-city" ctype="gchar*" gtype="gchar*" name="TAG_GEO_LOCATION_CITY"/>
      <constant value="geo-location-country" ctype="gchar*" gtype="gchar*" name="TAG_GEO_LOCATION_COUNTRY"/>
      <constant value="geo-location-elevation" ctype="gchar*" gtype="gchar*" name="TAG_GEO_LOCATION_ELEVATION"/>
      <constant value="geo-location-horizontal-error" ctype="gchar*" gtype="gchar*" name="TAG_GEO_LOCATION_HORIZONTAL_ERROR"/>
      <constant value="geo-location-latitude" ctype="gchar*" gtype="gchar*" name="TAG_GEO_LOCATION_LATITUDE"/>
      <constant value="geo-location-longitude" ctype="gchar*" gtype="gchar*" name="TAG_GEO_LOCATION_LONGITUDE"/>
      <constant value="geo-location-movement-direction" ctype="gchar*" gtype="gchar*" name="TAG_GEO_LOCATION_MOVEMENT_DIRECTION"/>
      <constant value="geo-location-movement-speed" ctype="gchar*" gtype="gchar*" name="TAG_GEO_LOCATION_MOVEMENT_SPEED"/>
      <constant value="geo-location-name" ctype="gchar*" gtype="gchar*" name="TAG_GEO_LOCATION_NAME"/>
      <constant value="geo-location-sublocation" ctype="gchar*" gtype="gchar*" name="TAG_GEO_LOCATION_SUBLOCATION"/>
      <constant value="grouping" ctype="gchar*" gtype="gchar*" name="TAG_GROUPING"/>
      <constant value="homepage" ctype="gchar*" gtype="gchar*" name="TAG_HOMEPAGE"/>
      <constant value="image" ctype="gchar*" gtype="gchar*" name="TAG_IMAGE"/>
      <constant value="image-orientation" ctype="gchar*" gtype="gchar*" name="TAG_IMAGE_ORIENTATION"/>
      <constant value="isrc" ctype="gchar*" gtype="gchar*" name="TAG_ISRC"/>
      <constant value="keywords" ctype="gchar*" gtype="gchar*" name="TAG_KEYWORDS"/>
      <constant value="language-code" ctype="gchar*" gtype="gchar*" name="TAG_LANGUAGE_CODE"/>
      <constant value="language-name" ctype="gchar*" gtype="gchar*" name="TAG_LANGUAGE_NAME"/>
      <constant value="license" ctype="gchar*" gtype="gchar*" name="TAG_LICENSE"/>
      <constant value="license-uri" ctype="gchar*" gtype="gchar*" name="TAG_LICENSE_URI"/>
      <constant value="location" ctype="gchar*" gtype="gchar*" name="TAG_LOCATION"/>
      <constant value="lyrics" ctype="gchar*" gtype="gchar*" name="TAG_LYRICS"/>
      <constant value="maximum-bitrate" ctype="gchar*" gtype="gchar*" name="TAG_MAXIMUM_BITRATE"/>
      <constant value="minimum-bitrate" ctype="gchar*" gtype="gchar*" name="TAG_MINIMUM_BITRATE"/>
      <constant value="nominal-bitrate" ctype="gchar*" gtype="gchar*" name="TAG_NOMINAL_BITRATE"/>
      <constant value="organization" ctype="gchar*" gtype="gchar*" name="TAG_ORGANIZATION"/>
      <constant value="performer" ctype="gchar*" gtype="gchar*" name="TAG_PERFORMER"/>
      <constant value="preview-image" ctype="gchar*" gtype="gchar*" name="TAG_PREVIEW_IMAGE"/>
      <constant value="replaygain-reference-level" ctype="gchar*" gtype="gchar*" name="TAG_REFERENCE_LEVEL"/>
      <constant value="serial" ctype="gchar*" gtype="gchar*" name="TAG_SERIAL"/>
      <constant value="show-episode-number" ctype="gchar*" gtype="gchar*" name="TAG_SHOW_EPISODE_NUMBER"/>
      <constant value="show-name" ctype="gchar*" gtype="gchar*" name="TAG_SHOW_NAME"/>
      <constant value="show-season-number" ctype="gchar*" gtype="gchar*" name="TAG_SHOW_SEASON_NUMBER"/>
      <constant value="show-sortname" ctype="gchar*" gtype="gchar*" name="TAG_SHOW_SORTNAME"/>
      <constant value="subtitle-codec" ctype="gchar*" gtype="gchar*" name="TAG_SUBTITLE_CODEC"/>
      <constant value="title" ctype="gchar*" gtype="gchar*" name="TAG_TITLE"/>
      <constant value="title-sortname" ctype="gchar*" gtype="gchar*" name="TAG_TITLE_SORTNAME"/>
      <constant value="track-count" ctype="gchar*" gtype="gchar*" name="TAG_TRACK_COUNT"/>
      <constant value="replaygain-track-gain" ctype="gchar*" gtype="gchar*" name="TAG_TRACK_GAIN"/>
      <constant value="track-number" ctype="gchar*" gtype="gchar*" name="TAG_TRACK_NUMBER"/>
      <constant value="replaygain-track-peak" ctype="gchar*" gtype="gchar*" name="TAG_TRACK_PEAK"/>
      <constant value="user-rating" ctype="gchar*" gtype="gchar*" name="TAG_USER_RATING"/>
      <constant value="version" ctype="gchar*" gtype="gchar*" name="TAG_VERSION"/>
      <constant value="video-codec" ctype="gchar*" gtype="gchar*" name="TAG_VIDEO_CODEC"/>
      <constant value="u:%02u:%02u.%09u" ctype="gchar*" gtype="gchar*" name="TIME_FORMAT"/>
      <constant value="1000" ctype="gint" gtype="gint" name="USECOND"/>
      <constant value="0" ctype="gint" gtype="gint" name="VALUE_EQUAL"/>
      <constant value="1" ctype="gint" gtype="gint" name="VALUE_GREATER_THAN"/>
      <constant value="-1" ctype="gint" gtype="gint" name="VALUE_LESS_THAN"/>
      <constant value="2" ctype="gint" gtype="gint" name="VALUE_UNORDERED"/>
    </object>
  </namespace>
</api>
