<?xml version="1.0" encoding="UTF-8"?>
<api parser_version="3">
  <namespace name="Gst" library="gstreamer-1.0">
    <enum name="BufferingMode" cname="GstBufferingMode" type="enum" gtype="gst_buffering_mode_get_type">
      <member cname="GST_BUFFERING_STREAM" name="Stream" value="0"/>
      <member cname="GST_BUFFERING_DOWNLOAD" name="Download" value="1"/>
      <member cname="GST_BUFFERING_TIMESHIFT" name="Timeshift" value="2"/>
      <member cname="GST_BUFFERING_LIVE" name="Live" value="3"/>
    </enum>
    <enum name="BusSyncReply" cname="GstBusSyncReply" type="enum" gtype="gst_bus_sync_reply_get_type">
      <member cname="GST_BUS_DROP" name="Drop" value="0"/>
      <member cname="GST_BUS_PASS" name="Pass" value="1"/>
      <member cname="GST_BUS_ASYNC" name="Async" value="2"/>
    </enum>
    <enum name="CapsIntersectMode" cname="GstCapsIntersectMode" type="enum" gtype="gst_caps_intersect_mode_get_type">
      <member cname="GST_CAPS_INTERSECT_ZIG_ZAG" name="ZigZag" value="0"/>
      <member cname="GST_CAPS_INTERSECT_FIRST" name="First" value="1"/>
    </enum>
    <enum name="ClockEntryType" cname="GstClockEntryType" type="enum" gtype="gst_clock_entry_type_get_type">
      <member cname="GST_CLOCK_ENTRY_SINGLE" name="Single" value="0"/>
      <member cname="GST_CLOCK_ENTRY_PERIODIC" name="Periodic" value="1"/>
    </enum>
    <enum name="ClockReturn" cname="GstClockReturn" type="enum" gtype="gst_clock_return_get_type">
      <member cname="GST_CLOCK_OK" name="Ok" value="0"/>
      <member cname="GST_CLOCK_EARLY" name="Early" value="1"/>
      <member cname="GST_CLOCK_UNSCHEDULED" name="Unscheduled" value="2"/>
      <member cname="GST_CLOCK_BUSY" name="Busy" value="3"/>
      <member cname="GST_CLOCK_BADTIME" name="Badtime" value="4"/>
      <member cname="GST_CLOCK_ERROR" name="Error" value="5"/>
      <member cname="GST_CLOCK_UNSUPPORTED" name="Unsupported" value="6"/>
      <member cname="GST_CLOCK_DONE" name="Done" value="7"/>
    </enum>
    <enum name="ClockType" cname="GstClockType" type="enum" gtype="gst_clock_type_get_type">
      <member cname="GST_CLOCK_TYPE_REALTIME" name="Realtime" value="0"/>
      <member cname="GST_CLOCK_TYPE_MONOTONIC" name="Monotonic" value="1"/>
      <member cname="GST_CLOCK_TYPE_OTHER" name="Other" value="2"/>
    </enum>
    <enum name="CoreError" cname="GstCoreError" type="enum" gtype="gst_core_error_get_type">
      <member cname="GST_CORE_ERROR_FAILED" name="Failed" value="1"/>
      <member cname="GST_CORE_ERROR_TOO_LAZY" name="TooLazy" value="2"/>
      <member cname="GST_CORE_ERROR_NOT_IMPLEMENTED" name="NotImplemented" value="3"/>
      <member cname="GST_CORE_ERROR_STATE_CHANGE" name="StateChange" value="4"/>
      <member cname="GST_CORE_ERROR_PAD" name="Pad" value="5"/>
      <member cname="GST_CORE_ERROR_THREAD" name="Thread" value="6"/>
      <member cname="GST_CORE_ERROR_NEGOTIATION" name="Negotiation" value="7"/>
      <member cname="GST_CORE_ERROR_EVENT" name="Event" value="8"/>
      <member cname="GST_CORE_ERROR_SEEK" name="Seek" value="9"/>
      <member cname="GST_CORE_ERROR_CAPS" name="Caps" value="10"/>
      <member cname="GST_CORE_ERROR_TAG" name="Tag" value="11"/>
      <member cname="GST_CORE_ERROR_MISSING_PLUGIN" name="MissingPlugin" value="12"/>
      <member cname="GST_CORE_ERROR_CLOCK" name="Clock" value="13"/>
      <member cname="GST_CORE_ERROR_DISABLED" name="Disabled" value="14"/>
      <member cname="GST_CORE_ERROR_NUM_ERRORS" name="NumErrors" value="15"/>
    </enum>
    <enum name="DebugColorFlags" cname="GstDebugColorFlags" type="enum" gtype="gst_debug_color_flags_get_type">
      <member cname="GST_DEBUG_FG_BLACK" name="FgBlack" value="0"/>
      <member cname="GST_DEBUG_BG_BLACK" name="BgBlack" value="0"/>
      <member cname="GST_DEBUG_FG_RED" name="FgRed" value="1"/>
      <member cname="GST_DEBUG_FG_GREEN" name="FgGreen" value="2"/>
      <member cname="GST_DEBUG_FG_YELLOW" name="FgYellow" value="3"/>
      <member cname="GST_DEBUG_FG_BLUE" name="FgBlue" value="4"/>
      <member cname="GST_DEBUG_FG_MAGENTA" name="FgMagenta" value="5"/>
      <member cname="GST_DEBUG_FG_CYAN" name="FgCyan" value="6"/>
      <member cname="GST_DEBUG_FG_WHITE" name="FgWhite" value="7"/>
      <member cname="GST_DEBUG_BG_RED" name="BgRed" value="16"/>
      <member cname="GST_DEBUG_BG_GREEN" name="BgGreen" value="32"/>
      <member cname="GST_DEBUG_BG_YELLOW" name="BgYellow" value="48"/>
      <member cname="GST_DEBUG_BG_BLUE" name="BgBlue" value="64"/>
      <member cname="GST_DEBUG_BG_MAGENTA" name="BgMagenta" value="80"/>
      <member cname="GST_DEBUG_BG_CYAN" name="BgCyan" value="96"/>
      <member cname="GST_DEBUG_BG_WHITE" name="BgWhite" value="112"/>
      <member cname="GST_DEBUG_BOLD" name="Bold" value="256"/>
      <member cname="GST_DEBUG_UNDERLINE" name="Underline" value="512"/>
    </enum>
    <enum name="DebugLevel" cname="GstDebugLevel" type="enum" gtype="gst_debug_level_get_type">
      <member cname="GST_LEVEL_NONE" name="None" value="0"/>
      <member cname="GST_LEVEL_ERROR" name="Error" value="1"/>
      <member cname="GST_LEVEL_WARNING" name="Warning" value="2"/>
      <member cname="GST_LEVEL_FIXME" name="Fixme" value="3"/>
      <member cname="GST_LEVEL_INFO" name="Info" value="4"/>
      <member cname="GST_LEVEL_DEBUG" name="Debug" value="5"/>
      <member cname="GST_LEVEL_LOG" name="Log" value="6"/>
      <member cname="GST_LEVEL_TRACE" name="Trace" value="7"/>
      <member cname="GST_LEVEL_MEMDUMP" name="Memdump" value="9"/>
      <member cname="GST_LEVEL_COUNT" name="Count" value="10"/>
    </enum>
    <enum name="EventType" cname="GstEventType" type="enum" gtype="gst_event_type_get_type">
      <member cname="GST_EVENT_UNKNOWN" name="Unknown" value="0"/>
      <member cname="GST_EVENT_FLUSH_START" name="FlushStart" value="2563"/>
      <member cname="GST_EVENT_FLUSH_STOP" name="FlushStop" value="5127"/>
      <member cname="GST_EVENT_STREAM_START" name="StreamStart" value="10254"/>
      <member cname="GST_EVENT_CAPS" name="Caps" value="12814"/>
      <member cname="GST_EVENT_SEGMENT" name="Segment" value="17934"/>
      <member cname="GST_EVENT_TAG" name="Tag" value="20510"/>
      <member cname="GST_EVENT_BUFFERSIZE" name="Buffersize" value="23054"/>
      <member cname="GST_EVENT_SINK_MESSAGE" name="SinkMessage" value="25630"/>
      <member cname="GST_EVENT_EOS" name="Eos" value="28174"/>
      <member cname="GST_EVENT_TOC" name="Toc" value="30750"/>
      <member cname="GST_EVENT_SEGMENT_DONE" name="SegmentDone" value="38406"/>
      <member cname="GST_EVENT_GAP" name="Gap" value="40966"/>
      <member cname="GST_EVENT_QOS" name="Qos" value="48641"/>
      <member cname="GST_EVENT_SEEK" name="Seek" value="51201"/>
      <member cname="GST_EVENT_NAVIGATION" name="Navigation" value="53761"/>
      <member cname="GST_EVENT_LATENCY" name="Latency" value="56321"/>
      <member cname="GST_EVENT_STEP" name="Step" value="58881"/>
      <member cname="GST_EVENT_RECONFIGURE" name="Reconfigure" value="61441"/>
      <member cname="GST_EVENT_TOC_SELECT" name="TocSelect" value="64001"/>
      <member cname="GST_EVENT_CUSTOM_UPSTREAM" name="CustomUpstream" value="69121"/>
      <member cname="GST_EVENT_CUSTOM_DOWNSTREAM" name="CustomDownstream" value="71686"/>
      <member cname="GST_EVENT_CUSTOM_DOWNSTREAM_OOB" name="CustomDownstreamOob" value="74242"/>
      <member cname="GST_EVENT_CUSTOM_DOWNSTREAM_STICKY" name="CustomDownstreamSticky" value="76830"/>
      <member cname="GST_EVENT_CUSTOM_BOTH" name="CustomBoth" value="79367"/>
      <member cname="GST_EVENT_CUSTOM_BOTH_OOB" name="CustomBothOob" value="81923"/>
    </enum>
    <enum name="FlowReturn" cname="GstFlowReturn" type="enum" gtype="gst_flow_return_get_type">
      <member cname="GST_FLOW_CUSTOM_ERROR_2" name="CustomError2" value="-102"/>
      <member cname="GST_FLOW_CUSTOM_ERROR_1" name="CustomError1" value="-101"/>
      <member cname="GST_FLOW_CUSTOM_ERROR" name="CustomError" value="-100"/>
      <member cname="GST_FLOW_NOT_SUPPORTED" name="NotSupported" value="-6"/>
      <member cname="GST_FLOW_ERROR" name="Error" value="-5"/>
      <member cname="GST_FLOW_NOT_NEGOTIATED" name="NotNegotiated" value="-4"/>
      <member cname="GST_FLOW_EOS" name="Eos" value="-3"/>
      <member cname="GST_FLOW_FLUSHING" name="Flushing" value="-2"/>
      <member cname="GST_FLOW_NOT_LINKED" name="NotLinked" value="-1"/>
      <member cname="GST_FLOW_OK" name="Ok" value="0"/>
      <member cname="GST_FLOW_CUSTOM_SUCCESS" name="CustomSuccess" value="100"/>
      <member cname="GST_FLOW_CUSTOM_SUCCESS_1" name="CustomSuccess1" value="101"/>
      <member cname="GST_FLOW_CUSTOM_SUCCESS_2" name="CustomSuccess2" value="102"/>
    </enum>
    <enum name="Format" cname="GstFormat" type="enum" gtype="gst_format_get_type">
      <member cname="GST_FORMAT_UNDEFINED" name="Undefined" value="0"/>
      <member cname="GST_FORMAT_DEFAULT" name="Default" value="1"/>
      <member cname="GST_FORMAT_BYTES" name="Bytes" value="2"/>
      <member cname="GST_FORMAT_TIME" name="Time" value="3"/>
      <member cname="GST_FORMAT_BUFFERS" name="Buffers" value="4"/>
      <member cname="GST_FORMAT_PERCENT" name="Percent" value="5"/>
    </enum>
    <enum name="IteratorItem" cname="GstIteratorItem" type="enum" gtype="gst_iterator_item_get_type">
      <member cname="GST_ITERATOR_ITEM_SKIP" name="Skip" value="0"/>
      <member cname="GST_ITERATOR_ITEM_PASS" name="Pass" value="1"/>
      <member cname="GST_ITERATOR_ITEM_END" name="End" value="2"/>
    </enum>
    <enum name="IteratorResult" cname="GstIteratorResult" type="enum" gtype="gst_iterator_result_get_type">
      <member cname="GST_ITERATOR_DONE" name="Done" value="0"/>
      <member cname="GST_ITERATOR_OK" name="Ok" value="1"/>
      <member cname="GST_ITERATOR_RESYNC" name="Resync" value="2"/>
      <member cname="GST_ITERATOR_ERROR" name="Error" value="3"/>
    </enum>
    <enum name="LibraryError" cname="GstLibraryError" type="enum" gtype="gst_library_error_get_type">
      <member cname="GST_LIBRARY_ERROR_FAILED" name="Failed" value="1"/>
      <member cname="GST_LIBRARY_ERROR_TOO_LAZY" name="TooLazy" value="2"/>
      <member cname="GST_LIBRARY_ERROR_INIT" name="Init" value="3"/>
      <member cname="GST_LIBRARY_ERROR_SHUTDOWN" name="Shutdown" value="4"/>
      <member cname="GST_LIBRARY_ERROR_SETTINGS" name="Settings" value="5"/>
      <member cname="GST_LIBRARY_ERROR_ENCODE" name="Encode" value="6"/>
      <member cname="GST_LIBRARY_ERROR_NUM_ERRORS" name="NumErrors" value="7"/>
    </enum>
    <enum name="PadDirection" cname="GstPadDirection" type="enum" gtype="gst_pad_direction_get_type">
      <member cname="GST_PAD_UNKNOWN" name="Unknown" value="0"/>
      <member cname="GST_PAD_SRC" name="Src" value="1"/>
      <member cname="GST_PAD_SINK" name="Sink" value="2"/>
    </enum>
    <enum name="PadLinkReturn" cname="GstPadLinkReturn" type="enum" gtype="gst_pad_link_return_get_type">
      <member cname="GST_PAD_LINK_REFUSED" name="Refused" value="-6"/>
      <member cname="GST_PAD_LINK_NOSCHED" name="Nosched" value="-5"/>
      <member cname="GST_PAD_LINK_NOFORMAT" name="Noformat" value="-4"/>
      <member cname="GST_PAD_LINK_WRONG_DIRECTION" name="WrongDirection" value="-3"/>
      <member cname="GST_PAD_LINK_WAS_LINKED" name="WasLinked" value="-2"/>
      <member cname="GST_PAD_LINK_WRONG_HIERARCHY" name="WrongHierarchy" value="-1"/>
      <member cname="GST_PAD_LINK_OK" name="Ok" value="0"/>
    </enum>
    <enum name="PadMode" cname="GstPadMode" type="enum" gtype="gst_pad_mode_get_type">
      <member cname="GST_PAD_MODE_NONE" name="None" value="0"/>
      <member cname="GST_PAD_MODE_PUSH" name="Push" value="1"/>
      <member cname="GST_PAD_MODE_PULL" name="Pull" value="2"/>
    </enum>
    <enum name="PadPresence" cname="GstPadPresence" type="enum" gtype="gst_pad_presence_get_type">
      <member cname="GST_PAD_ALWAYS" name="Always" value="0"/>
      <member cname="GST_PAD_SOMETIMES" name="Sometimes" value="1"/>
      <member cname="GST_PAD_REQUEST" name="Request" value="2"/>
    </enum>
    <enum name="PadProbeReturn" cname="GstPadProbeReturn" type="enum" gtype="gst_pad_probe_return_get_type">
      <member cname="GST_PAD_PROBE_DROP" name="Drop" value="0"/>
      <member cname="GST_PAD_PROBE_OK" name="Ok" value="1"/>
      <member cname="GST_PAD_PROBE_REMOVE" name="Remove" value="2"/>
      <member cname="GST_PAD_PROBE_PASS" name="Pass" value="3"/>
    </enum>
    <enum name="ParseError" cname="GstParseError" type="enum" gtype="gst_parse_error_get_type">
      <member cname="GST_PARSE_ERROR_SYNTAX" name="Syntax" value="0"/>
      <member cname="GST_PARSE_ERROR_NO_SUCH_ELEMENT" name="NoSuchElement" value="1"/>
      <member cname="GST_PARSE_ERROR_NO_SUCH_PROPERTY" name="NoSuchProperty" value="2"/>
      <member cname="GST_PARSE_ERROR_LINK" name="Link" value="3"/>
      <member cname="GST_PARSE_ERROR_COULD_NOT_SET_PROPERTY" name="CouldNotSetProperty" value="4"/>
      <member cname="GST_PARSE_ERROR_EMPTY_BIN" name="EmptyBin" value="5"/>
      <member cname="GST_PARSE_ERROR_EMPTY" name="Empty" value="6"/>
    </enum>
    <enum name="PluginError" cname="GstPluginError" type="enum" gtype="gst_plugin_error_get_type">
      <member cname="GST_PLUGIN_ERROR_MODULE" name="Module" value="0"/>
      <member cname="GST_PLUGIN_ERROR_DEPENDENCIES" name="Dependencies" value="1"/>
      <member cname="GST_PLUGIN_ERROR_NAME_MISMATCH" name="NameMismatch" value="2"/>
    </enum>
    <enum name="ProgressType" cname="GstProgressType" type="enum" gtype="gst_progress_type_get_type">
      <member cname="GST_PROGRESS_TYPE_START" name="Start" value="0"/>
      <member cname="GST_PROGRESS_TYPE_CONTINUE" name="Continue" value="1"/>
      <member cname="GST_PROGRESS_TYPE_COMPLETE" name="Complete" value="2"/>
      <member cname="GST_PROGRESS_TYPE_CANCELED" name="Canceled" value="3"/>
      <member cname="GST_PROGRESS_TYPE_ERROR" name="Error" value="4"/>
    </enum>
    <enum name="QOSType" cname="GstQOSType" type="enum" gtype="gst_qos_type_get_type">
      <member cname="GST_QOS_TYPE_OVERFLOW" name="Overflow" value="0"/>
      <member cname="GST_QOS_TYPE_UNDERFLOW" name="Underflow" value="1"/>
      <member cname="GST_QOS_TYPE_THROTTLE" name="Throttle" value="2"/>
    </enum>
    <enum name="QueryType" cname="GstQueryType" type="enum" gtype="gst_query_type_get_type">
      <member cname="GST_QUERY_UNKNOWN" name="Unknown" value="0"/>
      <member cname="GST_QUERY_POSITION" name="Position" value="2563"/>
      <member cname="GST_QUERY_DURATION" name="Duration" value="5123"/>
      <member cname="GST_QUERY_LATENCY" name="Latency" value="7683"/>
      <member cname="GST_QUERY_JITTER" name="Jitter" value="10243"/>
      <member cname="GST_QUERY_RATE" name="Rate" value="12803"/>
      <member cname="GST_QUERY_SEEKING" name="Seeking" value="15363"/>
      <member cname="GST_QUERY_SEGMENT" name="Segment" value="17923"/>
      <member cname="GST_QUERY_CONVERT" name="Convert" value="20483"/>
      <member cname="GST_QUERY_FORMATS" name="Formats" value="23043"/>
      <member cname="GST_QUERY_BUFFERING" name="Buffering" value="28163"/>
      <member cname="GST_QUERY_CUSTOM" name="Custom" value="30723"/>
      <member cname="GST_QUERY_URI" name="Uri" value="33283"/>
      <member cname="GST_QUERY_ALLOCATION" name="Allocation" value="35846"/>
      <member cname="GST_QUERY_SCHEDULING" name="Scheduling" value="38401"/>
      <member cname="GST_QUERY_ACCEPT_CAPS" name="AcceptCaps" value="40963"/>
      <member cname="GST_QUERY_CAPS" name="Caps" value="43523"/>
      <member cname="GST_QUERY_DRAIN" name="Drain" value="46086"/>
    </enum>
    <enum name="Rank" cname="GstRank" type="enum" gtype="gst_rank_get_type">
      <member cname="GST_RANK_NONE" name="None" value="0"/>
      <member cname="GST_RANK_MARGINAL" name="Marginal" value="64"/>
      <member cname="GST_RANK_SECONDARY" name="Secondary" value="128"/>
      <member cname="GST_RANK_PRIMARY" name="Primary" value="256"/>
    </enum>
    <enum name="ResourceError" cname="GstResourceError" type="enum" gtype="gst_resource_error_get_type">
      <member cname="GST_RESOURCE_ERROR_FAILED" name="Failed" value="1"/>
      <member cname="GST_RESOURCE_ERROR_TOO_LAZY" name="TooLazy" value="2"/>
      <member cname="GST_RESOURCE_ERROR_NOT_FOUND" name="NotFound" value="3"/>
      <member cname="GST_RESOURCE_ERROR_BUSY" name="Busy" value="4"/>
      <member cname="GST_RESOURCE_ERROR_OPEN_READ" name="OpenRead" value="5"/>
      <member cname="GST_RESOURCE_ERROR_OPEN_WRITE" name="OpenWrite" value="6"/>
      <member cname="GST_RESOURCE_ERROR_OPEN_READ_WRITE" name="OpenReadWrite" value="7"/>
      <member cname="GST_RESOURCE_ERROR_CLOSE" name="Close" value="8"/>
      <member cname="GST_RESOURCE_ERROR_READ" name="Read" value="9"/>
      <member cname="GST_RESOURCE_ERROR_WRITE" name="Write" value="10"/>
      <member cname="GST_RESOURCE_ERROR_SEEK" name="Seek" value="11"/>
      <member cname="GST_RESOURCE_ERROR_SYNC" name="Sync" value="12"/>
      <member cname="GST_RESOURCE_ERROR_SETTINGS" name="Settings" value="13"/>
      <member cname="GST_RESOURCE_ERROR_NO_SPACE_LEFT" name="NoSpaceLeft" value="14"/>
      <member cname="GST_RESOURCE_ERROR_NUM_ERRORS" name="NumErrors" value="15"/>
    </enum>
    <enum name="SearchMode" cname="GstSearchMode" type="enum" gtype="gst_search_mode_get_type">
      <member cname="GST_SEARCH_MODE_EXACT" name="Exact" value="0"/>
      <member cname="GST_SEARCH_MODE_BEFORE" name="Before" value="1"/>
      <member cname="GST_SEARCH_MODE_AFTER" name="After" value="2"/>
    </enum>
    <enum name="SeekType" cname="GstSeekType" type="enum" gtype="gst_seek_type_get_type">
      <member cname="GST_SEEK_TYPE_NONE" name="None" value="0"/>
      <member cname="GST_SEEK_TYPE_SET" name="Set" value="1"/>
      <member cname="GST_SEEK_TYPE_END" name="End" value="2"/>
    </enum>
    <enum name="State" cname="GstState" type="enum" gtype="gst_state_get_type">
      <member cname="GST_STATE_VOID_PENDING" name="VoidPending" value="0"/>
      <member cname="GST_STATE_NULL" name="Null" value="1"/>
      <member cname="GST_STATE_READY" name="Ready" value="2"/>
      <member cname="GST_STATE_PAUSED" name="Paused" value="3"/>
      <member cname="GST_STATE_PLAYING" name="Playing" value="4"/>
    </enum>
    <enum name="StateChange" cname="GstStateChange" type="enum" gtype="gst_state_change_get_type">
      <member cname="GST_STATE_CHANGE_NULL_TO_READY" name="NullToReady" value="10"/>
      <member cname="GST_STATE_CHANGE_READY_TO_NULL" name="ReadyToNull" value="17"/>
      <member cname="GST_STATE_CHANGE_READY_TO_PAUSED" name="ReadyToPaused" value="19"/>
      <member cname="GST_STATE_CHANGE_PAUSED_TO_READY" name="PausedToReady" value="26"/>
      <member cname="GST_STATE_CHANGE_PAUSED_TO_PLAYING" name="PausedToPlaying" value="28"/>
      <member cname="GST_STATE_CHANGE_PLAYING_TO_PAUSED" name="PlayingToPaused" value="35"/>
    </enum>
    <enum name="StateChangeReturn" cname="GstStateChangeReturn" type="enum" gtype="gst_state_change_return_get_type">
      <member cname="GST_STATE_CHANGE_FAILURE" name="Failure" value="0"/>
      <member cname="GST_STATE_CHANGE_SUCCESS" name="Success" value="1"/>
      <member cname="GST_STATE_CHANGE_ASYNC" name="Async" value="2"/>
      <member cname="GST_STATE_CHANGE_NO_PREROLL" name="NoPreroll" value="3"/>
    </enum>
    <enum name="StreamError" cname="GstStreamError" type="enum" gtype="gst_stream_error_get_type">
      <member cname="GST_STREAM_ERROR_FAILED" name="Failed" value="1"/>
      <member cname="GST_STREAM_ERROR_TOO_LAZY" name="TooLazy" value="2"/>
      <member cname="GST_STREAM_ERROR_NOT_IMPLEMENTED" name="NotImplemented" value="3"/>
      <member cname="GST_STREAM_ERROR_TYPE_NOT_FOUND" name="TypeNotFound" value="4"/>
      <member cname="GST_STREAM_ERROR_WRONG_TYPE" name="WrongType" value="5"/>
      <member cname="GST_STREAM_ERROR_CODEC_NOT_FOUND" name="CodecNotFound" value="6"/>
      <member cname="GST_STREAM_ERROR_DECODE" name="Decode" value="7"/>
      <member cname="GST_STREAM_ERROR_ENCODE" name="Encode" value="8"/>
      <member cname="GST_STREAM_ERROR_DEMUX" name="Demux" value="9"/>
      <member cname="GST_STREAM_ERROR_MUX" name="Mux" value="10"/>
      <member cname="GST_STREAM_ERROR_FORMAT" name="Format" value="11"/>
      <member cname="GST_STREAM_ERROR_DECRYPT" name="Decrypt" value="12"/>
      <member cname="GST_STREAM_ERROR_DECRYPT_NOKEY" name="DecryptNokey" value="13"/>
      <member cname="GST_STREAM_ERROR_NUM_ERRORS" name="NumErrors" value="14"/>
    </enum>
    <enum name="StreamStatusType" cname="GstStreamStatusType" type="enum" gtype="gst_stream_status_type_get_type">
      <member cname="GST_STREAM_STATUS_TYPE_CREATE" name="Create" value="0"/>
      <member cname="GST_STREAM_STATUS_TYPE_ENTER" name="Enter" value="1"/>
      <member cname="GST_STREAM_STATUS_TYPE_LEAVE" name="Leave" value="2"/>
      <member cname="GST_STREAM_STATUS_TYPE_DESTROY" name="Destroy" value="3"/>
      <member cname="GST_STREAM_STATUS_TYPE_START" name="Start" value="8"/>
      <member cname="GST_STREAM_STATUS_TYPE_PAUSE" name="Pause" value="9"/>
      <member cname="GST_STREAM_STATUS_TYPE_STOP" name="Stop" value="10"/>
    </enum>
    <enum name="StructureChangeType" cname="GstStructureChangeType" type="enum" gtype="gst_structure_change_type_get_type">
      <member cname="GST_STRUCTURE_CHANGE_TYPE_PAD_LINK" name="Link" value="0"/>
      <member cname="GST_STRUCTURE_CHANGE_TYPE_PAD_UNLINK" name="Unlink" value="1"/>
    </enum>
    <enum name="TagFlag" cname="GstTagFlag" type="enum" gtype="gst_tag_flag_get_type">
      <member cname="GST_TAG_FLAG_UNDEFINED" name="Undefined" value="0"/>
      <member cname="GST_TAG_FLAG_META" name="Meta" value="1"/>
      <member cname="GST_TAG_FLAG_ENCODED" name="Encoded" value="2"/>
      <member cname="GST_TAG_FLAG_DECODED" name="Decoded" value="3"/>
      <member cname="GST_TAG_FLAG_COUNT" name="Count" value="4"/>
    </enum>
    <enum name="TagMergeMode" cname="GstTagMergeMode" type="enum" gtype="gst_tag_merge_mode_get_type">
      <member cname="GST_TAG_MERGE_UNDEFINED" name="Undefined" value="0"/>
      <member cname="GST_TAG_MERGE_REPLACE_ALL" name="ReplaceAll" value="1"/>
      <member cname="GST_TAG_MERGE_REPLACE" name="Replace" value="2"/>
      <member cname="GST_TAG_MERGE_APPEND" name="Append" value="3"/>
      <member cname="GST_TAG_MERGE_PREPEND" name="Prepend" value="4"/>
      <member cname="GST_TAG_MERGE_KEEP" name="Keep" value="5"/>
      <member cname="GST_TAG_MERGE_KEEP_ALL" name="KeepAll" value="6"/>
      <member cname="GST_TAG_MERGE_COUNT" name="Count" value="7"/>
    </enum>
    <enum name="TagScope" cname="GstTagScope" type="enum" gtype="gst_tag_scope_get_type">
      <member cname="GST_TAG_SCOPE_STREAM" name="Stream" value="0"/>
      <member cname="GST_TAG_SCOPE_GLOBAL" name="Global" value="1"/>
    </enum>
    <enum name="TaskState" cname="GstTaskState" type="enum" gtype="gst_task_state_get_type">
      <member cname="GST_TASK_STARTED" name="Started" value="0"/>
      <member cname="GST_TASK_STOPPED" name="Stopped" value="1"/>
      <member cname="GST_TASK_PAUSED" name="Paused" value="2"/>
    </enum>
    <enum name="TocEntryType" cname="GstTocEntryType" type="enum" gtype="gst_toc_entry_type_get_type">
      <member cname="GST_TOC_ENTRY_TYPE_ANGLE" name="Angle" value="-3"/>
      <member cname="GST_TOC_ENTRY_TYPE_VERSION" name="Version" value="-2"/>
      <member cname="GST_TOC_ENTRY_TYPE_EDITION" name="Edition" value="-1"/>
      <member cname="GST_TOC_ENTRY_TYPE_INVALID" name="Invalid" value="0"/>
      <member cname="GST_TOC_ENTRY_TYPE_TITLE" name="Title" value="1"/>
      <member cname="GST_TOC_ENTRY_TYPE_TRACK" name="Track" value="2"/>
      <member cname="GST_TOC_ENTRY_TYPE_CHAPTER" name="Chapter" value="3"/>
    </enum>
    <enum name="TocScope" cname="GstTocScope" type="enum" gtype="gst_toc_scope_get_type">
      <member cname="GST_TOC_SCOPE_GLOBAL" name="Global" value="1"/>
      <member cname="GST_TOC_SCOPE_CURRENT" name="Current" value="2"/>
    </enum>
    <enum name="TypeFindProbability" cname="GstTypeFindProbability" type="enum" gtype="gst_type_find_probability_get_type">
      <member cname="GST_TYPE_FIND_NONE" name="None" value="0"/>
      <member cname="GST_TYPE_FIND_MINIMUM" name="Minimum" value="1"/>
      <member cname="GST_TYPE_FIND_POSSIBLE" name="Possible" value="50"/>
      <member cname="GST_TYPE_FIND_LIKELY" name="Likely" value="80"/>
      <member cname="GST_TYPE_FIND_NEARLY_CERTAIN" name="NearlyCertain" value="99"/>
      <member cname="GST_TYPE_FIND_MAXIMUM" name="Maximum" value="100"/>
    </enum>
    <enum name="URIError" cname="GstURIError" type="enum" gtype="gst_uri_error_get_type">
      <member cname="GST_URI_ERROR_UNSUPPORTED_PROTOCOL" name="UnsupportedProtocol" value="0"/>
      <member cname="GST_URI_ERROR_BAD_URI" name="BadUri" value="1"/>
      <member cname="GST_URI_ERROR_BAD_STATE" name="BadState" value="2"/>
      <member cname="GST_URI_ERROR_BAD_REFERENCE" name="BadReference" value="3"/>
    </enum>
    <enum name="URIType" cname="GstURIType" type="enum" gtype="gst_uri_type_get_type">
      <member cname="GST_URI_UNKNOWN" name="Unknown" value="0"/>
      <member cname="GST_URI_SINK" name="Sink" value="1"/>
      <member cname="GST_URI_SRC" name="Src" value="2"/>
    </enum>
    <enum name="AllocatorFlags" cname="GstAllocatorFlags" type="flags" gtype="gst_allocator_flags_get_type">
      <member cname="GST_ALLOCATOR_FLAG_CUSTOM_ALLOC" name="CustomAlloc" value="16"/>
      <member cname="GST_ALLOCATOR_FLAG_LAST" name="Last" value="1048576"/>
    </enum>
    <enum name="BinFlags" cname="GstBinFlags" type="flags" gtype="gst_bin_flags_get_type">
      <member cname="GST_BIN_FLAG_NO_RESYNC" name="NoResync" value="16384"/>
      <member cname="GST_BIN_FLAG_LAST" name="Last" value="524288"/>
    </enum>
    <enum name="BufferCopyFlags" cname="GstBufferCopyFlags" type="flags" gtype="gst_buffer_copy_flags_get_type">
      <member cname="GST_BUFFER_COPY_NONE" name="None" value="0"/>
      <member cname="GST_BUFFER_COPY_FLAGS" name="Flags" value="1"/>
      <member cname="GST_BUFFER_COPY_TIMESTAMPS" name="Timestamps" value="2"/>
      <member cname="GST_BUFFER_COPY_META" name="Meta" value="4"/>
      <member cname="GST_BUFFER_COPY_MEMORY" name="Memory" value="8"/>
      <member cname="GST_BUFFER_COPY_MERGE" name="Merge" value="16"/>
    </enum>
    <enum name="BufferFlags" cname="GstBufferFlags" type="flags" gtype="gst_buffer_flags_get_type">
      <member cname="GST_BUFFER_FLAG_LIVE" name="Live" value="16"/>
      <member cname="GST_BUFFER_FLAG_DECODE_ONLY" name="DecodeOnly" value="32"/>
      <member cname="GST_BUFFER_FLAG_DISCONT" name="Discont" value="64"/>
      <member cname="GST_BUFFER_FLAG_RESYNC" name="Resync" value="128"/>
      <member cname="GST_BUFFER_FLAG_CORRUPTED" name="Corrupted" value="256"/>
      <member cname="GST_BUFFER_FLAG_MARKER" name="Marker" value="512"/>
      <member cname="GST_BUFFER_FLAG_HEADER" name="Header" value="1024"/>
      <member cname="GST_BUFFER_FLAG_GAP" name="Gap" value="2048"/>
      <member cname="GST_BUFFER_FLAG_DROPPABLE" name="Droppable" value="4096"/>
      <member cname="GST_BUFFER_FLAG_DELTA_UNIT" name="DeltaUnit" value="8192"/>
      <member cname="GST_BUFFER_FLAG_LAST" name="Last" value="1048576"/>
    </enum>
    <enum name="BufferPoolAcquireFlags" cname="GstBufferPoolAcquireFlags" type="flags" gtype="gst_buffer_pool_acquire_flags_get_type">
      <member cname="GST_BUFFER_POOL_ACQUIRE_FLAG_NONE" name="None" value="0"/>
      <member cname="GST_BUFFER_POOL_ACQUIRE_FLAG_KEY_UNIT" name="KeyUnit" value="1"/>
      <member cname="GST_BUFFER_POOL_ACQUIRE_FLAG_DONTWAIT" name="Dontwait" value="2"/>
      <member cname="GST_BUFFER_POOL_ACQUIRE_FLAG_DISCONT" name="Discont" value="4"/>
      <member cname="GST_BUFFER_POOL_ACQUIRE_FLAG_LAST" name="Last" value="65536"/>
    </enum>
    <enum name="BusFlags" cname="GstBusFlags" type="flags" gtype="gst_bus_flags_get_type">
      <member cname="GST_BUS_FLUSHING" name="Flushing" value="16"/>
      <member cname="GST_BUS_FLAG_LAST" name="FlagLast" value="32"/>
    </enum>
    <enum name="CapsFlags" cname="GstCapsFlags" type="flags" gtype="gst_caps_flags_get_type">
      <member cname="GST_CAPS_FLAG_ANY" name="Any" value="16"/>
    </enum>
    <enum name="ClockFlags" cname="GstClockFlags" type="flags" gtype="gst_clock_flags_get_type">
      <member cname="GST_CLOCK_FLAG_CAN_DO_SINGLE_SYNC" name="CanDoSingleSync" value="16"/>
      <member cname="GST_CLOCK_FLAG_CAN_DO_SINGLE_ASYNC" name="CanDoSingleAsync" value="32"/>
      <member cname="GST_CLOCK_FLAG_CAN_DO_PERIODIC_SYNC" name="CanDoPeriodicSync" value="64"/>
      <member cname="GST_CLOCK_FLAG_CAN_DO_PERIODIC_ASYNC" name="CanDoPeriodicAsync" value="128"/>
      <member cname="GST_CLOCK_FLAG_CAN_SET_RESOLUTION" name="CanSetResolution" value="256"/>
      <member cname="GST_CLOCK_FLAG_CAN_SET_MASTER" name="CanSetMaster" value="512"/>
      <member cname="GST_CLOCK_FLAG_LAST" name="Last" value="4096"/>
    </enum>
    <enum name="DebugGraphDetails" cname="GstDebugGraphDetails" type="flags" gtype="gst_debug_graph_details_get_type">
      <member cname="GST_DEBUG_GRAPH_SHOW_MEDIA_TYPE" name="MediaType" value="1"/>
      <member cname="GST_DEBUG_GRAPH_SHOW_CAPS_DETAILS" name="CapsDetails" value="2"/>
      <member cname="GST_DEBUG_GRAPH_SHOW_NON_DEFAULT_PARAMS" name="NonDefaultParams" value="4"/>
      <member cname="GST_DEBUG_GRAPH_SHOW_STATES" name="States" value="8"/>
      <member cname="GST_DEBUG_GRAPH_SHOW_ALL" name="All" value="15"/>
    </enum>
    <enum name="ElementFlags" cname="GstElementFlags" type="flags" gtype="gst_element_flags_get_type">
      <member cname="GST_ELEMENT_FLAG_LOCKED_STATE" name="LockedState" value="16"/>
      <member cname="GST_ELEMENT_FLAG_SINK" name="Sink" value="32"/>
      <member cname="GST_ELEMENT_FLAG_SOURCE" name="Source" value="64"/>
      <member cname="GST_ELEMENT_FLAG_PROVIDE_CLOCK" name="ProvideClock" value="128"/>
      <member cname="GST_ELEMENT_FLAG_REQUIRE_CLOCK" name="RequireClock" value="256"/>
      <member cname="GST_ELEMENT_FLAG_INDEXABLE" name="Indexable" value="512"/>
      <member cname="GST_ELEMENT_FLAG_LAST" name="Last" value="16384"/>
    </enum>
    <enum name="EventTypeFlags" cname="GstEventTypeFlags" type="flags" gtype="gst_event_type_flags_get_type">
      <member cname="GST_EVENT_TYPE_UPSTREAM" name="Upstream" value="1"/>
      <member cname="GST_EVENT_TYPE_DOWNSTREAM" name="Downstream" value="2"/>
      <member cname="GST_EVENT_TYPE_SERIALIZED" name="Serialized" value="4"/>
      <member cname="GST_EVENT_TYPE_STICKY" name="Sticky" value="8"/>
      <member cname="GST_EVENT_TYPE_STICKY_MULTI" name="StickyMulti" value="16"/>
    </enum>
    <enum name="LockFlags" cname="GstLockFlags" type="flags" gtype="gst_lock_flags_get_type">
      <member cname="GST_LOCK_FLAG_READ" name="Read" value="1"/>
      <member cname="GST_LOCK_FLAG_WRITE" name="Write" value="2"/>
      <member cname="GST_LOCK_FLAG_EXCLUSIVE" name="Exclusive" value="4"/>
      <member cname="GST_LOCK_FLAG_LAST" name="Last" value="256"/>
    </enum>
    <enum name="MapFlags" cname="GstMapFlags" type="flags" gtype="gst_map_flags_get_type">
      <member cname="GST_MAP_READ" name="Read" value="1"/>
      <member cname="GST_MAP_WRITE" name="Write" value="2"/>
      <member cname="GST_MAP_FLAG_LAST" name="FlagLast" value="65536"/>
    </enum>
    <enum name="MemoryFlags" cname="GstMemoryFlags" type="flags" gtype="gst_memory_flags_get_type">
      <member cname="GST_MEMORY_FLAG_READONLY" name="Readonly" value="2"/>
      <member cname="GST_MEMORY_FLAG_NO_SHARE" name="NoShare" value="16"/>
      <member cname="GST_MEMORY_FLAG_ZERO_PREFIXED" name="ZeroPrefixed" value="32"/>
      <member cname="GST_MEMORY_FLAG_ZERO_PADDED" name="ZeroPadded" value="64"/>
      <member cname="GST_MEMORY_FLAG_LAST" name="Last" value="1048576"/>
    </enum>
    <enum name="MessageType" cname="GstMessageType" type="flags" gtype="gst_message_type_get_type">
      <member cname="GST_MESSAGE_ANY" name="Any" value="-1"/>
      <member cname="GST_MESSAGE_UNKNOWN" name="Unknown" value="0"/>
      <member cname="GST_MESSAGE_EOS" name="Eos" value="1"/>
      <member cname="GST_MESSAGE_ERROR" name="Error" value="2"/>
      <member cname="GST_MESSAGE_WARNING" name="Warning" value="4"/>
      <member cname="GST_MESSAGE_INFO" name="Info" value="8"/>
      <member cname="GST_MESSAGE_TAG" name="Tag" value="16"/>
      <member cname="GST_MESSAGE_BUFFERING" name="Buffering" value="32"/>
      <member cname="GST_MESSAGE_STATE_CHANGED" name="StateChanged" value="64"/>
      <member cname="GST_MESSAGE_STATE_DIRTY" name="StateDirty" value="128"/>
      <member cname="GST_MESSAGE_STEP_DONE" name="StepDone" value="256"/>
      <member cname="GST_MESSAGE_CLOCK_PROVIDE" name="ClockProvide" value="512"/>
      <member cname="GST_MESSAGE_CLOCK_LOST" name="ClockLost" value="1024"/>
      <member cname="GST_MESSAGE_NEW_CLOCK" name="NewClock" value="2048"/>
      <member cname="GST_MESSAGE_STRUCTURE_CHANGE" name="StructureChange" value="4096"/>
      <member cname="GST_MESSAGE_STREAM_STATUS" name="StreamStatus" value="8192"/>
      <member cname="GST_MESSAGE_APPLICATION" name="Application" value="16384"/>
      <member cname="GST_MESSAGE_ELEMENT" name="Element" value="32768"/>
      <member cname="GST_MESSAGE_SEGMENT_START" name="SegmentStart" value="65536"/>
      <member cname="GST_MESSAGE_SEGMENT_DONE" name="SegmentDone" value="131072"/>
      <member cname="GST_MESSAGE_DURATION_CHANGED" name="DurationChanged" value="262144"/>
      <member cname="GST_MESSAGE_LATENCY" name="Latency" value="524288"/>
      <member cname="GST_MESSAGE_ASYNC_START" name="AsyncStart" value="1048576"/>
      <member cname="GST_MESSAGE_ASYNC_DONE" name="AsyncDone" value="2097152"/>
      <member cname="GST_MESSAGE_REQUEST_STATE" name="RequestState" value="4194304"/>
      <member cname="GST_MESSAGE_STEP_START" name="StepStart" value="8388608"/>
      <member cname="GST_MESSAGE_QOS" name="Qos" value="16777216"/>
      <member cname="GST_MESSAGE_PROGRESS" name="Progress" value="33554432"/>
      <member cname="GST_MESSAGE_TOC" name="Toc" value="67108864"/>
      <member cname="GST_MESSAGE_RESET_TIME" name="ResetTime" value="134217728"/>
      <member cname="GST_MESSAGE_STREAM_START" name="StreamStart" value="268435456"/>
    </enum>
    <enum name="MetaFlags" cname="GstMetaFlags" type="flags" gtype="gst_meta_flags_get_type">
      <member cname="GST_META_FLAG_NONE" name="None" value="0"/>
      <member cname="GST_META_FLAG_READONLY" name="Readonly" value="1"/>
      <member cname="GST_META_FLAG_POOLED" name="Pooled" value="2"/>
      <member cname="GST_META_FLAG_LOCKED" name="Locked" value="4"/>
      <member cname="GST_META_FLAG_LAST" name="Last" value="65536"/>
    </enum>
    <enum name="MiniObjectFlags" cname="GstMiniObjectFlags" type="flags" gtype="gst_mini_object_flags_get_type">
      <member cname="GST_MINI_OBJECT_FLAG_LOCKABLE" name="Lockable" value="1"/>
      <member cname="GST_MINI_OBJECT_FLAG_LOCK_READONLY" name="LockReadonly" value="2"/>
      <member cname="GST_MINI_OBJECT_FLAG_LAST" name="Last" value="16"/>
    </enum>
    <enum name="ObjectFlags" cname="GstObjectFlags" type="flags" gtype="gst_object_flags_get_type">
      <member cname="GST_OBJECT_FLAG_LAST" name="Last" value="16"/>
    </enum>
    <enum name="PadFlags" cname="GstPadFlags" type="flags" gtype="gst_pad_flags_get_type">
      <member cname="GST_PAD_FLAG_BLOCKED" name="Blocked" value="16"/>
      <member cname="GST_PAD_FLAG_FLUSHING" name="Flushing" value="32"/>
      <member cname="GST_PAD_FLAG_EOS" name="Eos" value="64"/>
      <member cname="GST_PAD_FLAG_BLOCKING" name="Blocking" value="128"/>
      <member cname="GST_PAD_FLAG_NEED_PARENT" name="NeedParent" value="256"/>
      <member cname="GST_PAD_FLAG_NEED_RECONFIGURE" name="NeedReconfigure" value="512"/>
      <member cname="GST_PAD_FLAG_PENDING_EVENTS" name="PendingEvents" value="1024"/>
      <member cname="GST_PAD_FLAG_FIXED_CAPS" name="FixedCaps" value="2048"/>
      <member cname="GST_PAD_FLAG_PROXY_CAPS" name="ProxyCaps" value="4096"/>
      <member cname="GST_PAD_FLAG_PROXY_ALLOCATION" name="ProxyAllocation" value="8192"/>
      <member cname="GST_PAD_FLAG_PROXY_SCHEDULING" name="ProxyScheduling" value="16384"/>
      <member cname="GST_PAD_FLAG_LAST" name="Last" value="1048576"/>
    </enum>
    <enum name="PadLinkCheck" cname="GstPadLinkCheck" type="flags" gtype="gst_pad_link_check_get_type">
      <member cname="GST_PAD_LINK_CHECK_NOTHING" name="Nothing" value="0"/>
      <member cname="GST_PAD_LINK_CHECK_HIERARCHY" name="Hierarchy" value="1"/>
      <member cname="GST_PAD_LINK_CHECK_TEMPLATE_CAPS" name="TemplateCaps" value="2"/>
      <member cname="GST_PAD_LINK_CHECK_CAPS" name="Caps" value="4"/>
      <member cname="GST_PAD_LINK_CHECK_DEFAULT" name="Default" value="5"/>
    </enum>
    <enum name="PadProbeType" cname="GstPadProbeType" type="flags" gtype="gst_pad_probe_type_get_type">
      <member cname="GST_PAD_PROBE_TYPE_INVALID" name="Invalid" value="0"/>
      <member cname="GST_PAD_PROBE_TYPE_IDLE" name="Idle" value="1"/>
      <member cname="GST_PAD_PROBE_TYPE_BLOCK" name="Block" value="2"/>
      <member cname="GST_PAD_PROBE_TYPE_BLOCKING" name="Blocking" value="3"/>
      <member cname="GST_PAD_PROBE_TYPE_BUFFER" name="Buffer" value="16"/>
      <member cname="GST_PAD_PROBE_TYPE_BUFFER_LIST" name="BufferList" value="32"/>
      <member cname="GST_PAD_PROBE_TYPE_EVENT_DOWNSTREAM" name="EventDownstream" value="64"/>
      <member cname="GST_PAD_PROBE_TYPE_DATA_DOWNSTREAM" name="DataDownstream" value="112"/>
      <member cname="GST_PAD_PROBE_TYPE_BLOCK_DOWNSTREAM" name="BlockDownstream" value="114"/>
      <member cname="GST_PAD_PROBE_TYPE_EVENT_UPSTREAM" name="EventUpstream" value="128"/>
      <member cname="GST_PAD_PROBE_TYPE_DATA_UPSTREAM" name="DataUpstream" value="128"/>
      <member cname="GST_PAD_PROBE_TYPE_BLOCK_UPSTREAM" name="BlockUpstream" value="130"/>
      <member cname="GST_PAD_PROBE_TYPE_EVENT_BOTH" name="EventBoth" value="192"/>
      <member cname="GST_PAD_PROBE_TYPE_DATA_BOTH" name="DataBoth" value="240"/>
      <member cname="GST_PAD_PROBE_TYPE_EVENT_FLUSH" name="EventFlush" value="256"/>
      <member cname="GST_PAD_PROBE_TYPE_QUERY_DOWNSTREAM" name="QueryDownstream" value="512"/>
      <member cname="GST_PAD_PROBE_TYPE_QUERY_UPSTREAM" name="QueryUpstream" value="1024"/>
      <member cname="GST_PAD_PROBE_TYPE_QUERY_BOTH" name="QueryBoth" value="1536"/>
      <member cname="GST_PAD_PROBE_TYPE_ALL_BOTH" name="AllBoth" value="1776"/>
      <member cname="GST_PAD_PROBE_TYPE_PUSH" name="Push" value="4096"/>
      <member cname="GST_PAD_PROBE_TYPE_PULL" name="Pull" value="8192"/>
      <member cname="GST_PAD_PROBE_TYPE_SCHEDULING" name="Scheduling" value="12288"/>
    </enum>
    <enum name="PadTemplateFlags" cname="GstPadTemplateFlags" type="flags" gtype="gst_pad_template_flags_get_type">
      <member cname="GST_PAD_TEMPLATE_FLAG_LAST" name="Last" value="256"/>
    </enum>
    <enum name="ParseFlags" cname="GstParseFlags" type="flags" gtype="gst_parse_flags_get_type">
      <member cname="GST_PARSE_FLAG_NONE" name="None" value="0"/>
      <member cname="GST_PARSE_FLAG_FATAL_ERRORS" name="FatalErrors" value="1"/>
    </enum>
    <enum name="PipelineFlags" cname="GstPipelineFlags" type="flags" gtype="gst_pipeline_flags_get_type">
      <member cname="GST_PIPELINE_FLAG_FIXED_CLOCK" name="FixedClock" value="524288"/>
      <member cname="GST_PIPELINE_FLAG_LAST" name="Last" value="8388608"/>
    </enum>
    <enum name="PluginDependencyFlags" cname="GstPluginDependencyFlags" type="flags" gtype="gst_plugin_dependency_flags_get_type">
      <member cname="GST_PLUGIN_DEPENDENCY_FLAG_NONE" name="None" value="0"/>
      <member cname="GST_PLUGIN_DEPENDENCY_FLAG_RECURSE" name="Recurse" value="1"/>
      <member cname="GST_PLUGIN_DEPENDENCY_FLAG_PATHS_ARE_DEFAULT_ONLY" name="PathsAreDefaultOnly" value="2"/>
      <member cname="GST_PLUGIN_DEPENDENCY_FLAG_FILE_NAME_IS_SUFFIX" name="FileNameIsSuffix" value="4"/>
    </enum>
    <enum name="PluginFlags" cname="GstPluginFlags" type="flags" gtype="gst_plugin_flags_get_type">
      <member cname="GST_PLUGIN_FLAG_CACHED" name="Cached" value="16"/>
      <member cname="GST_PLUGIN_FLAG_BLACKLISTED" name="Blacklisted" value="32"/>
    </enum>
    <enum name="QueryTypeFlags" cname="GstQueryTypeFlags" type="flags" gtype="gst_query_type_flags_get_type">
      <member cname="GST_QUERY_TYPE_UPSTREAM" name="Upstream" value="1"/>
      <member cname="GST_QUERY_TYPE_DOWNSTREAM" name="Downstream" value="2"/>
      <member cname="GST_QUERY_TYPE_SERIALIZED" name="Serialized" value="4"/>
    </enum>
    <enum name="SchedulingFlags" cname="GstSchedulingFlags" type="flags" gtype="gst_scheduling_flags_get_type">
      <member cname="GST_SCHEDULING_FLAG_SEEKABLE" name="Seekable" value="1"/>
      <member cname="GST_SCHEDULING_FLAG_SEQUENTIAL" name="Sequential" value="2"/>
    </enum>
    <enum name="SeekFlags" cname="GstSeekFlags" type="flags" gtype="gst_seek_flags_get_type">
      <member cname="GST_SEEK_FLAG_NONE" name="None" value="0"/>
      <member cname="GST_SEEK_FLAG_FLUSH" name="Flush" value="1"/>
      <member cname="GST_SEEK_FLAG_ACCURATE" name="Accurate" value="2"/>
      <member cname="GST_SEEK_FLAG_KEY_UNIT" name="KeyUnit" value="4"/>
      <member cname="GST_SEEK_FLAG_SEGMENT" name="Segment" value="8"/>
      <member cname="GST_SEEK_FLAG_SKIP" name="Skip" value="16"/>
      <member cname="GST_SEEK_FLAG_SNAP_BEFORE" name="SnapBefore" value="32"/>
      <member cname="GST_SEEK_FLAG_SNAP_AFTER" name="SnapAfter" value="64"/>
      <member cname="GST_SEEK_FLAG_SNAP_NEAREST" name="SnapNearest" value="96"/>
    </enum>
    <enum name="SegmentFlags" cname="GstSegmentFlags" type="flags" gtype="gst_segment_flags_get_type">
      <member cname="GST_SEGMENT_FLAG_NONE" name="None" value="0"/>
      <member cname="GST_SEGMENT_FLAG_RESET" name="Reset" value="1"/>
      <member cname="GST_SEGMENT_FLAG_SEGMENT" name="Segment" value="8"/>
      <member cname="GST_SEGMENT_FLAG_SKIP" name="Skip" value="16"/>
    </enum>
    <callback name="BufferForeachMetaFunc" cname="GstBufferForeachMetaFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="buffer" type="GstBuffer*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="meta" type="GstMeta**">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter closure="2" name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="BufferListFunc" cname="GstBufferListFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="buffer" type="GstBuffer**">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="idx" type="guint"/>
        <parameter closure="2" name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="BusFunc" cname="GstBusFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="bus" type="GstBus*"/>
        <parameter name="message" type="GstMessage*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter closure="2" name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="BusSyncHandler" cname="GstBusSyncHandler">
      <return-type type="GstBusSyncReply"/>
      <parameters>
        <parameter name="bus" type="GstBus*"/>
        <parameter name="message" type="GstMessage*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter closure="2" name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="ClockCallback" cname="GstClockCallback">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="clock" type="GstClock*"/>
        <parameter name="time" type="guint64"/>
        <parameter name="id" type="gpointer"/>
        <parameter closure="3" name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="ControlBindingConvert" cname="GstControlBindingConvert">
      <return-type type="void"/>
      <parameters>
        <parameter name="binding" type="GstControlBinding*"/>
        <parameter name="src_value" type="gdouble"/>
        <parameter name="dest_value" type="GValue*">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <callback name="ControlSourceGetValue" cname="GstControlSourceGetValue">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="self" type="GstControlSource*"/>
        <parameter name="timestamp" type="guint64"/>
        <parameter name="value" type="gdouble"/>
      </parameters>
    </callback>
    <callback name="ControlSourceGetValueArray" cname="GstControlSourceGetValueArray">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="self" type="GstControlSource*"/>
        <parameter name="timestamp" type="guint64"/>
        <parameter name="interval" type="guint64"/>
        <parameter name="n_values" type="guint"/>
        <parameter name="values" type="gdouble"/>
      </parameters>
    </callback>
    <callback name="DebugFuncPtr" cname="GstDebugFuncPtr">
      <return-type type="void"/>
    </callback>
    <callback name="IteratorCopyFunction" cname="GstIteratorCopyFunction">
      <return-type type="void"/>
      <parameters>
        <parameter name="it" type="GstIterator*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="copy" type="GstIterator*">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <callback name="IteratorFoldFunction" cname="GstIteratorFoldFunction">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="item" type="GValue*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="_ret" type="GValue*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter closure="2" name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="IteratorForeachFunction" cname="GstIteratorForeachFunction">
      <return-type type="void"/>
      <parameters>
        <parameter name="item" type="GValue*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter closure="1" name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="IteratorFreeFunction" cname="GstIteratorFreeFunction">
      <return-type type="void"/>
      <parameters>
        <parameter name="it" type="GstIterator*">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <callback name="IteratorItemFunction" cname="GstIteratorItemFunction">
      <return-type type="GstIteratorItem"/>
      <parameters>
        <parameter name="it" type="GstIterator*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="item" type="GValue*">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <callback name="IteratorNextFunction" cname="GstIteratorNextFunction">
      <return-type type="GstIteratorResult"/>
      <parameters>
        <parameter name="it" type="GstIterator*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="_result" type="GValue*">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <callback name="IteratorResyncFunction" cname="GstIteratorResyncFunction">
      <return-type type="void"/>
      <parameters>
        <parameter name="it" type="GstIterator*">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <callback name="LogFunction" cname="GstLogFunction">
      <return-type type="void"/>
      <parameters>
        <parameter name="category" type="GstDebugCategory*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="level" type="GstDebugLevel"/>
        <parameter name="file" type="const-gchar*"/>
        <parameter name="function" type="const-gchar*"/>
        <parameter name="line" type="gint"/>
        <parameter name="_object" type="GObject*"/>
        <parameter name="message" type="GstDebugMessage*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter closure="7" name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="MemoryCopyFunction" cname="GstMemoryCopyFunction">
      <return-type type="GstMemory*" owned="true">
        <warning>missing glib:type-name</warning>
      </return-type>
      <parameters>
        <parameter name="mem" type="GstMemory*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="offset" type="gssize"/>
        <parameter name="size" type="gssize"/>
      </parameters>
    </callback>
    <callback name="MemoryIsSpanFunction" cname="GstMemoryIsSpanFunction">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="mem1" type="GstMemory*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="mem2" type="GstMemory*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="offset" type="gsize"/>
      </parameters>
    </callback>
    <callback hidden="0" name="MemoryMapFunction" cname="GstMemoryMapFunction">
      <return-type type="gpointer"/>
      <parameters>
        <parameter name="mem" type="GstMemory*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="maxsize" type="gsize"/>
        <parameter name="flags" type="GstMapFlags"/>
      </parameters>
    </callback>
    <callback name="MemoryShareFunction" cname="GstMemoryShareFunction">
      <return-type type="GstMemory*" owned="true">
        <warning>missing glib:type-name</warning>
      </return-type>
      <parameters>
        <parameter name="mem" type="GstMemory*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="offset" type="gssize"/>
        <parameter name="size" type="gssize"/>
      </parameters>
    </callback>
    <callback name="MemoryUnmapFunction" cname="GstMemoryUnmapFunction">
      <return-type type="void"/>
      <parameters>
        <parameter name="mem" type="GstMemory*">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <callback name="MetaFreeFunction" cname="GstMetaFreeFunction">
      <return-type type="void"/>
      <parameters>
        <parameter name="meta" type="GstMeta*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="buffer" type="GstBuffer*">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <callback name="MetaInitFunction" cname="GstMetaInitFunction">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="meta" type="GstMeta*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="params" type="gpointer"/>
        <parameter name="buffer" type="GstBuffer*">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <callback name="MetaTransformFunction" cname="GstMetaTransformFunction">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="transbuf" type="GstBuffer*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="meta" type="GstMeta*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="buffer" type="GstBuffer*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="type" type="guint32"/>
        <parameter name="data" type="gpointer"/>
      </parameters>
    </callback>
    <callback hidden="0" name="MiniObjectCopyFunction" cname="GstMiniObjectCopyFunction">
      <return-type type="GstMiniObject*">
        <warning>missing glib:type-name</warning>
      </return-type>
      <parameters>
        <parameter name="obj" type="GstMiniObject*">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <callback name="MiniObjectDisposeFunction" cname="GstMiniObjectDisposeFunction">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="obj" type="GstMiniObject*">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <callback name="MiniObjectFreeFunction" cname="GstMiniObjectFreeFunction">
      <return-type type="void"/>
      <parameters>
        <parameter name="obj" type="GstMiniObject*">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <callback name="MiniObjectNotify" cname="GstMiniObjectNotify">
      <return-type type="void"/>
      <parameters>
        <parameter closure="0" name="user_data" type="gpointer"/>
        <parameter name="obj" type="GstMiniObject*">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <callback name="PadActivateFunction" cname="GstPadActivateFunction">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="pad" type="GstPad*"/>
        <parameter name="parent" type="GstObject*"/>
      </parameters>
    </callback>
    <callback name="PadActivateModeFunction" cname="GstPadActivateModeFunction">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="pad" type="GstPad*"/>
        <parameter name="parent" type="GstObject*"/>
        <parameter name="mode" type="GstPadMode"/>
        <parameter name="active" type="gboolean"/>
      </parameters>
    </callback>
    <callback name="PadChainFunction" cname="GstPadChainFunction">
      <return-type type="GstFlowReturn"/>
      <parameters>
        <parameter name="pad" type="GstPad*"/>
        <parameter name="parent" type="GstObject*"/>
        <parameter name="buffer" type="GstBuffer*">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <callback name="PadChainListFunction" cname="GstPadChainListFunction">
      <return-type type="GstFlowReturn"/>
      <parameters>
        <parameter name="pad" type="GstPad*"/>
        <parameter name="parent" type="GstObject*"/>
        <parameter name="list" type="GstBufferList*">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <callback name="PadEventFunction" cname="GstPadEventFunction">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="pad" type="GstPad*"/>
        <parameter name="parent" type="GstObject*"/>
        <parameter name="event" type="GstEvent*">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <callback name="PadForwardFunction" cname="GstPadForwardFunction">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="pad" type="GstPad*"/>
        <parameter closure="1" name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="PadGetRangeFunction" cname="GstPadGetRangeFunction">
      <return-type type="GstFlowReturn"/>
      <parameters>
        <parameter name="pad" type="GstPad*"/>
        <parameter name="parent" type="GstObject*"/>
        <parameter name="offset" type="guint64"/>
        <parameter name="length" type="guint"/>
        <parameter name="buffer" type="GstBuffer**">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <callback name="PadIterIntLinkFunction" cname="GstPadIterIntLinkFunction">
      <return-type type="GstIterator*" owned="true">
        <warning>missing glib:type-name</warning>
      </return-type>
      <parameters>
        <parameter name="pad" type="GstPad*"/>
        <parameter name="parent" type="GstObject*"/>
      </parameters>
    </callback>
    <callback name="PadLinkFunction" cname="GstPadLinkFunction">
      <return-type type="GstPadLinkReturn"/>
      <parameters>
        <parameter name="pad" type="GstPad*"/>
        <parameter name="parent" type="GstObject*"/>
        <parameter name="peer" type="GstPad*"/>
      </parameters>
    </callback>
    <callback name="PadProbeCallback" cname="GstPadProbeCallback">
      <return-type type="GstPadProbeReturn"/>
      <parameters>
        <parameter name="pad" type="GstPad*"/>
        <parameter name="info" type="GstPadProbeInfo*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter closure="2" name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="PadQueryFunction" cname="GstPadQueryFunction">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="pad" type="GstPad*"/>
        <parameter name="parent" type="GstObject*"/>
        <parameter name="query" type="GstQuery*">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <callback name="PadStickyEventsForeachFunction" cname="GstPadStickyEventsForeachFunction">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="pad" type="GstPad*"/>
        <parameter name="event" type="GstEvent**">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter closure="2" name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="PadUnlinkFunction" cname="GstPadUnlinkFunction">
      <return-type type="void"/>
      <parameters>
        <parameter name="pad" type="GstPad*"/>
        <parameter name="parent" type="GstObject*"/>
      </parameters>
    </callback>
    <callback name="PluginFeatureFilter" cname="GstPluginFeatureFilter">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="feature" type="GstPluginFeature*"/>
        <parameter closure="1" name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="PluginFilter" cname="GstPluginFilter">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="plugin" type="GstPlugin*"/>
        <parameter closure="1" name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="PluginInitFullFunc" cname="GstPluginInitFullFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="plugin" type="GstPlugin*"/>
        <parameter closure="1" name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="PluginInitFunc" cname="GstPluginInitFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="plugin" type="GstPlugin*"/>
      </parameters>
    </callback>
    <callback name="StructureForeachFunc" cname="GstStructureForeachFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="field_id" type="guint32"/>
        <parameter name="value" type="GValue*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter closure="2" name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="StructureMapFunc" cname="GstStructureMapFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="field_id" type="guint32"/>
        <parameter name="value" type="GValue*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter closure="2" name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="TagForeachFunc" cname="GstTagForeachFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="list" type="GstTagList*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="tag" type="const-gchar*"/>
        <parameter closure="2" name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="TagMergeFunc" cname="GstTagMergeFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="dest" type="GValue*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="src" type="GValue*">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <callback name="TaskFunction" cname="GstTaskFunction">
      <return-type type="void"/>
      <parameters>
        <parameter closure="0" name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="TaskPoolFunction" cname="GstTaskPoolFunction">
      <return-type type="void"/>
      <parameters>
        <parameter closure="0" name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="TaskThreadFunc" cname="GstTaskThreadFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="task" type="GstTask*"/>
        <parameter name="thread" type="GThread*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter closure="2" name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="TypeFindFunction" cname="GstTypeFindFunction">
      <return-type type="void"/>
      <parameters>
        <parameter name="find" type="GstTypeFind*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter closure="1" name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="ValueCompareFunc" cname="GstValueCompareFunc">
      <return-type type="gint"/>
      <parameters>
        <parameter name="value1" type="GValue*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="value2" type="GValue*">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <callback name="ValueDeserializeFunc" cname="GstValueDeserializeFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="dest" type="GValue*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="s" type="const-gchar*"/>
      </parameters>
    </callback>
    <callback name="ValueSerializeFunc" cname="GstValueSerializeFunc">
      <return-type type="gchar*" owned="true"/>
      <parameters>
        <parameter name="value1" type="GValue*">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <interface name="ChildProxy" cname="GstChildProxy" abstract="false" opaque="false" hidden="false">
      <class_struct cname="GstChildProxyInterface">
        <field cname="parent" access="public" writeable="false" readable="true" name="Parent" type="GTypeInterface">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="get_child_by_name"/>
        <method vm="get_child_by_index"/>
        <method vm="get_children_count"/>
        <method signal_vm="child_added"/>
        <method signal_vm="child_removed"/>
        <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
      </class_struct>
      <method name="GetType" cname="gst_child_proxy_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <virtual_method name="GetChildByIndex" cname="get_child_by_index">
        <return-type type="GObject*" owned="true"/>
        <parameters>
          <parameter name="index" type="guint"/>
        </parameters>
      </virtual_method>
      <virtual_method name="GetChildByName" cname="get_child_by_name">
        <return-type type="GObject*" owned="true"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="GetChildrenCount" cname="get_children_count">
        <return-type type="guint"/>
        <parameters/>
      </virtual_method>
      <method name="GetChildByIndex" cname="gst_child_proxy_get_child_by_index">
        <return-type type="GObject*" owned="true"/>
        <parameters>
          <parameter name="index" type="guint"/>
        </parameters>
      </method>
      <method name="GetChildByName" cname="gst_child_proxy_get_child_by_name">
        <return-type type="GObject*" owned="true"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetChildrenCount" cname="gst_child_proxy_get_children_count">
        <return-type type="guint"/>
        <parameters/>
      </method>
      <method name="GetProperty" cname="gst_child_proxy_get_property">
        <return-type type="void"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="value" type="GValue*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Lookup" cname="gst_child_proxy_lookup">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
          <parameter allow-none="1" name="target" type="GObject*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="pspec" type="GParamSpec*" pass_as="out"/>
        </parameters>
      </method>
      <method name="SetProperty" cname="gst_child_proxy_set_property">
        <return-type type="void"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <signal name="ChildAdded" cname="child-added" when="first" field_name="child_added">
        <return-type type="void"/>
        <parameters>
          <parameter name="_object" type="GObject*"/>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </signal>
      <signal name="ChildRemoved" cname="child-removed" when="first" field_name="child_removed">
        <return-type type="void"/>
        <parameters>
          <parameter name="_object" type="GObject*"/>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </signal>
    </interface>
    <interface name="Preset" cname="GstPreset" abstract="false" opaque="false" hidden="false">
      <class_struct cname="GstPresetInterface">
        <field cname="parent" access="public" writeable="false" readable="true" name="Parent" type="GTypeInterface">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="get_preset_names"/>
        <method vm="get_property_names"/>
        <method vm="load_preset"/>
        <method vm="save_preset"/>
        <method vm="rename_preset"/>
        <method vm="delete_preset"/>
        <method vm="set_meta"/>
        <method vm="get_meta"/>
        <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
      </class_struct>
      <method name="GetType" cname="gst_preset_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="GetAppDir" cname="gst_preset_get_app_dir" shared="true">
        <return-type type="const-gchar*"/>
      </method>
      <method name="SetAppDir" cname="gst_preset_set_app_dir" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="app_dir" type="const-gchar*"/>
        </parameters>
      </method>
      <virtual_method name="DeletePreset" cname="delete_preset">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="GetMeta" cname="get_meta">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="tag" type="const-gchar*"/>
          <parameter name="value" type="gchar*" owned="true" pass_as="out"/>
        </parameters>
      </virtual_method>
      <virtual_method name="GetPresetNames" cname="get_preset_names">
        <return-type type="gchar***" owned="true" array="true" null_term_array="true"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="GetPropertyNames" cname="get_property_names">
        <return-type type="gchar***" owned="true" array="true" null_term_array="true"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="LoadPreset" cname="load_preset">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="RenamePreset" cname="rename_preset">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="old_name" type="const-gchar*"/>
          <parameter name="new_name" type="const-gchar*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="SavePreset" cname="save_preset">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="SetMeta" cname="set_meta">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="tag" type="const-gchar*"/>
          <parameter name="value" type="const-gchar*"/>
        </parameters>
      </virtual_method>
      <method name="DeletePreset" cname="gst_preset_delete_preset">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetMeta" cname="gst_preset_get_meta">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="tag" type="const-gchar*"/>
          <parameter name="value" type="gchar*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetPresetNames" cname="gst_preset_get_preset_names">
        <return-type type="gchar***" owned="true" array="true" null_term_array="true"/>
        <parameters/>
      </method>
      <method name="GetPropertyNames" cname="gst_preset_get_property_names">
        <return-type type="gchar***" owned="true" array="true" null_term_array="true"/>
        <parameters/>
      </method>
      <method name="LoadPreset" cname="gst_preset_load_preset">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="RenamePreset" cname="gst_preset_rename_preset">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="old_name" type="const-gchar*"/>
          <parameter name="new_name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SavePreset" cname="gst_preset_save_preset">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetMeta" cname="gst_preset_set_meta">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="tag" type="const-gchar*"/>
          <parameter name="value" type="const-gchar*"/>
        </parameters>
      </method>
    </interface>
    <interface name="TagSetter" cname="GstTagSetter" abstract="false" opaque="false" hidden="false">
      <class_struct cname="GstTagSetterInterface">
        <field cname="g_iface" access="public" writeable="false" readable="true" name="GIface" type="GTypeInterface">
          <warning>missing glib:type-name</warning>
        </field>
      </class_struct>
      <method name="GetType" cname="gst_tag_setter_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="AddTagValue" cname="gst_tag_setter_add_tag_value">
        <return-type type="void"/>
        <parameters>
          <parameter name="mode" type="GstTagMergeMode"/>
          <parameter name="tag" type="const-gchar*"/>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetTagList" cname="gst_tag_setter_get_tag_list">
        <return-type type="GstTagList*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetTagMergeMode" cname="gst_tag_setter_get_tag_merge_mode">
        <return-type type="GstTagMergeMode"/>
        <parameters/>
      </method>
      <method name="MergeTags" cname="gst_tag_setter_merge_tags">
        <return-type type="void"/>
        <parameters>
          <parameter name="list" type="GstTagList*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="mode" type="GstTagMergeMode"/>
        </parameters>
      </method>
      <method name="ResetTags" cname="gst_tag_setter_reset_tags">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="SetTagMergeMode" cname="gst_tag_setter_set_tag_merge_mode">
        <return-type type="void"/>
        <parameters>
          <parameter name="mode" type="GstTagMergeMode"/>
        </parameters>
      </method>
    </interface>
    <interface name="TocSetter" cname="GstTocSetter" abstract="false" opaque="false" hidden="false">
      <class_struct cname="GstTocSetterInterface">
        <field cname="g_iface" access="public" writeable="false" readable="true" name="GIface" type="GTypeInterface">
          <warning>missing glib:type-name</warning>
        </field>
      </class_struct>
      <method name="GetType" cname="gst_toc_setter_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="GetToc" cname="gst_toc_setter_get_toc">
        <return-type type="GstToc*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="Reset" cname="gst_toc_setter_reset">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="SetToc" cname="gst_toc_setter_set_toc">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="toc" type="GstToc*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
    </interface>
    <interface name="URIHandler" cname="GstURIHandler" abstract="false" opaque="false" hidden="false">
      <class_struct cname="GstURIHandlerInterface">
        <field cname="parent" access="public" writeable="false" readable="true" name="Parent" type="GTypeInterface">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="get_type"/>
        <method vm="get_protocols"/>
        <method vm="get_uri"/>
        <method vm="set_uri"/>
      </class_struct>
      <virtual_method name="GetType" cname="get_type" shared="true">
        <return-type type="GstURIType"/>
        <parameters>
          <parameter name="type" type="GType"/>
        </parameters>
      </virtual_method>
      <virtual_method name="GetProtocols" cname="get_protocols" shared="true">
        <return-type type="const gchar* const*" array="true" null_term_array="true"/>
        <parameters>
          <parameter name="type" type="GType"/>
        </parameters>
      </virtual_method>
      <method name="GetType" cname="gst_uri_handler_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <virtual_method name="GetUri" cname="get_uri">
        <return-type type="gchar*" owned="true"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="SetUri" cname="set_uri">
        <return-type type="gboolean"/>
        <parameters throws="1">
          <parameter name="uri" type="const-gchar*"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </virtual_method>
      <method name="GetProtocols" cname="gst_uri_handler_get_protocols">
        <return-type type="const gchar* const*" array="true" null_term_array="true"/>
        <parameters/>
      </method>
      <method name="GetUri" cname="gst_uri_handler_get_uri">
        <return-type type="gchar*" owned="true"/>
        <parameters/>
      </method>
      <method name="GetUriType" cname="gst_uri_handler_get_uri_type">
        <return-type type="GstURIType"/>
        <parameters/>
      </method>
      <method name="SetUri" cname="gst_uri_handler_set_uri">
        <return-type type="gboolean"/>
        <parameters throws="1">
          <parameter name="uri" type="const-gchar*"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
    </interface>
    <object name="Allocator" cname="GstAllocator" abstract="true" opaque="false" hidden="false" parent="GstObject">
      <class_struct cname="GstAllocatorClass">
        <field cname="object_class" access="public" writeable="false" readable="true" name="ObjectClass" type="GstObjectClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="alloc"/>
        <method vm="free"/>
        <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
      </class_struct>
      <method name="GetType" cname="gst_allocator_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="Find" cname="gst_allocator_find" shared="true">
        <return-type type="GstAllocator*" owned="true"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="Register" cname="gst_allocator_register" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="allocator" type="GstAllocator*" owned="true"/>
        </parameters>
      </method>
      <virtual_method name="Alloc" cname="alloc">
        <return-type type="GstMemory*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="size" type="gsize"/>
          <parameter allow-none="1" name="params" type="GstAllocationParams*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="Free" cname="free">
        <return-type type="void"/>
        <parameters>
          <parameter name="memory" type="GstMemory*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <method name="Alloc" cname="gst_allocator_alloc">
        <return-type type="GstMemory*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="size" type="gsize"/>
          <parameter allow-none="1" name="params" type="GstAllocationParams*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Free" cname="gst_allocator_free">
        <return-type type="void"/>
        <parameters>
          <parameter name="memory" type="GstMemory*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetDefault" cname="gst_allocator_set_default">
        <return-type type="void"/>
        <parameters/>
      </method>
      <field cname="object" access="public" writeable="false" readable="true" name="Object" type="GstObject*"/>
      <field cname="mem_type" access="public" writeable="false" readable="true" name="MemType" type="gchar*"/>
      <field cname="mem_map" access="public" writeable="false" readable="true" name="MemMap" type="GstMemoryMapFunction"/>
      <field cname="mem_unmap" access="public" writeable="false" readable="true" name="MemUnmap" type="GstMemoryUnmapFunction"/>
      <field cname="mem_copy" access="public" writeable="false" readable="true" name="MemCopy" type="GstMemoryCopyFunction"/>
      <field cname="mem_share" access="public" writeable="false" readable="true" name="MemShare" type="GstMemoryShareFunction"/>
      <field cname="mem_is_span" access="public" writeable="false" readable="true" name="MemIsSpan" type="GstMemoryIsSpanFunction"/>
      <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GstAllocatorPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="Bin" cname="GstBin" abstract="false" opaque="false" hidden="false" parent="GstElement">
      <implements>
        <interface cname="GstChildProxy"/>
      </implements>
      <class_struct cname="GstBinClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GstElementClass">
          <warning>missing glib:type-name</warning>
        </field>
        <field cname="pool" access="private" writeable="false" readable="false" name="Pool" type="GThreadPool*">
          <warning>missing glib:type-name</warning>
        </field>
        <method signal_vm="element_added"/>
        <method signal_vm="element_removed"/>
        <method vm="add_element"/>
        <method vm="remove_element"/>
        <method vm="handle_message"/>
        <method signal_vm="do_latency"/>
        <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
      </class_struct>
      <method name="GetType" cname="gst_bin_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gst_bin_new">
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </constructor>
      <virtual_method name="AddElement" cname="add_element">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="element" type="GstElement*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="HandleMessage" cname="handle_message">
        <return-type type="void"/>
        <parameters>
          <parameter name="message" type="GstMessage*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="RemoveElement" cname="remove_element">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="element" type="GstElement*"/>
        </parameters>
      </virtual_method>
      <method name="Add" cname="gst_bin_add">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="element" type="GstElement*" owned="true"/>
        </parameters>
      </method>
      <method name="FindUnlinkedPad" cname="gst_bin_find_unlinked_pad">
        <return-type type="GstPad*" owned="true"/>
        <parameters>
          <parameter name="direction" type="GstPadDirection"/>
        </parameters>
      </method>
      <method name="GetByInterface" cname="gst_bin_get_by_interface">
        <return-type type="GstElement*" owned="true"/>
        <parameters>
          <parameter name="iface" type="GType"/>
        </parameters>
      </method>
      <method name="GetByName" cname="gst_bin_get_by_name">
        <return-type type="GstElement*" owned="true"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetByNameRecurseUp" cname="gst_bin_get_by_name_recurse_up">
        <return-type type="GstElement*" owned="true"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="IterateAllByInterface" cname="gst_bin_iterate_all_by_interface">
        <return-type type="GstIterator*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="iface" type="GType"/>
        </parameters>
      </method>
      <method name="IterateElements" cname="gst_bin_iterate_elements">
        <return-type type="GstIterator*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="IterateRecurse" cname="gst_bin_iterate_recurse">
        <return-type type="GstIterator*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="IterateSinks" cname="gst_bin_iterate_sinks">
        <return-type type="GstIterator*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="IterateSorted" cname="gst_bin_iterate_sorted">
        <return-type type="GstIterator*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="IterateSources" cname="gst_bin_iterate_sources">
        <return-type type="GstIterator*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="RecalculateLatency" cname="gst_bin_recalculate_latency">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="Remove" cname="gst_bin_remove">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="element" type="GstElement*"/>
        </parameters>
      </method>
      <property name="AsyncHandling" cname="async-handling" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="MessageForward" cname="message-forward" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="element" access="public" writeable="false" readable="true" name="Element" type="GstElement*"/>
      <field cname="numchildren" access="public" writeable="false" readable="true" name="Numchildren" type="gint"/>
      <field cname="children" access="public" writeable="false" readable="true" name="Children" type="GList*" element_type="GstElement*"/>
      <field cname="children_cookie" access="public" writeable="false" readable="true" name="ChildrenCookie" type="guint32"/>
      <field cname="child_bus" access="public" writeable="false" readable="true" name="ChildBus" type="GstBus*"/>
      <field cname="messages" access="public" writeable="false" readable="true" name="Messages" type="GList*" element_type="GList*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="polling" access="public" writeable="false" readable="true" name="Polling" type="gboolean"/>
      <field cname="state_dirty" access="public" writeable="false" readable="true" name="StateDirty" type="gboolean"/>
      <field cname="clock_dirty" access="public" writeable="false" readable="true" name="ClockDirty" type="gboolean"/>
      <field cname="provided_clock" access="public" writeable="false" readable="true" name="ProvidedClock" type="GstClock*"/>
      <field cname="clock_provider" access="public" writeable="false" readable="true" name="ClockProvider" type="GstElement*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GstBinPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
      <signal name="DoLatency" cname="do-latency" when="last" field_name="do_latency">
        <return-type type="gboolean"/>
        <parameters/>
      </signal>
      <signal name="ElementAdded" cname="element-added" when="first" field_name="element_added">
        <return-type type="void"/>
        <parameters>
          <parameter name="element" type="GstElement*"/>
        </parameters>
      </signal>
      <signal name="ElementRemoved" cname="element-removed" when="first" field_name="element_removed">
        <return-type type="void"/>
        <parameters>
          <parameter name="element" type="GstElement*"/>
        </parameters>
      </signal>
    </object>
    <object name="BufferPool" cname="GstBufferPool" abstract="false" opaque="false" hidden="false" parent="GstObject">
      <class_struct cname="GstBufferPoolClass">
        <field cname="object_class" access="public" writeable="false" readable="true" name="ObjectClass" type="GstObjectClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="get_options"/>
        <method vm="set_config"/>
        <method vm="start"/>
        <method vm="stop"/>
        <method vm="acquire_buffer"/>
        <method vm="alloc_buffer"/>
        <method vm="reset_buffer"/>
        <method vm="release_buffer"/>
        <method vm="free_buffer"/>
        <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
      </class_struct>
      <method name="GetType" cname="gst_buffer_pool_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gst_buffer_pool_new" disable_void_ctor=""/>
      <method name="ConfigAddOption" cname="gst_buffer_pool_config_add_option" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="config" type="GstStructure*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="option" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="ConfigGetAllocator" cname="gst_buffer_pool_config_get_allocator" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="config" type="GstStructure*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="allocator" type="GstAllocator*"/>
          <parameter name="params" type="GstAllocationParams*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ConfigGetOption" cname="gst_buffer_pool_config_get_option" shared="true">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="config" type="GstStructure*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="index" type="guint"/>
        </parameters>
      </method>
      <method name="ConfigGetParams" cname="gst_buffer_pool_config_get_params" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="config" type="GstStructure*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter allow-none="1" name="caps" type="GstCaps**" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter allow-none="1" name="size" type="guint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="min_buffers" type="guint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="max_buffers" type="guint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ConfigHasOption" cname="gst_buffer_pool_config_has_option" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="config" type="GstStructure*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="option" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="ConfigNOptions" cname="gst_buffer_pool_config_n_options" shared="true">
        <return-type type="guint"/>
        <parameters>
          <parameter name="config" type="GstStructure*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ConfigSetAllocator" cname="gst_buffer_pool_config_set_allocator" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="config" type="GstStructure*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="allocator" type="GstAllocator*"/>
          <parameter name="params" type="GstAllocationParams*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ConfigSetParams" cname="gst_buffer_pool_config_set_params" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="config" type="GstStructure*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="caps" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="size" type="guint"/>
          <parameter name="min_buffers" type="guint"/>
          <parameter name="max_buffers" type="guint"/>
        </parameters>
      </method>
      <virtual_method name="AcquireBuffer" cname="acquire_buffer">
        <return-type type="GstFlowReturn"/>
        <parameters>
          <parameter name="buffer" type="GstBuffer**" owned="true" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter allow-none="1" name="params" type="GstBufferPoolAcquireParams*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="AllocBuffer" cname="alloc_buffer">
        <return-type type="GstFlowReturn"/>
        <parameters>
          <parameter name="buffer" type="GstBuffer**">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="params" type="GstBufferPoolAcquireParams*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="FreeBuffer" cname="free_buffer">
        <return-type type="void"/>
        <parameters>
          <parameter name="buffer" type="GstBuffer*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="GetOptions" cname="get_options">
        <return-type type="const-gchar**" array="true" null_term_array="true"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="ReleaseBuffer" cname="release_buffer">
        <return-type type="void"/>
        <parameters>
          <parameter name="buffer" type="GstBuffer*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="ResetBuffer" cname="reset_buffer">
        <return-type type="void"/>
        <parameters>
          <parameter name="buffer" type="GstBuffer*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="SetConfig" cname="set_config">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="config" type="GstStructure*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="Start" cname="start">
        <return-type type="gboolean"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="Stop" cname="stop">
        <return-type type="gboolean"/>
        <parameters/>
      </virtual_method>
      <method name="AcquireBuffer" cname="gst_buffer_pool_acquire_buffer">
        <return-type type="GstFlowReturn"/>
        <parameters>
          <parameter name="buffer" type="GstBuffer**" owned="true" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter allow-none="1" name="params" type="GstBufferPoolAcquireParams*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetConfig" cname="gst_buffer_pool_get_config">
        <return-type type="GstStructure*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetOptions" cname="gst_buffer_pool_get_options">
        <return-type type="const-gchar**" array="true" null_term_array="true"/>
        <parameters/>
      </method>
      <method name="HasOption" cname="gst_buffer_pool_has_option">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="option" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="IsActive" cname="gst_buffer_pool_is_active">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="ReleaseBuffer" cname="gst_buffer_pool_release_buffer">
        <return-type type="void"/>
        <parameters>
          <parameter name="buffer" type="GstBuffer*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetActive" cname="gst_buffer_pool_set_active">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="active" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetConfig" cname="gst_buffer_pool_set_config">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="config" type="GstStructure*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <field cname="object" access="public" writeable="false" readable="true" name="Object" type="GstObject*"/>
      <field cname="flushing" access="public" writeable="false" readable="true" name="Flushing" type="gint"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GstBufferPoolPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
    </object>
    <object name="Bus" cname="GstBus" abstract="false" opaque="false" hidden="false" parent="GstObject">
      <class_struct cname="GstBusClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GstObjectClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method signal_vm="message"/>
        <method signal_vm="sync_message"/>
        <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
      </class_struct>
      <method name="GetType" cname="gst_bus_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gst_bus_new" disable_void_ctor=""/>
      <method name="AddSignalWatch" cname="gst_bus_add_signal_watch">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="AddSignalWatchFull" cname="gst_bus_add_signal_watch_full">
        <return-type type="void"/>
        <parameters>
          <parameter name="priority" type="gint"/>
        </parameters>
      </method>
      <method name="AddWatchFull" cname="gst_bus_add_watch_full">
        <return-type type="guint"/>
        <parameters>
          <parameter name="priority" type="gint"/>
          <parameter closure="2" destroy="3" scope="notified" name="func" type="GstBusFunc"/>
          <parameter name="user_data" type="gpointer"/>
          <parameter scope="async" name="notify" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="AsyncSignalFunc" cname="gst_bus_async_signal_func">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="message" type="GstMessage*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="data" type="gpointer"/>
        </parameters>
      </method>
      <method name="CreateWatch" cname="gst_bus_create_watch">
        <return-type type="GSource*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="DisableSyncMessageEmission" cname="gst_bus_disable_sync_message_emission">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="EnableSyncMessageEmission" cname="gst_bus_enable_sync_message_emission">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="HavePending" cname="gst_bus_have_pending">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="Peek" cname="gst_bus_peek">
        <return-type type="GstMessage*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="Poll" cname="gst_bus_poll">
        <return-type type="GstMessage*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="events" type="GstMessageType"/>
          <parameter name="timeout" type="guint64"/>
        </parameters>
      </method>
      <method name="Pop" cname="gst_bus_pop">
        <return-type type="GstMessage*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="PopFiltered" cname="gst_bus_pop_filtered">
        <return-type type="GstMessage*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="types" type="GstMessageType"/>
        </parameters>
      </method>
      <method name="Post" cname="gst_bus_post">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="message" type="GstMessage*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="RemoveSignalWatch" cname="gst_bus_remove_signal_watch">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="SetFlushing" cname="gst_bus_set_flushing">
        <return-type type="void"/>
        <parameters>
          <parameter name="flushing" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetSyncHandler" cname="gst_bus_set_sync_handler">
        <return-type type="void"/>
        <parameters>
          <parameter closure="1" destroy="2" scope="notified" allow-none="1" name="func" type="GstBusSyncHandler"/>
          <parameter name="user_data" type="gpointer"/>
          <parameter scope="async" name="notify" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="SyncSignalHandler" cname="gst_bus_sync_signal_handler">
        <return-type type="GstBusSyncReply"/>
        <parameters>
          <parameter name="message" type="GstMessage*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="data" type="gpointer"/>
        </parameters>
      </method>
      <method name="TimedPop" cname="gst_bus_timed_pop">
        <return-type type="GstMessage*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="timeout" type="guint64"/>
        </parameters>
      </method>
      <method name="TimedPopFiltered" cname="gst_bus_timed_pop_filtered">
        <return-type type="GstMessage*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="timeout" type="guint64"/>
          <parameter name="types" type="GstMessageType"/>
        </parameters>
      </method>
      <property name="EnableAsync" cname="enable-async" type="gboolean" readable="false" writeable="true" construct="false" construct-only="true"/>
      <field cname="object" access="public" writeable="false" readable="true" name="Object" type="GstObject*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GstBusPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
      <signal name="Message" cname="message" when="last" field_name="message">
        <return-type type="void"/>
        <parameters>
          <parameter name="message" type="GstMessage*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </signal>
      <signal name="SyncMessage" cname="sync-message" when="last" field_name="sync_message">
        <return-type type="void"/>
        <parameters>
          <parameter name="message" type="GstMessage*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </signal>
    </object>
    <object name="Clock" cname="GstClock" abstract="true" opaque="false" hidden="false" parent="GstObject">
      <class_struct cname="GstClockClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GstObjectClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="change_resolution"/>
        <method vm="get_resolution"/>
        <method vm="get_internal_time"/>
        <method vm="wait"/>
        <method vm="wait_async"/>
        <method vm="unschedule"/>
        <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
      </class_struct>
      <method name="GetType" cname="gst_clock_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="IdCompareFunc" cname="gst_clock_id_compare_func" shared="true">
        <return-type type="gint"/>
        <parameters>
          <parameter name="id1" type="gpointer"/>
          <parameter name="id2" type="gpointer"/>
        </parameters>
      </method>
      <method name="IdGetTime" cname="gst_clock_id_get_time" shared="true">
        <return-type type="guint64"/>
        <parameters>
          <parameter name="id" type="gpointer"/>
        </parameters>
      </method>
      <method name="IdRef" cname="gst_clock_id_ref" shared="true">
        <return-type type="gpointer" owned="true"/>
        <parameters>
          <parameter name="id" type="gpointer"/>
        </parameters>
      </method>
      <method name="IdUnref" cname="gst_clock_id_unref" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="id" type="gpointer" owned="true"/>
        </parameters>
      </method>
      <method name="IdUnschedule" cname="gst_clock_id_unschedule" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="id" type="gpointer"/>
        </parameters>
      </method>
      <method name="IdWait" cname="gst_clock_id_wait" shared="true">
        <return-type type="GstClockReturn"/>
        <parameters>
          <parameter name="id" type="gpointer"/>
          <parameter allow-none="1" name="jitter" type="gint64" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="IdWaitAsync" cname="gst_clock_id_wait_async" shared="true">
        <return-type type="GstClockReturn"/>
        <parameters>
          <parameter name="id" type="gpointer"/>
          <parameter closure="2" destroy="3" scope="notified" name="func" type="GstClockCallback"/>
          <parameter name="user_data" type="gpointer"/>
          <parameter scope="async" name="destroy_data" type="GDestroyNotify"/>
        </parameters>
      </method>
      <virtual_method name="ChangeResolution" cname="change_resolution">
        <return-type type="guint64"/>
        <parameters>
          <parameter name="old_resolution" type="guint64"/>
          <parameter name="new_resolution" type="guint64"/>
        </parameters>
      </virtual_method>
      <virtual_method name="GetInternalTime" cname="get_internal_time">
        <return-type type="guint64"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="GetResolution" cname="get_resolution">
        <return-type type="guint64"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="Unschedule" cname="unschedule">
        <return-type type="void"/>
        <parameters>
          <parameter name="entry" type="GstClockEntry*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="Wait" cname="wait">
        <return-type type="GstClockReturn"/>
        <parameters>
          <parameter name="entry" type="GstClockEntry*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="jitter" type="gint64"/>
        </parameters>
      </virtual_method>
      <virtual_method name="WaitAsync" cname="wait_async">
        <return-type type="GstClockReturn"/>
        <parameters>
          <parameter name="entry" type="GstClockEntry*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <method name="AddObservation" cname="gst_clock_add_observation">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="slave" type="guint64"/>
          <parameter name="master" type="guint64"/>
          <parameter name="r_squared" type="gdouble*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="AdjustUnlocked" cname="gst_clock_adjust_unlocked">
        <return-type type="guint64"/>
        <parameters>
          <parameter name="internal" type="guint64"/>
        </parameters>
      </method>
      <method name="GetCalibration" cname="gst_clock_get_calibration">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="internal" type="guint64" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="external" type="guint64" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="rate_num" type="guint64" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="rate_denom" type="guint64" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetInternalTime" cname="gst_clock_get_internal_time">
        <return-type type="guint64"/>
        <parameters/>
      </method>
      <method name="GetMaster" cname="gst_clock_get_master">
        <return-type type="GstClock*" owned="true"/>
        <parameters/>
      </method>
      <method name="GetResolution" cname="gst_clock_get_resolution">
        <return-type type="guint64"/>
        <parameters/>
      </method>
      <method name="GetTime" cname="gst_clock_get_time">
        <return-type type="guint64"/>
        <parameters/>
      </method>
      <method name="GetTimeout" cname="gst_clock_get_timeout">
        <return-type type="guint64"/>
        <parameters/>
      </method>
      <method name="NewPeriodicId" cname="gst_clock_new_periodic_id">
        <return-type type="gpointer" owned="true"/>
        <parameters>
          <parameter name="start_time" type="guint64"/>
          <parameter name="interval" type="guint64"/>
        </parameters>
      </method>
      <method name="NewSingleShotId" cname="gst_clock_new_single_shot_id">
        <return-type type="gpointer" owned="true"/>
        <parameters>
          <parameter name="time" type="guint64"/>
        </parameters>
      </method>
      <method name="PeriodicIdReinit" cname="gst_clock_periodic_id_reinit">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="id" type="gpointer"/>
          <parameter name="start_time" type="guint64"/>
          <parameter name="interval" type="guint64"/>
        </parameters>
      </method>
      <method name="SetCalibration" cname="gst_clock_set_calibration">
        <return-type type="void"/>
        <parameters>
          <parameter name="internal" type="guint64"/>
          <parameter name="external" type="guint64"/>
          <parameter name="rate_num" type="guint64"/>
          <parameter name="rate_denom" type="guint64"/>
        </parameters>
      </method>
      <method name="SetMaster" cname="gst_clock_set_master">
        <return-type type="gboolean"/>
        <parameters>
          <parameter allow-none="1" name="master" type="GstClock*"/>
        </parameters>
      </method>
      <method name="SetResolution" cname="gst_clock_set_resolution">
        <return-type type="guint64"/>
        <parameters>
          <parameter name="resolution" type="guint64"/>
        </parameters>
      </method>
      <method name="SetTimeout" cname="gst_clock_set_timeout">
        <return-type type="void"/>
        <parameters>
          <parameter name="timeout" type="guint64"/>
        </parameters>
      </method>
      <method name="SingleShotIdReinit" cname="gst_clock_single_shot_id_reinit">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="id" type="gpointer"/>
          <parameter name="time" type="guint64"/>
        </parameters>
      </method>
      <method name="UnadjustUnlocked" cname="gst_clock_unadjust_unlocked">
        <return-type type="guint64"/>
        <parameters>
          <parameter name="external" type="guint64"/>
        </parameters>
      </method>
      <property name="Timeout" cname="timeout" type="guint64" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="WindowSize" cname="window-size" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="WindowThreshold" cname="window-threshold" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="object" access="public" writeable="false" readable="true" name="Object" type="GstObject*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GstClockPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
    </object>
    <object name="ControlBinding" cname="GstControlBinding" abstract="true" opaque="false" hidden="false" parent="GstObject">
      <class_struct cname="GstControlBindingClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GstObjectClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="sync_values"/>
        <method vm="get_value"/>
        <method vm="get_value_array"/>
        <method vm="get_g_value_array"/>
        <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
      </class_struct>
      <method name="GetType" cname="gst_control_binding_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <virtual_method name="GetGValueArray" cname="get_g_value_array">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="timestamp" type="guint64"/>
          <parameter name="interval" type="guint64"/>
          <parameter name="n_values" type="guint"/>
          <parameter name="values" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="GetValue" cname="get_value">
        <return-type type="GValue*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="timestamp" type="guint64"/>
        </parameters>
      </virtual_method>
      <virtual_method name="GetValueArray" cname="get_value_array">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="timestamp" type="guint64"/>
          <parameter name="interval" type="guint64"/>
          <parameter name="n_values" type="guint"/>
          <parameter name="values" type="gpointer"/>
        </parameters>
      </virtual_method>
      <virtual_method name="SyncValues" cname="sync_values">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="_object" type="GstObject*"/>
          <parameter name="timestamp" type="guint64"/>
          <parameter name="last_sync" type="guint64"/>
        </parameters>
      </virtual_method>
      <method name="GetGValueArray" cname="gst_control_binding_get_g_value_array">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="timestamp" type="guint64"/>
          <parameter name="interval" type="guint64"/>
          <parameter name="n_values" type="guint"/>
          <parameter name="values" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetValue" cname="gst_control_binding_get_value">
        <return-type type="GValue*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="timestamp" type="guint64"/>
        </parameters>
      </method>
      <method name="GetValueArray" cname="gst_control_binding_get_value_array">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="timestamp" type="guint64"/>
          <parameter name="interval" type="guint64"/>
          <parameter name="n_values" type="guint"/>
          <parameter name="values" type="gpointer"/>
        </parameters>
      </method>
      <method name="IsDisabled" cname="gst_control_binding_is_disabled">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="SetDisabled" cname="gst_control_binding_set_disabled">
        <return-type type="void"/>
        <parameters>
          <parameter name="disabled" type="gboolean"/>
        </parameters>
      </method>
      <method name="SyncValues" cname="gst_control_binding_sync_values">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="_object" type="GstObject*"/>
          <parameter name="timestamp" type="guint64"/>
          <parameter name="last_sync" type="guint64"/>
        </parameters>
      </method>
      <property name="Name" cname="name" type="gchar*" readable="true" writeable="true" construct="false" construct-only="true"/>
      <property name="Object" cname="object" type="GstObject*" readable="true" writeable="true" construct="false" construct-only="true"/>
      <field cname="parent" access="public" writeable="false" readable="true" name="Parent" type="GstObject*"/>
      <field cname="name" access="public" writeable="false" readable="true" name="NameField" type="gchar*"/>
      <field cname="pspec" access="public" writeable="false" readable="true" name="Pspec" type="GParamSpec*"/>
      <field cname="object" access="private" writeable="false" readable="false" name="ObjectField" type="GstObject*"/>
      <field cname="disabled" access="private" writeable="false" readable="false" name="Disabled" type="gboolean"/>
      <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
    </object>
    <object name="ControlSource" cname="GstControlSource" abstract="true" opaque="false" hidden="false" parent="GstObject">
      <class_struct cname="GstControlSourceClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GstObjectClass">
          <warning>missing glib:type-name</warning>
        </field>
        <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
      </class_struct>
      <method name="GetType" cname="gst_control_source_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="GetValue" cname="gst_control_source_get_value">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="timestamp" type="guint64"/>
          <parameter name="value" type="gdouble"/>
        </parameters>
      </method>
      <method name="GetValueArray" cname="gst_control_source_get_value_array">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="timestamp" type="guint64"/>
          <parameter name="interval" type="guint64"/>
          <parameter name="n_values" type="guint"/>
          <parameter name="values" type="gdouble"/>
        </parameters>
      </method>
      <field cname="parent" access="public" writeable="false" readable="true" name="Parent" type="GstObject*"/>
      <field cname="get_value" access="public" writeable="false" readable="true" name="GetValueFunc" type="GstControlSourceGetValue"/>
      <field cname="get_value_array" access="public" writeable="false" readable="true" name="GetValueArrayFunc" type="GstControlSourceGetValueArray"/>
      <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
    </object>
    <object name="Element" cname="GstElement" abstract="true" opaque="false" hidden="false" parent="GstObject">
      <class_struct cname="GstElementClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GstObjectClass">
          <warning>missing glib:type-name</warning>
        </field>
        <field cname="metadata" access="public" writeable="false" readable="true" name="Metadata" type="gpointer"/>
        <field cname="elementfactory" access="public" writeable="false" readable="true" name="Elementfactory" type="GstElementFactory*"/>
        <field cname="padtemplates" access="public" writeable="false" readable="true" name="Padtemplates" type="GList*" element_type="gpointer"/>
        <field cname="numpadtemplates" access="public" writeable="false" readable="true" name="Numpadtemplates" type="gint"/>
        <field cname="pad_templ_cookie" access="public" writeable="false" readable="true" name="PadTemplCookie" type="guint32"/>
        <method signal_vm="pad_added"/>
        <method signal_vm="pad_removed"/>
        <method signal_vm="no_more_pads"/>
        <method vm="request_new_pad"/>
        <method vm="release_pad"/>
        <method vm="get_state"/>
        <method vm="set_state"/>
        <method vm="change_state"/>
        <method vm="state_changed"/>
        <method vm="set_bus"/>
        <method vm="provide_clock"/>
        <method vm="set_clock"/>
        <method vm="send_event"/>
        <method vm="query"/>
        <method vm="post_message"/>
        <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="19"/>
      </class_struct>
      <method name="AddMetadata" cname="gst_element_class_add_metadata" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="key" type="const-gchar*"/>
          <parameter name="value" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="AddPadTemplate" cname="gst_element_class_add_pad_template" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="templ" type="GstPadTemplate*" owned="true"/>
        </parameters>
      </method>
      <method name="AddStaticMetadata" cname="gst_element_class_add_static_metadata" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="key" type="const-gchar*"/>
          <parameter name="value" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetMetadata" cname="gst_element_class_get_metadata" shared="true">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="key" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetPadTemplate" cname="gst_element_class_get_pad_template" shared="true">
        <return-type type="GstPadTemplate*"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetPadTemplateList" cname="gst_element_class_get_pad_template_list" shared="true">
        <return-type type="GList*" element_type="GstPadTemplate*"/>
        <parameters/>
      </method>
      <method name="SetMetadata" cname="gst_element_class_set_metadata" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="longname" type="const-gchar*"/>
          <parameter name="classification" type="const-gchar*"/>
          <parameter name="description" type="const-gchar*"/>
          <parameter name="author" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetStaticMetadata" cname="gst_element_class_set_static_metadata" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="longname" type="const-gchar*"/>
          <parameter name="classification" type="const-gchar*"/>
          <parameter name="description" type="const-gchar*"/>
          <parameter name="author" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetType" cname="gst_element_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="MakeFromUri" cname="gst_element_make_from_uri" shared="true">
        <return-type type="GstElement*"/>
        <parameters throws="1">
          <parameter name="type" type="GstURIType"/>
          <parameter name="uri" type="const-gchar*"/>
          <parameter allow-none="1" name="elementname" type="const-gchar*"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="Register" cname="gst_element_register" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter allow-none="1" name="plugin" type="GstPlugin*"/>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="rank" type="guint"/>
          <parameter name="type" type="GType"/>
        </parameters>
      </method>
      <method name="StateChangeReturnGetName" cname="gst_element_state_change_return_get_name" shared="true">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="state_ret" type="GstStateChangeReturn"/>
        </parameters>
      </method>
      <method name="StateGetName" cname="gst_element_state_get_name" shared="true">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="state" type="GstState"/>
        </parameters>
      </method>
      <virtual_method name="ChangeState" cname="change_state">
        <return-type type="GstStateChangeReturn"/>
        <parameters>
          <parameter name="transition" type="GstStateChange"/>
        </parameters>
      </virtual_method>
      <virtual_method name="GetState" cname="get_state">
        <return-type type="GstStateChangeReturn"/>
        <parameters>
          <parameter allow-none="1" name="state" type="GstState" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="pending" type="GstState" owned="true" pass_as="out"/>
          <parameter name="timeout" type="guint64"/>
        </parameters>
      </virtual_method>
      <virtual_method name="PostMessage" cname="post_message">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="message" type="GstMessage*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="ProvideClock" cname="provide_clock">
        <return-type type="GstClock*" owned="true"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="Query" cname="query">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="query" type="GstQuery*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="ReleasePad" cname="release_pad">
        <return-type type="void"/>
        <parameters>
          <parameter name="pad" type="GstPad*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="RequestNewPad" cname="request_new_pad" hidden="true">
        <return-type type="GstPad*"/>
        <parameters>
          <parameter name="templ" type="GstPadTemplate*"/>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="caps" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="SendEvent" cname="send_event">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="event" type="GstEvent*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="SetBus" cname="set_bus">
        <return-type type="void"/>
        <parameters>
          <parameter name="bus" type="GstBus*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="SetClock" cname="set_clock">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="clock" type="GstClock*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="SetState" cname="set_state">
        <return-type type="GstStateChangeReturn"/>
        <parameters>
          <parameter name="state" type="GstState"/>
        </parameters>
      </virtual_method>
      <virtual_method name="StateChanged" cname="state_changed">
        <return-type type="void"/>
        <parameters>
          <parameter name="oldstate" type="GstState"/>
          <parameter name="newstate" type="GstState"/>
          <parameter name="pending" type="GstState"/>
        </parameters>
      </virtual_method>
      <method name="AbortState" cname="gst_element_abort_state">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="AddPad" cname="gst_element_add_pad">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="pad" type="GstPad*" owned="true"/>
        </parameters>
      </method>
      <method name="ChangeState" cname="gst_element_change_state">
        <return-type type="GstStateChangeReturn"/>
        <parameters>
          <parameter name="transition" type="GstStateChange"/>
        </parameters>
      </method>
      <method name="ContinueState" cname="gst_element_continue_state">
        <return-type type="GstStateChangeReturn"/>
        <parameters>
          <parameter name="_ret" type="GstStateChangeReturn"/>
        </parameters>
      </method>
      <method name="CreateAllPads" cname="gst_element_create_all_pads">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="GetBaseTime" cname="gst_element_get_base_time">
        <return-type type="guint64"/>
        <parameters/>
      </method>
      <method name="GetBus" cname="gst_element_get_bus">
        <return-type type="GstBus*" owned="true"/>
        <parameters/>
      </method>
      <method name="GetClock" cname="gst_element_get_clock">
        <return-type type="GstClock*" owned="true"/>
        <parameters/>
      </method>
      <method name="GetCompatiblePad" cname="gst_element_get_compatible_pad">
        <return-type type="GstPad*" owned="true"/>
        <parameters>
          <parameter name="pad" type="GstPad*"/>
          <parameter allow-none="1" name="caps" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetCompatiblePadTemplate" cname="gst_element_get_compatible_pad_template">
        <return-type type="GstPadTemplate*"/>
        <parameters>
          <parameter name="compattempl" type="GstPadTemplate*"/>
        </parameters>
      </method>
      <method name="GetFactory" cname="gst_element_get_factory">
        <return-type type="GstElementFactory*"/>
        <parameters/>
      </method>
      <method name="GetRequestPad" cname="gst_element_get_request_pad">
        <return-type type="GstPad*" owned="true"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetStartTime" cname="gst_element_get_start_time">
        <return-type type="guint64"/>
        <parameters/>
      </method>
      <method name="GetState" cname="gst_element_get_state">
        <return-type type="GstStateChangeReturn"/>
        <parameters>
          <parameter allow-none="1" name="state" type="GstState" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="pending" type="GstState" owned="true" pass_as="out"/>
          <parameter name="timeout" type="guint64"/>
        </parameters>
      </method>
      <method name="GetStaticPad" cname="gst_element_get_static_pad">
        <return-type type="GstPad*" owned="true"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="IsLockedState" cname="gst_element_is_locked_state">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="IteratePads" cname="gst_element_iterate_pads">
        <return-type type="GstIterator*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="IterateSinkPads" cname="gst_element_iterate_sink_pads">
        <return-type type="GstIterator*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="IterateSrcPads" cname="gst_element_iterate_src_pads">
        <return-type type="GstIterator*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="Link" cname="gst_element_link">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="dest" type="GstElement*"/>
        </parameters>
      </method>
      <method name="LinkFiltered" cname="gst_element_link_filtered">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="dest" type="GstElement*"/>
          <parameter allow-none="1" name="filter" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="LinkPads" cname="gst_element_link_pads">
        <return-type type="gboolean"/>
        <parameters>
          <parameter allow-none="1" name="srcpadname" type="const-gchar*"/>
          <parameter name="dest" type="GstElement*"/>
          <parameter allow-none="1" name="destpadname" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="LinkPadsFiltered" cname="gst_element_link_pads_filtered">
        <return-type type="gboolean"/>
        <parameters>
          <parameter allow-none="1" name="srcpadname" type="const-gchar*"/>
          <parameter name="dest" type="GstElement*"/>
          <parameter allow-none="1" name="destpadname" type="const-gchar*"/>
          <parameter allow-none="1" name="filter" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="LinkPadsFull" cname="gst_element_link_pads_full">
        <return-type type="gboolean"/>
        <parameters>
          <parameter allow-none="1" name="srcpadname" type="const-gchar*"/>
          <parameter name="dest" type="GstElement*"/>
          <parameter allow-none="1" name="destpadname" type="const-gchar*"/>
          <parameter name="flags" type="GstPadLinkCheck"/>
        </parameters>
      </method>
      <method name="LostState" cname="gst_element_lost_state">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="MessageFull" cname="gst_element_message_full">
        <return-type type="void"/>
        <parameters>
          <parameter name="type" type="GstMessageType"/>
          <parameter name="domain" type="guint32"/>
          <parameter name="code" type="gint"/>
          <parameter allow-none="1" name="text" type="gchar*" owned="true"/>
          <parameter allow-none="1" name="debug" type="gchar*" owned="true"/>
          <parameter name="file" type="const-gchar*"/>
          <parameter name="function" type="const-gchar*"/>
          <parameter name="line" type="gint"/>
        </parameters>
      </method>
      <method name="PostMessage" cname="gst_element_post_message">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="message" type="GstMessage*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ProvideClock" cname="gst_element_provide_clock">
        <return-type type="GstClock*" owned="true"/>
        <parameters/>
      </method>
      <method name="Query" cname="gst_element_query">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="query" type="GstQuery*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="QueryConvert" cname="gst_element_query_convert">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="src_format" type="GstFormat" owned="true" pass_as="ref"/>
          <parameter name="src_val" type="gint64"/>
          <parameter name="dest_format" type="GstFormat"/>
          <parameter name="dest_val" type="gint64*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="QueryDuration" cname="gst_element_query_duration">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="format" type="GstFormat"/>
          <parameter name="duration" type="gint64*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="QueryPosition" cname="gst_element_query_position">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="format" type="GstFormat"/>
          <parameter allow-none="1" name="cur" type="gint64*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ReleaseRequestPad" cname="gst_element_release_request_pad">
        <return-type type="void"/>
        <parameters>
          <parameter name="pad" type="GstPad*"/>
        </parameters>
      </method>
      <method name="RemovePad" cname="gst_element_remove_pad">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="pad" type="GstPad*" owned="true"/>
        </parameters>
      </method>
      <method name="RequestPad" cname="gst_element_request_pad">
        <return-type type="GstPad*" owned="true"/>
        <parameters>
          <parameter name="templ" type="GstPadTemplate*"/>
          <parameter allow-none="1" name="name" type="const-gchar*"/>
          <parameter allow-none="1" name="caps" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Seek" cname="gst_element_seek">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="rate" type="gdouble"/>
          <parameter name="format" type="GstFormat"/>
          <parameter name="flags" type="GstSeekFlags"/>
          <parameter name="start_type" type="GstSeekType"/>
          <parameter name="start" type="gint64"/>
          <parameter name="stop_type" type="GstSeekType"/>
          <parameter name="stop" type="gint64"/>
        </parameters>
      </method>
      <method name="SeekSimple" cname="gst_element_seek_simple">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="format" type="GstFormat"/>
          <parameter name="seek_flags" type="GstSeekFlags"/>
          <parameter name="seek_pos" type="gint64"/>
        </parameters>
      </method>
      <method name="SendEvent" cname="gst_element_send_event">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="event" type="GstEvent*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetBaseTime" cname="gst_element_set_base_time">
        <return-type type="void"/>
        <parameters>
          <parameter name="time" type="guint64"/>
        </parameters>
      </method>
      <method name="SetBus" cname="gst_element_set_bus">
        <return-type type="void"/>
        <parameters>
          <parameter name="bus" type="GstBus*"/>
        </parameters>
      </method>
      <method name="SetClock" cname="gst_element_set_clock">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="clock" type="GstClock*"/>
        </parameters>
      </method>
      <method name="SetLockedState" cname="gst_element_set_locked_state">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="locked_state" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetStartTime" cname="gst_element_set_start_time">
        <return-type type="void"/>
        <parameters>
          <parameter name="time" type="guint64"/>
        </parameters>
      </method>
      <method name="SetState" cname="gst_element_set_state">
        <return-type type="GstStateChangeReturn"/>
        <parameters>
          <parameter name="state" type="GstState"/>
        </parameters>
      </method>
      <method name="SyncStateWithParent" cname="gst_element_sync_state_with_parent">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="Unlink" cname="gst_element_unlink">
        <return-type type="void"/>
        <parameters>
          <parameter name="dest" type="GstElement*"/>
        </parameters>
      </method>
      <method name="UnlinkPads" cname="gst_element_unlink_pads">
        <return-type type="void"/>
        <parameters>
          <parameter name="srcpadname" type="const-gchar*"/>
          <parameter name="dest" type="GstElement*"/>
          <parameter name="destpadname" type="const-gchar*"/>
        </parameters>
      </method>
      <field cname="object" access="public" writeable="false" readable="true" name="Object" type="GstObject*"/>
      <field cname="state_lock" access="public" writeable="false" readable="true" name="StateLock" type="GRecMutex">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="state_cond" access="public" writeable="false" readable="true" name="StateCond" type="GCond">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="state_cookie" access="public" writeable="false" readable="true" name="StateCookie" type="guint32"/>
      <field cname="target_state" access="public" writeable="false" readable="true" name="TargetState" type="GstState"/>
      <field cname="current_state" access="public" writeable="false" readable="true" name="CurrentState" type="GstState"/>
      <field cname="next_state" access="public" writeable="false" readable="true" name="NextState" type="GstState"/>
      <field cname="pending_state" access="public" writeable="false" readable="true" name="PendingState" type="GstState"/>
      <field cname="last_return" access="public" writeable="false" readable="true" name="LastReturn" type="GstStateChangeReturn"/>
      <field cname="bus" access="public" writeable="false" readable="true" name="Bus" type="GstBus*"/>
      <field cname="clock" access="public" writeable="false" readable="true" name="Clock" type="GstClock*"/>
      <field cname="base_time" access="public" writeable="false" readable="true" name="BaseTime" type="gint64"/>
      <field cname="start_time" access="public" writeable="false" readable="true" name="StartTime" type="guint64"/>
      <field cname="numpads" access="public" writeable="false" readable="true" name="Numpads" type="guint16"/>
      <field cname="pads" access="public" writeable="false" readable="true" name="Pads" type="GList*" element_type="GstPad*"/>
      <field cname="numsrcpads" access="public" writeable="false" readable="true" name="Numsrcpads" type="guint16"/>
      <field cname="srcpads" access="public" writeable="false" readable="true" name="Srcpads" type="GList*" element_type="GstPad*"/>
      <field cname="numsinkpads" access="public" writeable="false" readable="true" name="Numsinkpads" type="guint16"/>
      <field cname="sinkpads" access="public" writeable="false" readable="true" name="Sinkpads" type="GList*" element_type="GstPad*"/>
      <field cname="pads_cookie" access="public" writeable="false" readable="true" name="PadsCookie" type="guint32"/>
      <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
      <signal name="NoMorePads" cname="no-more-pads" when="last" field_name="no_more_pads">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="PadAdded" cname="pad-added" when="last" field_name="pad_added">
        <return-type type="void"/>
        <parameters>
          <parameter name="new_pad" type="GstPad*"/>
        </parameters>
      </signal>
      <signal name="PadRemoved" cname="pad-removed" when="last" field_name="pad_removed">
        <return-type type="void"/>
        <parameters>
          <parameter name="old_pad" type="GstPad*"/>
        </parameters>
      </signal>
    </object>
    <object name="ElementFactory" cname="GstElementFactory" abstract="false" opaque="false" hidden="false" parent="GstPluginFeature">
      <class_struct cname="GstElementFactoryClass"/>
      <method name="GetType" cname="gst_element_factory_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="Find" cname="gst_element_factory_find" shared="true">
        <return-type type="GstElementFactory*" owned="true"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="ListFilter" cname="gst_element_factory_list_filter" shared="true">
        <return-type type="GList*" element_type="GstElementFactory*" elements_owned="true" owned="true"/>
        <parameters>
          <parameter name="list" type="GList*" element_type="GstElementFactory*"/>
          <parameter name="caps" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="direction" type="GstPadDirection"/>
          <parameter name="subsetonly" type="gboolean"/>
        </parameters>
      </method>
      <method name="ListGetElements" cname="gst_element_factory_list_get_elements" shared="true">
        <return-type type="GList*" element_type="GstElementFactory*" elements_owned="true" owned="true"/>
        <parameters>
          <parameter name="type" type="guint64"/>
          <parameter name="minrank" type="GstRank"/>
        </parameters>
      </method>
      <method name="Make" cname="gst_element_factory_make" shared="true">
        <return-type type="GstElement*"/>
        <parameters>
          <parameter name="factoryname" type="const-gchar*"/>
          <parameter allow-none="1" name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="CanSinkAllCaps" cname="gst_element_factory_can_sink_all_caps">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="caps" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="CanSinkAnyCaps" cname="gst_element_factory_can_sink_any_caps">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="caps" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="CanSrcAllCaps" cname="gst_element_factory_can_src_all_caps">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="caps" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="CanSrcAnyCaps" cname="gst_element_factory_can_src_any_caps">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="caps" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Create" cname="gst_element_factory_create">
        <return-type type="GstElement*"/>
        <parameters>
          <parameter allow-none="1" name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetElementType" cname="gst_element_factory_get_element_type">
        <return-type type="GType"/>
        <parameters/>
      </method>
      <method name="GetMetadata" cname="gst_element_factory_get_metadata">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="key" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetMetadataKeys" cname="gst_element_factory_get_metadata_keys">
        <return-type type="gchar***" owned="true" array="true" null_term_array="true"/>
        <parameters/>
      </method>
      <method name="GetNumPadTemplates" cname="gst_element_factory_get_num_pad_templates">
        <return-type type="guint"/>
        <parameters/>
      </method>
      <method name="GetStaticPadTemplates" cname="gst_element_factory_get_static_pad_templates">
        <return-type type="const GList*" element_type="GList*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetUriProtocols" cname="gst_element_factory_get_uri_protocols">
        <return-type type="const-gchar**" array="true" null_term_array="true"/>
        <parameters/>
      </method>
      <method name="GetUriType" cname="gst_element_factory_get_uri_type">
        <return-type type="GstURIType"/>
        <parameters/>
      </method>
      <method name="HasInterface" cname="gst_element_factory_has_interface">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="interfacename" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="ListIsType" cname="gst_element_factory_list_is_type">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="type" type="guint64"/>
        </parameters>
      </method>
    </object>
    <object name="GhostPad" cname="GstGhostPad" abstract="false" opaque="false" hidden="false" parent="GstProxyPad">
      <class_struct cname="GstGhostPadClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GstProxyPadClass">
          <warning>missing glib:type-name</warning>
        </field>
        <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
      </class_struct>
      <method name="GetType" cname="gst_ghost_pad_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gst_ghost_pad_new">
        <parameters>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="target" type="GstPad*"/>
        </parameters>
      </constructor>
      <constructor cname="gst_ghost_pad_new_from_template">
        <parameters>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="target" type="GstPad*"/>
          <parameter name="templ" type="GstPadTemplate*"/>
        </parameters>
      </constructor>
      <constructor cname="gst_ghost_pad_new_no_target">
        <parameters>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="dir" type="GstPadDirection"/>
        </parameters>
      </constructor>
      <constructor cname="gst_ghost_pad_new_no_target_from_template">
        <parameters>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="templ" type="GstPadTemplate*"/>
        </parameters>
      </constructor>
      <method name="ActivateModeDefault" cname="gst_ghost_pad_activate_mode_default" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="pad" type="GstPad*"/>
          <parameter name="parent" type="GstObject*"/>
          <parameter name="mode" type="GstPadMode"/>
          <parameter name="active" type="gboolean"/>
        </parameters>
      </method>
      <method name="InternalActivateModeDefault" cname="gst_ghost_pad_internal_activate_mode_default" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="pad" type="GstPad*"/>
          <parameter name="parent" type="GstObject*"/>
          <parameter name="mode" type="GstPadMode"/>
          <parameter name="active" type="gboolean"/>
        </parameters>
      </method>
      <method name="Construct" cname="gst_ghost_pad_construct">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetTarget" cname="gst_ghost_pad_get_target">
        <return-type type="GstPad*" owned="true"/>
        <parameters/>
      </method>
      <method name="SetTarget" cname="gst_ghost_pad_set_target">
        <return-type type="gboolean*" owned="true"/>
        <parameters>
          <parameter allow-none="1" name="newtarget" type="GstPad*"/>
        </parameters>
      </method>
      <field cname="pad" access="public" writeable="false" readable="true" name="Pad" type="GstProxyPad*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GstGhostPadPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="Object" cname="GstObject" abstract="true" opaque="false" hidden="false" parent="GInitiallyUnowned">
      <class_struct cname="GstObjectClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GInitiallyUnownedClass">
          <warning>missing glib:type-name</warning>
        </field>
        <field cname="path_string_separator" access="public" writeable="false" readable="true" name="PathStringSeparator" type="gchar*"/>
        <method signal_vm="deep_notify"/>
        <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
      </class_struct>
      <method name="GetType" cname="gst_object_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="CheckUniqueness" cname="gst_object_check_uniqueness" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="list" type="GList*" element_type="GstObject*"/>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="DefaultDeepNotify" cname="gst_object_default_deep_notify" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="_object" type="GObject*"/>
          <parameter name="orig" type="GstObject*"/>
          <parameter name="pspec" type="GParamSpec*"/>
          <parameter allow-none="1" name="excluded_props" type="const-gchar**" array="true" null_term_array="true"/>
        </parameters>
      </method>
      <method name="Replace" cname="gst_object_replace" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="oldobj" type="GstObject*" owned="true" pass_as="ref"/>
          <parameter name="newobj" type="GstObject*"/>
        </parameters>
      </method>
      <method name="AddControlBinding" cname="gst_object_add_control_binding">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="binding" type="GstControlBinding*" owned="true"/>
        </parameters>
      </method>
      <method name="DefaultError" cname="gst_object_default_error">
        <return-type type="void"/>
        <parameters>
          <parameter name="error" type="GError*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter allow-none="1" name="debug" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetControlBinding" cname="gst_object_get_control_binding">
        <return-type type="GstControlBinding*" owned="true"/>
        <parameters>
          <parameter name="property_name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetControlRate" cname="gst_object_get_control_rate">
        <return-type type="guint64"/>
        <parameters/>
      </method>
      <method name="GetGValueArray" cname="gst_object_get_g_value_array">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="property_name" type="const-gchar*"/>
          <parameter name="timestamp" type="guint64"/>
          <parameter name="interval" type="guint64"/>
          <parameter name="n_values" type="guint"/>
          <parameter name="values" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetName" cname="gst_object_get_name">
        <return-type type="gchar*" owned="true"/>
        <parameters/>
      </method>
      <method name="GetParent" cname="gst_object_get_parent">
        <return-type type="GstObject*" owned="true"/>
        <parameters/>
      </method>
      <method name="GetPathString" cname="gst_object_get_path_string">
        <return-type type="gchar*" owned="true"/>
        <parameters/>
      </method>
      <method name="GetValue" cname="gst_object_get_value">
        <return-type type="GValue*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="property_name" type="const-gchar*"/>
          <parameter name="timestamp" type="guint64"/>
        </parameters>
      </method>
      <method name="GetValueArray" cname="gst_object_get_value_array">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="property_name" type="const-gchar*"/>
          <parameter name="timestamp" type="guint64"/>
          <parameter name="interval" type="guint64"/>
          <parameter name="n_values" type="guint"/>
          <parameter name="values" type="gpointer"/>
        </parameters>
      </method>
      <method name="HasActiveControlBindings" cname="gst_object_has_active_control_bindings">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="HasAncestor" cname="gst_object_has_ancestor">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="ancestor" type="GstObject*"/>
        </parameters>
      </method>
      <method name="Ref" cname="gst_object_ref">
        <return-type type="GstObject*" owned="true"/>
        <parameters/>
      </method>
      <method name="RemoveControlBinding" cname="gst_object_remove_control_binding">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="binding" type="GstControlBinding*"/>
        </parameters>
      </method>
      <method name="SetControlBindingDisabled" cname="gst_object_set_control_binding_disabled">
        <return-type type="void"/>
        <parameters>
          <parameter name="property_name" type="const-gchar*"/>
          <parameter name="disabled" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetControlBindingsDisabled" cname="gst_object_set_control_bindings_disabled">
        <return-type type="void"/>
        <parameters>
          <parameter name="disabled" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetControlRate" cname="gst_object_set_control_rate">
        <return-type type="void"/>
        <parameters>
          <parameter name="control_rate" type="guint64"/>
        </parameters>
      </method>
      <method name="SetName" cname="gst_object_set_name">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetParent" cname="gst_object_set_parent">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="parent" type="GstObject*"/>
        </parameters>
      </method>
      <method name="SuggestNextSync" cname="gst_object_suggest_next_sync">
        <return-type type="guint64"/>
        <parameters/>
      </method>
      <method name="SyncValues" cname="gst_object_sync_values">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="timestamp" type="guint64"/>
        </parameters>
      </method>
      <method name="Unparent" cname="gst_object_unparent">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="Unref" cname="gst_object_unref">
        <return-type type="void"/>
        <parameters/>
      </method>
      <property name="Name" cname="name" type="gchar*" readable="true" writeable="true" construct="true" construct-only="false"/>
      <property name="Parent" cname="parent" type="GstObject*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="object" access="public" writeable="false" readable="true" name="Object" type="GInitiallyUnowned*"/>
      <field cname="lock" access="public" writeable="false" readable="true" name="Lock" type="GMutex*"/>
      <field cname="name" access="public" writeable="false" readable="true" name="NameField" type="gchar*"/>
      <field cname="parent" access="public" writeable="false" readable="true" name="ParentField" type="GstObject*"/>
      <field cname="flags" access="public" writeable="false" readable="true" name="Flags" type="guint32"/>
      <field cname="control_bindings" access="private" writeable="false" readable="false" name="ControlBindings" type="GList*" element_type="gpointer"/>
      <field cname="control_rate" access="private" writeable="false" readable="false" name="ControlRate" type="guint64"/>
      <field cname="last_sync" access="private" writeable="false" readable="false" name="LastSync" type="guint64"/>
      <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer"/>
      <signal name="DeepNotify" cname="deep-notify" when="first" field_name="deep_notify">
        <return-type type="void"/>
        <parameters>
          <parameter name="prop_object" type="GstObject*"/>
          <parameter name="prop" type="GParamSpec*"/>
        </parameters>
      </signal>
    </object>
    <object name="Pad" cname="GstPad" abstract="false" opaque="false" hidden="false" parent="GstObject">
      <class_struct cname="GstPadClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GstObjectClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method signal_vm="linked"/>
        <method signal_vm="unlinked"/>
        <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
      </class_struct>
      <method name="GetType" cname="gst_pad_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gst_pad_new">
        <parameters>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="direction" type="GstPadDirection"/>
        </parameters>
      </constructor>
      <constructor cname="gst_pad_new_from_static_template">
        <parameters>
          <parameter name="templ" type="GstStaticPadTemplate*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </constructor>
      <constructor cname="gst_pad_new_from_template">
        <parameters>
          <parameter name="templ" type="GstPadTemplate*"/>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </constructor>
      <method name="ActivateMode" cname="gst_pad_activate_mode">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="mode" type="GstPadMode"/>
          <parameter name="active" type="gboolean"/>
        </parameters>
      </method>
      <method name="AddProbe" cname="gst_pad_add_probe">
        <return-type type="gulong"/>
        <parameters>
          <parameter name="mask" type="GstPadProbeType"/>
          <parameter closure="2" destroy="3" scope="notified" name="callback" type="GstPadProbeCallback"/>
          <parameter name="user_data" type="gpointer"/>
          <parameter scope="async" name="destroy_data" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="CanLink" cname="gst_pad_can_link">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="sinkpad" type="GstPad*"/>
        </parameters>
      </method>
      <method name="Chain" cname="gst_pad_chain">
        <return-type type="GstFlowReturn"/>
        <parameters>
          <parameter name="buffer" type="GstBuffer*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ChainList" cname="gst_pad_chain_list">
        <return-type type="GstFlowReturn"/>
        <parameters>
          <parameter name="list" type="GstBufferList*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="CheckReconfigure" cname="gst_pad_check_reconfigure">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="CreateStreamId" cname="gst_pad_create_stream_id">
        <return-type type="gchar*" owned="true"/>
        <parameters>
          <parameter name="parent" type="GstElement*"/>
          <parameter allow-none="1" name="stream_id" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="EventDefault" cname="gst_pad_event_default">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="parent" type="GstObject*"/>
          <parameter name="event" type="GstEvent*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Forward" cname="gst_pad_forward">
        <return-type type="gboolean"/>
        <parameters>
          <parameter closure="1" scope="call" name="forward" type="GstPadForwardFunction"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="GetAllowedCaps" cname="gst_pad_get_allowed_caps">
        <return-type type="GstCaps*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetCurrentCaps" cname="gst_pad_get_current_caps">
        <return-type type="GstCaps*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetDirection" cname="gst_pad_get_direction">
        <return-type type="GstPadDirection"/>
        <parameters/>
      </method>
      <method name="GetElementPrivate" cname="gst_pad_get_element_private">
        <return-type type="gpointer"/>
        <parameters/>
      </method>
      <method name="GetOffset" cname="gst_pad_get_offset">
        <return-type type="gint64"/>
        <parameters/>
      </method>
      <method name="GetPadTemplate" cname="gst_pad_get_pad_template">
        <return-type type="GstPadTemplate*" owned="true"/>
        <parameters/>
      </method>
      <method name="GetPadTemplateCaps" cname="gst_pad_get_pad_template_caps">
        <return-type type="GstCaps*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetParentElement" cname="gst_pad_get_parent_element">
        <return-type type="GstElement*" owned="true"/>
        <parameters/>
      </method>
      <method name="GetPeer" cname="gst_pad_get_peer">
        <return-type type="GstPad*" owned="true"/>
        <parameters/>
      </method>
      <method name="GetRange" cname="gst_pad_get_range">
        <return-type type="GstFlowReturn"/>
        <parameters>
          <parameter name="offset" type="guint64"/>
          <parameter name="size" type="guint"/>
          <parameter name="buffer" type="GstBuffer**" owned="true" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetStickyEvent" cname="gst_pad_get_sticky_event">
        <return-type type="GstEvent*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="event_type" type="GstEventType"/>
          <parameter name="idx" type="guint"/>
        </parameters>
      </method>
      <method name="HasCurrentCaps" cname="gst_pad_has_current_caps">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="IsActive" cname="gst_pad_is_active">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="IsBlocked" cname="gst_pad_is_blocked">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="IsBlocking" cname="gst_pad_is_blocking">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="IsLinked" cname="gst_pad_is_linked">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="IterateInternalLinks" cname="gst_pad_iterate_internal_links">
        <return-type type="GstIterator*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="IterateInternalLinksDefault" cname="gst_pad_iterate_internal_links_default">
        <return-type type="GstIterator*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="parent" type="GstObject*"/>
        </parameters>
      </method>
      <method name="Link" cname="gst_pad_link">
        <return-type type="GstPadLinkReturn"/>
        <parameters>
          <parameter name="sinkpad" type="GstPad*"/>
        </parameters>
      </method>
      <method name="LinkFull" cname="gst_pad_link_full">
        <return-type type="GstPadLinkReturn"/>
        <parameters>
          <parameter name="sinkpad" type="GstPad*"/>
          <parameter name="flags" type="GstPadLinkCheck"/>
        </parameters>
      </method>
      <method name="MarkReconfigure" cname="gst_pad_mark_reconfigure">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="NeedsReconfigure" cname="gst_pad_needs_reconfigure">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="PauseTask" cname="gst_pad_pause_task">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="PeerQuery" cname="gst_pad_peer_query">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="query" type="GstQuery*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="PeerQueryAcceptCaps" cname="gst_pad_peer_query_accept_caps">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="caps" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="PeerQueryCaps" cname="gst_pad_peer_query_caps">
        <return-type type="GstCaps*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter allow-none="1" name="filter" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="PeerQueryConvert" cname="gst_pad_peer_query_convert">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="src_format" type="GstFormat"/>
          <parameter name="src_val" type="gint64"/>
          <parameter name="dest_format" type="GstFormat"/>
          <parameter name="dest_val" type="gint64*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="PeerQueryDuration" cname="gst_pad_peer_query_duration">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="format" type="GstFormat"/>
          <parameter allow-none="1" name="duration" type="gint64*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="PeerQueryPosition" cname="gst_pad_peer_query_position">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="format" type="GstFormat"/>
          <parameter allow-none="1" name="cur" type="gint64*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ProxyQueryAcceptCaps" cname="gst_pad_proxy_query_accept_caps">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="query" type="GstQuery*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ProxyQueryCaps" cname="gst_pad_proxy_query_caps">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="query" type="GstQuery*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="PullRange" cname="gst_pad_pull_range">
        <return-type type="GstFlowReturn"/>
        <parameters>
          <parameter name="offset" type="guint64"/>
          <parameter name="size" type="guint"/>
          <parameter name="buffer" type="GstBuffer**" owned="true" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Push" cname="gst_pad_push">
        <return-type type="GstFlowReturn"/>
        <parameters>
          <parameter name="buffer" type="GstBuffer*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="PushEvent" cname="gst_pad_push_event">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="event" type="GstEvent*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="PushList" cname="gst_pad_push_list">
        <return-type type="GstFlowReturn"/>
        <parameters>
          <parameter name="list" type="GstBufferList*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Query" cname="gst_pad_query">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="query" type="GstQuery*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="QueryAcceptCaps" cname="gst_pad_query_accept_caps">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="caps" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="QueryCaps" cname="gst_pad_query_caps">
        <return-type type="GstCaps*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter allow-none="1" name="filter" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="QueryConvert" cname="gst_pad_query_convert">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="src_format" type="GstFormat"/>
          <parameter name="src_val" type="gint64"/>
          <parameter name="dest_format" type="GstFormat"/>
          <parameter name="dest_val" type="gint64*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="QueryDefault" cname="gst_pad_query_default">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="parent" type="GstObject*"/>
          <parameter name="query" type="GstQuery*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="QueryDuration" cname="gst_pad_query_duration">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="format" type="GstFormat"/>
          <parameter allow-none="1" name="duration" type="gint64*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="QueryPosition" cname="gst_pad_query_position">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="format" type="GstFormat"/>
          <parameter name="cur" type="gint64*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="RemoveProbe" cname="gst_pad_remove_probe">
        <return-type type="void"/>
        <parameters>
          <parameter name="id" type="gulong"/>
        </parameters>
      </method>
      <method name="SendEvent" cname="gst_pad_send_event">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="event" type="GstEvent*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetActivateFunctionFull" cname="gst_pad_set_activate_function_full">
        <return-type type="void"/>
        <parameters>
          <parameter closure="1" destroy="2" scope="notified" name="activate" type="GstPadActivateFunction"/>
          <parameter name="user_data" type="gpointer"/>
          <parameter scope="async" name="notify" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="SetActivatemodeFunctionFull" cname="gst_pad_set_activatemode_function_full">
        <return-type type="void"/>
        <parameters>
          <parameter closure="1" destroy="2" scope="notified" name="activatemode" type="GstPadActivateModeFunction"/>
          <parameter name="user_data" type="gpointer"/>
          <parameter scope="async" name="notify" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="SetActive" cname="gst_pad_set_active">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="active" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetChainFunctionFull" cname="gst_pad_set_chain_function_full">
        <return-type type="void"/>
        <parameters>
          <parameter closure="1" destroy="2" scope="notified" name="chain" type="GstPadChainFunction"/>
          <parameter name="user_data" type="gpointer"/>
          <parameter scope="async" name="notify" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="SetChainListFunctionFull" cname="gst_pad_set_chain_list_function_full">
        <return-type type="void"/>
        <parameters>
          <parameter closure="1" destroy="2" scope="notified" name="chainlist" type="GstPadChainListFunction"/>
          <parameter name="user_data" type="gpointer"/>
          <parameter scope="async" name="notify" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="SetElementPrivate" cname="gst_pad_set_element_private">
        <return-type type="void"/>
        <parameters>
          <parameter name="priv" type="gpointer"/>
        </parameters>
      </method>
      <method name="SetEventFunctionFull" cname="gst_pad_set_event_function_full">
        <return-type type="void"/>
        <parameters>
          <parameter closure="1" destroy="2" scope="notified" name="event" type="GstPadEventFunction"/>
          <parameter name="user_data" type="gpointer"/>
          <parameter scope="async" name="notify" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="SetGetrangeFunctionFull" cname="gst_pad_set_getrange_function_full">
        <return-type type="void"/>
        <parameters>
          <parameter closure="1" destroy="2" scope="notified" name="get" type="GstPadGetRangeFunction"/>
          <parameter name="user_data" type="gpointer"/>
          <parameter scope="async" name="notify" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="SetIterateInternalLinksFunctionFull" cname="gst_pad_set_iterate_internal_links_function_full">
        <return-type type="void"/>
        <parameters>
          <parameter closure="1" destroy="2" scope="notified" name="iterintlink" type="GstPadIterIntLinkFunction"/>
          <parameter name="user_data" type="gpointer"/>
          <parameter scope="async" name="notify" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="SetLinkFunctionFull" cname="gst_pad_set_link_function_full">
        <return-type type="void"/>
        <parameters>
          <parameter closure="1" destroy="2" scope="notified" name="link" type="GstPadLinkFunction"/>
          <parameter name="user_data" type="gpointer"/>
          <parameter scope="async" name="notify" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="SetOffset" cname="gst_pad_set_offset">
        <return-type type="void"/>
        <parameters>
          <parameter name="offset" type="gint64"/>
        </parameters>
      </method>
      <method name="SetQueryFunctionFull" cname="gst_pad_set_query_function_full">
        <return-type type="void"/>
        <parameters>
          <parameter closure="1" destroy="2" scope="notified" name="query" type="GstPadQueryFunction"/>
          <parameter name="user_data" type="gpointer"/>
          <parameter scope="async" name="notify" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="SetUnlinkFunctionFull" cname="gst_pad_set_unlink_function_full">
        <return-type type="void"/>
        <parameters>
          <parameter closure="1" destroy="2" scope="notified" name="unlink" type="GstPadUnlinkFunction"/>
          <parameter name="user_data" type="gpointer"/>
          <parameter scope="async" name="notify" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="StartTask" cname="gst_pad_start_task">
        <return-type type="gboolean"/>
        <parameters>
          <parameter closure="1" destroy="2" scope="notified" name="func" type="GstTaskFunction"/>
          <parameter name="user_data" type="gpointer"/>
          <parameter scope="async" name="notify" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="StickyEventsForeach" cname="gst_pad_sticky_events_foreach">
        <return-type type="void"/>
        <parameters>
          <parameter closure="1" scope="call" name="foreach_func" type="GstPadStickyEventsForeachFunction"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="StopTask" cname="gst_pad_stop_task">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="Unlink" cname="gst_pad_unlink">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="sinkpad" type="GstPad*"/>
        </parameters>
      </method>
      <method name="UseFixedCaps" cname="gst_pad_use_fixed_caps">
        <return-type type="void"/>
        <parameters/>
      </method>
      <property name="Caps" cname="caps" type="GstCaps*" readable="true" writeable="false" construct="false" construct-only="false"/>
      <property name="Direction" cname="direction" type="GstPadDirection" readable="true" writeable="true" construct="false" construct-only="true"/>
      <property name="Template" cname="template" type="GstPadTemplate*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="object" access="public" writeable="false" readable="true" name="Object" type="GstObject*"/>
      <field cname="element_private" access="public" writeable="false" readable="true" name="ElementPrivate" type="gpointer"/>
      <field cname="padtemplate" access="public" writeable="false" readable="true" name="Padtemplate" type="GstPadTemplate*"/>
      <field cname="direction" access="public" writeable="false" readable="true" name="DirectionField" type="GstPadDirection"/>
      <field cname="stream_rec_lock" access="private" writeable="false" readable="false" name="StreamRecLock" type="GRecMutex">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="task" access="private" writeable="false" readable="false" name="Task" type="GstTask*"/>
      <field cname="block_cond" access="private" writeable="false" readable="false" name="BlockCond" type="GCond">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="probes" access="private" writeable="false" readable="false" name="Probes" type="GHookList">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="mode" access="private" writeable="false" readable="false" name="Mode" type="GstPadMode"/>
      <field cname="activatefunc" access="private" writeable="false" readable="false" name="Activatefunc" type="GstPadActivateFunction"/>
      <field cname="activatedata" access="private" writeable="false" readable="false" name="Activatedata" type="gpointer"/>
      <field cname="activatenotify" access="private" writeable="false" readable="false" name="Activatenotify" type="GDestroyNotify"/>
      <field cname="activatemodefunc" access="private" writeable="false" readable="false" name="Activatemodefunc" type="GstPadActivateModeFunction"/>
      <field cname="activatemodedata" access="private" writeable="false" readable="false" name="Activatemodedata" type="gpointer"/>
      <field cname="activatemodenotify" access="private" writeable="false" readable="false" name="Activatemodenotify" type="GDestroyNotify"/>
      <field cname="peer" access="private" writeable="false" readable="false" name="Peer" type="GstPad*"/>
      <field cname="linkfunc" access="private" writeable="false" readable="false" name="Linkfunc" type="GstPadLinkFunction"/>
      <field cname="linkdata" access="private" writeable="false" readable="false" name="Linkdata" type="gpointer"/>
      <field cname="linknotify" access="private" writeable="false" readable="false" name="Linknotify" type="GDestroyNotify"/>
      <field cname="unlinkfunc" access="private" writeable="false" readable="false" name="Unlinkfunc" type="GstPadUnlinkFunction"/>
      <field cname="unlinkdata" access="private" writeable="false" readable="false" name="Unlinkdata" type="gpointer"/>
      <field cname="unlinknotify" access="private" writeable="false" readable="false" name="Unlinknotify" type="GDestroyNotify"/>
      <field cname="chainfunc" access="private" writeable="false" readable="false" name="Chainfunc" type="GstPadChainFunction"/>
      <field cname="chaindata" access="private" writeable="false" readable="false" name="Chaindata" type="gpointer"/>
      <field cname="chainnotify" access="private" writeable="false" readable="false" name="Chainnotify" type="GDestroyNotify"/>
      <field cname="chainlistfunc" access="private" writeable="false" readable="false" name="Chainlistfunc" type="GstPadChainListFunction"/>
      <field cname="chainlistdata" access="private" writeable="false" readable="false" name="Chainlistdata" type="gpointer"/>
      <field cname="chainlistnotify" access="private" writeable="false" readable="false" name="Chainlistnotify" type="GDestroyNotify"/>
      <field cname="getrangefunc" access="private" writeable="false" readable="false" name="Getrangefunc" type="GstPadGetRangeFunction"/>
      <field cname="getrangedata" access="private" writeable="false" readable="false" name="Getrangedata" type="gpointer"/>
      <field cname="getrangenotify" access="private" writeable="false" readable="false" name="Getrangenotify" type="GDestroyNotify"/>
      <field cname="eventfunc" access="private" writeable="false" readable="false" name="Eventfunc" type="GstPadEventFunction"/>
      <field cname="eventdata" access="private" writeable="false" readable="false" name="Eventdata" type="gpointer"/>
      <field cname="eventnotify" access="private" writeable="false" readable="false" name="Eventnotify" type="GDestroyNotify"/>
      <field cname="offset" access="private" writeable="false" readable="false" name="Offset" type="gint64"/>
      <field cname="queryfunc" access="private" writeable="false" readable="false" name="Queryfunc" type="GstPadQueryFunction"/>
      <field cname="querydata" access="private" writeable="false" readable="false" name="Querydata" type="gpointer"/>
      <field cname="querynotify" access="private" writeable="false" readable="false" name="Querynotify" type="GDestroyNotify"/>
      <field cname="iterintlinkfunc" access="private" writeable="false" readable="false" name="Iterintlinkfunc" type="GstPadIterIntLinkFunction"/>
      <field cname="iterintlinkdata" access="private" writeable="false" readable="false" name="Iterintlinkdata" type="gpointer"/>
      <field cname="iterintlinknotify" access="private" writeable="false" readable="false" name="Iterintlinknotify" type="GDestroyNotify"/>
      <field cname="num_probes" access="private" writeable="false" readable="false" name="NumProbes" type="gint"/>
      <field cname="num_blocked" access="private" writeable="false" readable="false" name="NumBlocked" type="gint"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GstPadPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
      <signal name="Linked" cname="linked" when="last" field_name="linked">
        <return-type type="void"/>
        <parameters>
          <parameter name="peer" type="GstPad*"/>
        </parameters>
      </signal>
      <signal name="Unlinked" cname="unlinked" when="last" field_name="unlinked">
        <return-type type="void"/>
        <parameters>
          <parameter name="peer" type="GstPad*"/>
        </parameters>
      </signal>
    </object>
    <object name="PadTemplate" cname="GstPadTemplate" abstract="false" opaque="false" hidden="false" parent="GstObject">
      <class_struct cname="GstPadTemplateClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GstObjectClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method signal_vm="pad_created"/>
        <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
      </class_struct>
      <method name="GetType" cname="gst_pad_template_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gst_pad_template_new">
        <parameters>
          <parameter name="name_template" type="const-gchar*"/>
          <parameter name="direction" type="GstPadDirection"/>
          <parameter name="presence" type="GstPadPresence"/>
          <parameter name="caps" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </constructor>
      <method name="GetCaps" cname="gst_pad_template_get_caps">
        <return-type type="GstCaps*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <property name="Caps" cname="caps" type="GstCaps*" readable="true" writeable="true" construct="false" construct-only="true"/>
      <property name="Direction" cname="direction" type="GstPadDirection" readable="true" writeable="true" construct="false" construct-only="true"/>
      <property name="NameTemplate" cname="name-template" type="gchar*" readable="true" writeable="true" construct="false" construct-only="true"/>
      <property name="Presence" cname="presence" type="GstPadPresence" readable="true" writeable="true" construct="false" construct-only="true"/>
      <field cname="object" access="public" writeable="false" readable="true" name="Object" type="GstObject*"/>
      <field cname="name_template" access="public" writeable="false" readable="true" name="NameTemplateField" type="gchar*"/>
      <field cname="direction" access="public" writeable="false" readable="true" name="DirectionField" type="GstPadDirection"/>
      <field cname="presence" access="public" writeable="false" readable="true" name="PresenceField" type="GstPadPresence"/>
      <field cname="caps" access="public" writeable="false" readable="true" name="CapsField" type="GstCaps*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
      <signal name="PadCreated" cname="pad-created" when="last" field_name="pad_created">
        <return-type type="void"/>
        <parameters>
          <parameter name="pad" type="GstPad*"/>
        </parameters>
      </signal>
    </object>
    <object name="Pipeline" cname="GstPipeline" abstract="false" opaque="false" hidden="false" parent="GstBin">
      <implements>
        <interface cname="GstChildProxy"/>
      </implements>
      <class_struct cname="GstPipelineClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GstBinClass">
          <warning>missing glib:type-name</warning>
        </field>
        <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
      </class_struct>
      <method name="GetType" cname="gst_pipeline_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gst_pipeline_new">
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </constructor>
      <method name="AutoClock" cname="gst_pipeline_auto_clock">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="GetAutoFlushBus" cname="gst_pipeline_get_auto_flush_bus">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetBus" cname="gst_pipeline_get_bus">
        <return-type type="GstBus*" owned="true"/>
        <parameters/>
      </method>
      <method name="GetClock" cname="gst_pipeline_get_clock">
        <return-type type="GstClock*" owned="true"/>
        <parameters/>
      </method>
      <method name="GetDelay" cname="gst_pipeline_get_delay">
        <return-type type="guint64"/>
        <parameters/>
      </method>
      <method name="SetAutoFlushBus" cname="gst_pipeline_set_auto_flush_bus">
        <return-type type="void"/>
        <parameters>
          <parameter name="auto_flush" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetClock" cname="gst_pipeline_set_clock">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="clock" type="GstClock*"/>
        </parameters>
      </method>
      <method name="SetDelay" cname="gst_pipeline_set_delay">
        <return-type type="void"/>
        <parameters>
          <parameter name="delay" type="guint64"/>
        </parameters>
      </method>
      <method name="UseClock" cname="gst_pipeline_use_clock">
        <return-type type="void"/>
        <parameters>
          <parameter name="clock" type="GstClock*"/>
        </parameters>
      </method>
      <property name="AutoFlushBus" cname="auto-flush-bus" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Delay" cname="delay" type="guint64" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="bin" access="public" writeable="false" readable="true" name="Bin" type="GstBin*"/>
      <field cname="fixed_clock" access="public" writeable="false" readable="true" name="FixedClock" type="GstClock*"/>
      <field cname="stream_time" access="public" writeable="false" readable="true" name="StreamTime" type="guint64"/>
      <field cname="delay" access="public" writeable="false" readable="true" name="DelayField" type="guint64"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GstPipelinePrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
    </object>
    <object name="Plugin" cname="GstPlugin" abstract="false" opaque="false" hidden="false" parent="GstObject">
      <class_struct cname="GstPluginClass"/>
      <method name="GetType" cname="gst_plugin_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="ListFree" cname="gst_plugin_list_free" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="list" type="GList*" element_type="GstPlugin*" elements_owned="true" owned="true"/>
        </parameters>
      </method>
      <method name="LoadByName" cname="gst_plugin_load_by_name" shared="true">
        <return-type type="GstPlugin*" owned="true"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="LoadFile" cname="gst_plugin_load_file" shared="true">
        <return-type type="GstPlugin*" owned="true"/>
        <parameters throws="1">
          <parameter name="filename" type="const-gchar*"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="RegisterStatic" cname="gst_plugin_register_static" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="major_version" type="gint"/>
          <parameter name="minor_version" type="gint"/>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="description" type="const-gchar*"/>
          <parameter scope="call" name="init_func" type="GstPluginInitFunc"/>
          <parameter name="version" type="const-gchar*"/>
          <parameter name="license" type="const-gchar*"/>
          <parameter name="source" type="const-gchar*"/>
          <parameter name="package" type="const-gchar*"/>
          <parameter name="origin" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="RegisterStaticFull" cname="gst_plugin_register_static_full" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="major_version" type="gint"/>
          <parameter name="minor_version" type="gint"/>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="description" type="const-gchar*"/>
          <parameter closure="10" scope="call" name="init_full_func" type="GstPluginInitFullFunc"/>
          <parameter name="version" type="const-gchar*"/>
          <parameter name="license" type="const-gchar*"/>
          <parameter name="source" type="const-gchar*"/>
          <parameter name="package" type="const-gchar*"/>
          <parameter name="origin" type="const-gchar*"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="AddDependency" cname="gst_plugin_add_dependency">
        <return-type type="void"/>
        <parameters>
          <parameter name="env_vars" type="const-gchar*"/>
          <parameter name="paths" type="const-gchar*"/>
          <parameter name="names" type="const-gchar*"/>
          <parameter name="flags" type="GstPluginDependencyFlags"/>
        </parameters>
      </method>
      <method name="AddDependencySimple" cname="gst_plugin_add_dependency_simple">
        <return-type type="void"/>
        <parameters>
          <parameter name="env_vars" type="const-gchar*"/>
          <parameter name="paths" type="const-gchar*"/>
          <parameter name="names" type="const-gchar*"/>
          <parameter name="flags" type="GstPluginDependencyFlags"/>
        </parameters>
      </method>
      <method name="GetCacheData" cname="gst_plugin_get_cache_data">
        <return-type type="GstStructure*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetDescription" cname="gst_plugin_get_description">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetFilename" cname="gst_plugin_get_filename">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetLicense" cname="gst_plugin_get_license">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetName" cname="gst_plugin_get_name">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetOrigin" cname="gst_plugin_get_origin">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetPackage" cname="gst_plugin_get_package">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetReleaseDateString" cname="gst_plugin_get_release_date_string">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetSource" cname="gst_plugin_get_source">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetVersion" cname="gst_plugin_get_version">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="IsLoaded" cname="gst_plugin_is_loaded">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="Load" cname="gst_plugin_load">
        <return-type type="GstPlugin*" owned="true"/>
        <parameters/>
      </method>
      <method name="SetCacheData" cname="gst_plugin_set_cache_data">
        <return-type type="void"/>
        <parameters>
          <parameter name="cache_data" type="GstStructure*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
    </object>
    <object name="PluginFeature" cname="GstPluginFeature" abstract="true" opaque="false" hidden="false" parent="GstObject">
      <class_struct cname="GstPluginFeatureClass"/>
      <method name="GetType" cname="gst_plugin_feature_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="ListCopy" cname="gst_plugin_feature_list_copy" shared="true">
        <return-type type="GList*" element_type="GstPluginFeature*" elements_owned="true" owned="true"/>
        <parameters>
          <parameter name="list" type="GList*" element_type="GstPluginFeature*"/>
        </parameters>
      </method>
      <method name="ListDebug" cname="gst_plugin_feature_list_debug" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="list" type="GList*" element_type="GstPluginFeature*"/>
        </parameters>
      </method>
      <method name="ListFree" cname="gst_plugin_feature_list_free" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="list" type="GList*" element_type="GstPluginFeature*" elements_owned="true" owned="true"/>
        </parameters>
      </method>
      <method name="RankCompareFunc" cname="gst_plugin_feature_rank_compare_func" shared="true">
        <return-type type="gint"/>
        <parameters>
          <parameter name="p1" type="gpointer"/>
          <parameter name="p2" type="gpointer"/>
        </parameters>
      </method>
      <method name="CheckVersion" cname="gst_plugin_feature_check_version">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="min_major" type="guint"/>
          <parameter name="min_minor" type="guint"/>
          <parameter name="min_micro" type="guint"/>
        </parameters>
      </method>
      <method name="GetPlugin" cname="gst_plugin_feature_get_plugin">
        <return-type type="GstPlugin*" owned="true"/>
        <parameters/>
      </method>
      <method name="GetRank" cname="gst_plugin_feature_get_rank">
        <return-type type="guint"/>
        <parameters/>
      </method>
      <method name="Load" cname="gst_plugin_feature_load">
        <return-type type="GstPluginFeature*" owned="true"/>
        <parameters/>
      </method>
      <method name="SetRank" cname="gst_plugin_feature_set_rank">
        <return-type type="void"/>
        <parameters>
          <parameter name="rank" type="guint"/>
        </parameters>
      </method>
    </object>
    <object name="ProxyPad" cname="GstProxyPad" abstract="false" opaque="false" hidden="false" parent="GstPad">
      <class_struct cname="GstProxyPadClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GstPadClass">
          <warning>missing glib:type-name</warning>
        </field>
        <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="1"/>
      </class_struct>
      <method name="GetType" cname="gst_proxy_pad_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="ChainDefault" cname="gst_proxy_pad_chain_default" shared="true">
        <return-type type="GstFlowReturn"/>
        <parameters>
          <parameter name="pad" type="GstPad*"/>
          <parameter name="parent" type="GstObject*"/>
          <parameter name="buffer" type="GstBuffer*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ChainListDefault" cname="gst_proxy_pad_chain_list_default" shared="true">
        <return-type type="GstFlowReturn"/>
        <parameters>
          <parameter name="pad" type="GstPad*"/>
          <parameter name="parent" type="GstObject*"/>
          <parameter name="list" type="GstBufferList*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetrangeDefault" cname="gst_proxy_pad_getrange_default" shared="true">
        <return-type type="GstFlowReturn"/>
        <parameters>
          <parameter name="pad" type="GstPad*"/>
          <parameter name="parent" type="GstObject*"/>
          <parameter name="offset" type="guint64"/>
          <parameter name="size" type="guint"/>
          <parameter name="buffer" type="GstBuffer**" owned="true" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="IterateInternalLinksDefault" cname="gst_proxy_pad_iterate_internal_links_default" shared="true">
        <return-type type="GstIterator*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="pad" type="GstPad*"/>
          <parameter name="parent" type="GstObject*"/>
        </parameters>
      </method>
      <method name="GetInternal" cname="gst_proxy_pad_get_internal">
        <return-type type="GstProxyPad*" owned="true"/>
        <parameters/>
      </method>
      <field cname="pad" access="public" writeable="false" readable="true" name="Pad" type="GstPad*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GstProxyPadPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="Registry" cname="GstRegistry" abstract="false" opaque="false" hidden="false" parent="GstObject">
      <class_struct cname="GstRegistryClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GstObjectClass">
          <warning>missing glib:type-name</warning>
        </field>
      </class_struct>
      <method name="GetType" cname="gst_registry_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="ForkIsEnabled" cname="gst_registry_fork_is_enabled" shared="true">
        <return-type type="gboolean"/>
      </method>
      <method name="ForkSetEnabled" cname="gst_registry_fork_set_enabled" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="enabled" type="gboolean"/>
        </parameters>
      </method>
      <method name="Get" cname="gst_registry_get" shared="true">
        <return-type type="GstRegistry*"/>
      </method>
      <method name="AddFeature" cname="gst_registry_add_feature">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="feature" type="GstPluginFeature*" owned="true"/>
        </parameters>
      </method>
      <method name="AddPlugin" cname="gst_registry_add_plugin">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="plugin" type="GstPlugin*" owned="true"/>
        </parameters>
      </method>
      <method name="CheckFeatureVersion" cname="gst_registry_check_feature_version">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="feature_name" type="const-gchar*"/>
          <parameter name="min_major" type="guint"/>
          <parameter name="min_minor" type="guint"/>
          <parameter name="min_micro" type="guint"/>
        </parameters>
      </method>
      <method name="FeatureFilter" cname="gst_registry_feature_filter">
        <return-type type="GList*" element_type="GstPluginFeature*" elements_owned="true" owned="true"/>
        <parameters>
          <parameter closure="2" scope="call" name="filter" type="GstPluginFeatureFilter"/>
          <parameter name="first" type="gboolean"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="FindFeature" cname="gst_registry_find_feature">
        <return-type type="GstPluginFeature*" owned="true"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="type" type="GType"/>
        </parameters>
      </method>
      <method name="FindPlugin" cname="gst_registry_find_plugin">
        <return-type type="GstPlugin*" owned="true"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetFeatureList" cname="gst_registry_get_feature_list">
        <return-type type="GList*" element_type="GstPluginFeature*" elements_owned="true" owned="true"/>
        <parameters>
          <parameter name="type" type="GType"/>
        </parameters>
      </method>
      <method name="GetFeatureListByPlugin" cname="gst_registry_get_feature_list_by_plugin">
        <return-type type="GList*" element_type="GstPluginFeature*" elements_owned="true" owned="true"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetFeatureListCookie" cname="gst_registry_get_feature_list_cookie">
        <return-type type="guint32"/>
        <parameters/>
      </method>
      <method name="GetPluginList" cname="gst_registry_get_plugin_list">
        <return-type type="GList*" element_type="GstPlugin*" elements_owned="true" owned="true"/>
        <parameters/>
      </method>
      <method name="Lookup" cname="gst_registry_lookup">
        <return-type type="GstPlugin*" owned="true"/>
        <parameters>
          <parameter name="filename" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="LookupFeature" cname="gst_registry_lookup_feature">
        <return-type type="GstPluginFeature*" owned="true"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="PluginFilter" cname="gst_registry_plugin_filter">
        <return-type type="GList*" element_type="GstPlugin*" elements_owned="true" owned="true"/>
        <parameters>
          <parameter closure="2" scope="call" name="filter" type="GstPluginFilter"/>
          <parameter name="first" type="gboolean"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="RemoveFeature" cname="gst_registry_remove_feature">
        <return-type type="void"/>
        <parameters>
          <parameter name="feature" type="GstPluginFeature*"/>
        </parameters>
      </method>
      <method name="RemovePlugin" cname="gst_registry_remove_plugin">
        <return-type type="void"/>
        <parameters>
          <parameter name="plugin" type="GstPlugin*"/>
        </parameters>
      </method>
      <method name="ScanPath" cname="gst_registry_scan_path">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="path" type="const-gchar*"/>
        </parameters>
      </method>
      <field cname="object" access="public" writeable="false" readable="true" name="Object" type="GstObject*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GstRegistryPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <signal name="FeatureAdded" cname="feature-added" when="last">
        <return-type type="void"/>
        <parameters>
          <parameter name="feature" type="GstPluginFeature*"/>
        </parameters>
      </signal>
      <signal name="PluginAdded" cname="plugin-added" when="last">
        <return-type type="void"/>
        <parameters>
          <parameter name="plugin" type="GstPlugin*"/>
        </parameters>
      </signal>
    </object>
    <object name="SystemClock" cname="GstSystemClock" abstract="false" opaque="false" hidden="false" parent="GstClock">
      <class_struct cname="GstSystemClockClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GstClockClass">
          <warning>missing glib:type-name</warning>
        </field>
        <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
      </class_struct>
      <method name="GetType" cname="gst_system_clock_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="Obtain" cname="gst_system_clock_obtain" shared="true">
        <return-type type="GstClock*" owned="true"/>
      </method>
      <property name="ClockType" cname="clock-type" type="GstClockType" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="clock" access="public" writeable="false" readable="true" name="Clock" type="GstClock*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GstSystemClockPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
    </object>
    <object name="Task" cname="GstTask" abstract="false" opaque="false" hidden="false" parent="GstObject">
      <class_struct cname="GstTaskClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GstObjectClass">
          <warning>missing glib:type-name</warning>
        </field>
        <field cname="pool" access="private" writeable="false" readable="false" name="Pool" type="GstTaskPool*"/>
        <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
      </class_struct>
      <method name="GetType" cname="gst_task_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gst_task_new">
        <parameters>
          <parameter name="func" type="GstTaskFunction"/>
          <parameter name="user_data" type="gpointer"/>
          <parameter name="notify" type="GDestroyNotify"/>
        </parameters>
      </constructor>
      <method name="CleanupAll" cname="gst_task_cleanup_all" shared="true">
        <return-type type="void"/>
      </method>
      <method name="GetPool" cname="gst_task_get_pool">
        <return-type type="GstTaskPool*" owned="true"/>
        <parameters/>
      </method>
      <method name="GetState" cname="gst_task_get_state">
        <return-type type="GstTaskState"/>
        <parameters/>
      </method>
      <method name="Join" cname="gst_task_join">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="Pause" cname="gst_task_pause">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="SetEnterCallback" cname="gst_task_set_enter_callback">
        <return-type type="void"/>
        <parameters>
          <parameter closure="1" destroy="2" scope="notified" name="enter_func" type="GstTaskThreadFunc"/>
          <parameter name="user_data" type="gpointer"/>
          <parameter scope="async" name="notify" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="SetLeaveCallback" cname="gst_task_set_leave_callback">
        <return-type type="void"/>
        <parameters>
          <parameter closure="1" destroy="2" scope="notified" name="leave_func" type="GstTaskThreadFunc"/>
          <parameter name="user_data" type="gpointer"/>
          <parameter scope="async" name="notify" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="SetLock" cname="gst_task_set_lock">
        <return-type type="void"/>
        <parameters>
          <parameter name="mutex" type="GRecMutex*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetPool" cname="gst_task_set_pool">
        <return-type type="void"/>
        <parameters>
          <parameter name="pool" type="GstTaskPool*"/>
        </parameters>
      </method>
      <method name="SetState" cname="gst_task_set_state">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="state" type="GstTaskState"/>
        </parameters>
      </method>
      <method name="Start" cname="gst_task_start">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="Stop" cname="gst_task_stop">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <field cname="object" access="public" writeable="false" readable="true" name="Object" type="GstObject*"/>
      <field cname="state" access="public" writeable="false" readable="true" name="State" type="GstTaskState"/>
      <field cname="cond" access="public" writeable="false" readable="true" name="Cond" type="GCond">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="lock" access="public" writeable="false" readable="true" name="Lock" type="GRecMutex*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="func" access="public" writeable="false" readable="true" name="Func" type="GstTaskFunction"/>
      <field cname="user_data" access="public" writeable="false" readable="true" name="UserData" type="gpointer"/>
      <field cname="notify" access="public" writeable="false" readable="true" name="Notify" type="GDestroyNotify"/>
      <field cname="running" access="public" writeable="false" readable="true" name="Running" type="gboolean"/>
      <field cname="thread" access="private" writeable="false" readable="false" name="Thread" type="GThread*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GstTaskPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
    </object>
    <object name="TaskPool" cname="GstTaskPool" abstract="false" opaque="false" hidden="false" parent="GstObject">
      <class_struct cname="GstTaskPoolClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GstObjectClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="prepare"/>
        <method vm="cleanup"/>
        <method vm="push"/>
        <method vm="join"/>
        <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
      </class_struct>
      <method name="GetType" cname="gst_task_pool_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gst_task_pool_new" disable_void_ctor=""/>
      <virtual_method name="Cleanup" cname="cleanup">
        <return-type type="void"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="Join" cname="join">
        <return-type type="void"/>
        <parameters>
          <parameter name="id" type="gpointer"/>
        </parameters>
      </virtual_method>
      <virtual_method name="Prepare" cname="prepare">
        <return-type type="void"/>
        <parameters throws="1">
          <parameter name="error" type="GError**"/>
        </parameters>
      </virtual_method>
      <virtual_method name="Push" cname="push">
        <return-type type="gpointer"/>
        <parameters throws="1">
          <parameter closure="1" scope="async" name="func" type="GstTaskPoolFunction"/>
          <parameter closure="1" name="user_data" type="gpointer"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </virtual_method>
      <method name="Cleanup" cname="gst_task_pool_cleanup">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="Join" cname="gst_task_pool_join">
        <return-type type="void"/>
        <parameters>
          <parameter name="id" type="gpointer"/>
        </parameters>
      </method>
      <method name="Prepare" cname="gst_task_pool_prepare">
        <return-type type="void"/>
        <parameters throws="1">
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="Push" cname="gst_task_pool_push">
        <return-type type="gpointer"/>
        <parameters throws="1">
          <parameter closure="1" scope="async" name="func" type="GstTaskPoolFunction"/>
          <parameter name="user_data" type="gpointer"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <field cname="object" access="public" writeable="false" readable="true" name="Object" type="GstObject*"/>
      <field cname="pool" access="private" writeable="false" readable="false" name="Pool" type="GThreadPool*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
    </object>
    <object name="TypeFindFactory" cname="GstTypeFindFactory" abstract="false" opaque="false" hidden="false" parent="GstPluginFeature">
      <class_struct cname="GstTypeFindFactoryClass"/>
      <method name="GetType" cname="gst_type_find_factory_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="GetList" cname="gst_type_find_factory_get_list" shared="true">
        <return-type type="GList*" element_type="GstTypeFindFactory*" elements_owned="true" owned="true"/>
      </method>
      <method name="CallFunction" cname="gst_type_find_factory_call_function">
        <return-type type="void"/>
        <parameters>
          <parameter name="find" type="GstTypeFind*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetCaps" cname="gst_type_find_factory_get_caps">
        <return-type type="GstCaps*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetExtensions" cname="gst_type_find_factory_get_extensions">
        <return-type type="const-gchar**" array="true" null_term_array="true"/>
        <parameters/>
      </method>
      <method name="HasFunction" cname="gst_type_find_factory_has_function">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
    </object>
    <boxed name="AllocationParams" cname="GstAllocationParams" opaque="false" hidden="false">
      <method name="GetType" cname="gst_allocation_params_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <field cname="flags" access="public" writeable="true" readable="true" name="Flags" type="GstMemoryFlags"/>
      <field cname="align" access="public" writeable="true" readable="true" name="Align" type="gsize"/>
      <field cname="prefix" access="public" writeable="true" readable="true" name="Prefix" type="gsize"/>
      <field cname="padding" access="public" writeable="true" readable="true" name="Padding" type="gsize"/>
      <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
      <method name="Copy" cname="gst_allocation_params_copy">
        <return-type type="GstAllocationParams*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="Free" cname="gst_allocation_params_free">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="Init" cname="gst_allocation_params_init">
        <return-type type="void"/>
        <parameters/>
      </method>
    </boxed>
    <struct name="AllocatorPrivate" cname="GstAllocatorPrivate" opaque="true" hidden="true"/>
    <boxed name="AtomicQueue" cname="GstAtomicQueue" opaque="false" hidden="false">
      <method name="GetType" cname="gst_atomic_queue_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gst_atomic_queue_new">
        <parameters>
          <parameter name="initial_size" type="guint"/>
        </parameters>
      </constructor>
      <method name="Length" cname="gst_atomic_queue_length">
        <return-type type="guint"/>
        <parameters/>
      </method>
      <method name="Peek" cname="gst_atomic_queue_peek">
        <return-type type="gpointer"/>
        <parameters/>
      </method>
      <method name="Pop" cname="gst_atomic_queue_pop">
        <return-type type="gpointer*" owned="true"/>
        <parameters/>
      </method>
      <method name="Push" cname="gst_atomic_queue_push">
        <return-type type="void"/>
        <parameters>
          <parameter name="data" type="gpointer"/>
        </parameters>
      </method>
      <method name="Ref" cname="gst_atomic_queue_ref">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="Unref" cname="gst_atomic_queue_unref">
        <return-type type="void"/>
        <parameters/>
      </method>
    </boxed>
    <struct name="BinPrivate" cname="GstBinPrivate" opaque="true" hidden="true"/>
    <boxed name="Buffer" cname="GstBuffer" opaque="false" hidden="false">
      <method name="GetType" cname="gst_buffer_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <field cname="mini_object" access="public" writeable="true" readable="true" name="MiniObject" type="GstMiniObject">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="pool" access="public" writeable="true" readable="true" name="Pool" type="GstBufferPool*"/>
      <field cname="pts" access="public" writeable="true" readable="true" name="Pts" type="guint64"/>
      <field cname="dts" access="public" writeable="true" readable="true" name="Dts" type="guint64"/>
      <field cname="duration" access="public" writeable="true" readable="true" name="Duration" type="guint64"/>
      <field cname="offset" access="public" writeable="true" readable="true" name="Offset" type="guint64"/>
      <field cname="offset_end" access="public" writeable="true" readable="true" name="OffsetEnd" type="guint64"/>
      <constructor cname="gst_buffer_new" disable_void_ctor=""/>
      <constructor cname="gst_buffer_new_allocate">
        <parameters>
          <parameter name="allocator" type="GstAllocator*"/>
          <parameter name="size" type="gsize"/>
          <parameter name="params" type="GstAllocationParams*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </constructor>
      <constructor cname="gst_buffer_new_wrapped">
        <parameters>
          <parameter name="data" type="gpointer" array="true" array_length_param_index="1"/>
          <parameter name="size" type="gsize"/>
        </parameters>
      </constructor>
      <constructor cname="gst_buffer_new_wrapped_full">
        <parameters>
          <parameter name="flags" type="GstMemoryFlags"/>
          <parameter name="data" type="gpointer" array="true" array_length_param_index="4"/>
          <parameter name="maxsize" type="gsize"/>
          <parameter name="offset" type="gsize"/>
          <parameter name="size" type="gsize"/>
          <parameter name="user_data" type="gpointer"/>
          <parameter name="notify" type="GDestroyNotify"/>
        </parameters>
      </constructor>
      <method name="AddMeta" cname="gst_buffer_add_meta">
        <return-type type="GstMeta*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="info" type="GstMetaInfo*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="params" type="gpointer"/>
        </parameters>
      </method>
      <method name="Append" cname="gst_buffer_append">
        <return-type type="GstBuffer*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="buf2" type="GstBuffer*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="AppendMemory" cname="gst_buffer_append_memory">
        <return-type type="void"/>
        <parameters>
          <parameter name="mem" type="GstMemory*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="AppendRegion" cname="gst_buffer_append_region">
        <return-type type="GstBuffer*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="buf2" type="GstBuffer*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="offset" type="gssize"/>
          <parameter name="size" type="gssize"/>
        </parameters>
      </method>
      <method name="CopyInto" cname="gst_buffer_copy_into">
        <return-type type="void"/>
        <parameters>
          <parameter name="src" type="GstBuffer*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="flags" type="GstBufferCopyFlags"/>
          <parameter name="offset" type="gsize"/>
          <parameter name="size" type="gsize"/>
        </parameters>
      </method>
      <method name="CopyRegion" cname="gst_buffer_copy_region">
        <return-type type="GstBuffer*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="flags" type="GstBufferCopyFlags"/>
          <parameter name="offset" type="gsize"/>
          <parameter name="size" type="gsize"/>
        </parameters>
      </method>
      <method name="Extract" cname="gst_buffer_extract">
        <return-type type="gsize"/>
        <parameters>
          <parameter name="offset" type="gsize"/>
          <parameter name="dest" type="gpointer"/>
          <parameter name="size" type="gsize"/>
        </parameters>
      </method>
      <method name="Fill" cname="gst_buffer_fill">
        <return-type type="gsize"/>
        <parameters>
          <parameter name="offset" type="gsize"/>
          <parameter name="src" type="gpointer"/>
          <parameter name="size" type="gsize"/>
        </parameters>
      </method>
      <method name="FindMemory" cname="gst_buffer_find_memory">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="offset" type="gsize"/>
          <parameter name="size" type="gsize"/>
          <parameter name="idx" type="guint*" owned="true" pass_as="out"/>
          <parameter name="length" type="guint*" owned="true" pass_as="out"/>
          <parameter name="skip" type="gsize*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ForeachMeta" cname="gst_buffer_foreach_meta">
        <return-type type="gboolean"/>
        <parameters>
          <parameter closure="1" scope="call" name="func" type="GstBufferForeachMetaFunc"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="GetAllMemory" cname="gst_buffer_get_all_memory">
        <return-type type="GstMemory*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetMemory" cname="gst_buffer_get_memory">
        <return-type type="GstMemory*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="idx" type="guint"/>
        </parameters>
      </method>
      <method name="GetMemoryRange" cname="gst_buffer_get_memory_range">
        <return-type type="GstMemory*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="idx" type="guint"/>
          <parameter name="length" type="gint"/>
        </parameters>
      </method>
      <method name="GetMeta" cname="gst_buffer_get_meta">
        <return-type type="GstMeta*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="api" type="GType"/>
        </parameters>
      </method>
      <method name="GetSize" cname="gst_buffer_get_size">
        <return-type type="gsize"/>
        <parameters/>
      </method>
      <method name="GetSizes" cname="gst_buffer_get_sizes">
        <return-type type="gsize"/>
        <parameters>
          <parameter name="offset" type="gsize*" owned="true" pass_as="out"/>
          <parameter name="maxsize" type="gsize*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetSizesRange" cname="gst_buffer_get_sizes_range">
        <return-type type="gsize"/>
        <parameters>
          <parameter name="idx" type="guint"/>
          <parameter name="length" type="gint"/>
          <parameter name="offset" type="gsize*" owned="true" pass_as="out"/>
          <parameter name="maxsize" type="gsize*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="InsertMemory" cname="gst_buffer_insert_memory">
        <return-type type="void"/>
        <parameters>
          <parameter name="idx" type="gint"/>
          <parameter name="mem" type="GstMemory*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="IterateMeta" cname="gst_buffer_iterate_meta">
        <return-type type="GstMeta*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="state" type="gpointer"/>
        </parameters>
      </method>
      <method name="Map" cname="gst_buffer_map">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="info" type="GstMapInfo*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="flags" type="GstMapFlags"/>
        </parameters>
      </method>
      <method name="MapRange" cname="gst_buffer_map_range">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="idx" type="guint"/>
          <parameter name="length" type="gint"/>
          <parameter name="info" type="GstMapInfo*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="flags" type="GstMapFlags"/>
        </parameters>
      </method>
      <method name="Memcmp" cname="gst_buffer_memcmp">
        <return-type type="gint"/>
        <parameters>
          <parameter name="offset" type="gsize"/>
          <parameter name="mem" type="gpointer"/>
          <parameter name="size" type="gsize"/>
        </parameters>
      </method>
      <method name="Memset" cname="gst_buffer_memset">
        <return-type type="gsize"/>
        <parameters>
          <parameter name="offset" type="gsize"/>
          <parameter name="val" type="guint8"/>
          <parameter name="size" type="gsize"/>
        </parameters>
      </method>
      <method name="NMemory" cname="gst_buffer_n_memory">
        <return-type type="guint*" owned="true"/>
        <parameters/>
      </method>
      <method name="PeekMemory" cname="gst_buffer_peek_memory">
        <return-type type="GstMemory*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="idx" type="guint"/>
        </parameters>
      </method>
      <method name="PrependMemory" cname="gst_buffer_prepend_memory">
        <return-type type="void"/>
        <parameters>
          <parameter name="mem" type="GstMemory*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="RemoveAllMemory" cname="gst_buffer_remove_all_memory">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="RemoveMemory" cname="gst_buffer_remove_memory">
        <return-type type="void"/>
        <parameters>
          <parameter name="idx" type="guint"/>
        </parameters>
      </method>
      <method name="RemoveMemoryRange" cname="gst_buffer_remove_memory_range">
        <return-type type="void"/>
        <parameters>
          <parameter name="idx" type="guint"/>
          <parameter name="length" type="gint"/>
        </parameters>
      </method>
      <method name="RemoveMeta" cname="gst_buffer_remove_meta">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="meta" type="GstMeta*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ReplaceAllMemory" cname="gst_buffer_replace_all_memory">
        <return-type type="void"/>
        <parameters>
          <parameter name="mem" type="GstMemory*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ReplaceMemory" cname="gst_buffer_replace_memory">
        <return-type type="void"/>
        <parameters>
          <parameter name="idx" type="guint"/>
          <parameter name="mem" type="GstMemory*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ReplaceMemoryRange" cname="gst_buffer_replace_memory_range">
        <return-type type="void"/>
        <parameters>
          <parameter name="idx" type="guint"/>
          <parameter name="length" type="gint"/>
          <parameter name="mem" type="GstMemory*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Resize" cname="gst_buffer_resize">
        <return-type type="void"/>
        <parameters>
          <parameter name="offset" type="gssize"/>
          <parameter name="size" type="gssize"/>
        </parameters>
      </method>
      <method name="ResizeRange" cname="gst_buffer_resize_range">
        <return-type type="void"/>
        <parameters>
          <parameter name="idx" type="guint"/>
          <parameter name="length" type="gint"/>
          <parameter name="offset" type="gssize"/>
          <parameter name="size" type="gssize"/>
        </parameters>
      </method>
      <method name="SetSize" cname="gst_buffer_set_size">
        <return-type type="void"/>
        <parameters>
          <parameter name="size" type="gssize"/>
        </parameters>
      </method>
      <method name="Unmap" cname="gst_buffer_unmap">
        <return-type type="void"/>
        <parameters>
          <parameter name="info" type="GstMapInfo*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
    </boxed>
    <boxed name="BufferList" cname="GstBufferList" opaque="false" hidden="false">
      <method name="GetType" cname="gst_buffer_list_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gst_buffer_list_new" disable_void_ctor=""/>
      <constructor cname="gst_buffer_list_new_sized">
        <parameters>
          <parameter name="size" type="guint"/>
        </parameters>
      </constructor>
      <method name="Foreach" cname="gst_buffer_list_foreach">
        <return-type type="gboolean"/>
        <parameters>
          <parameter closure="1" scope="call" name="func" type="GstBufferListFunc"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="Get" cname="gst_buffer_list_get">
        <return-type type="GstBuffer*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="idx" type="guint"/>
        </parameters>
      </method>
      <method name="Insert" cname="gst_buffer_list_insert">
        <return-type type="void"/>
        <parameters>
          <parameter name="idx" type="gint"/>
          <parameter name="buffer" type="GstBuffer*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Length" cname="gst_buffer_list_length">
        <return-type type="guint"/>
        <parameters/>
      </method>
      <method name="Remove" cname="gst_buffer_list_remove">
        <return-type type="void"/>
        <parameters>
          <parameter name="idx" type="guint"/>
          <parameter name="length" type="guint"/>
        </parameters>
      </method>
    </boxed>
    <struct name="BufferPoolAcquireParams" cname="GstBufferPoolAcquireParams" opaque="false" hidden="false">
      <field cname="format" access="public" writeable="true" readable="true" name="Format" type="GstFormat"/>
      <field cname="start" access="public" writeable="true" readable="true" name="Start" type="gint64"/>
      <field cname="stop" access="public" writeable="true" readable="true" name="Stop" type="gint64"/>
      <field cname="flags" access="public" writeable="true" readable="true" name="Flags" type="GstBufferPoolAcquireFlags"/>
      <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
    </struct>
    <struct name="BufferPoolPrivate" cname="GstBufferPoolPrivate" opaque="true" hidden="true"/>
    <struct name="BusPrivate" cname="GstBusPrivate" opaque="true" hidden="true"/>
    <boxed name="Caps" cname="GstCaps" opaque="false" hidden="false">
      <method name="GetType" cname="gst_caps_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <field cname="mini_object" access="public" writeable="true" readable="true" name="MiniObject" type="GstMiniObject">
        <warning>missing glib:type-name</warning>
      </field>
      <constructor cname="gst_caps_new_any" disable_void_ctor=""/>
      <constructor cname="gst_caps_new_empty" disable_void_ctor=""/>
      <constructor cname="gst_caps_new_empty_simple">
        <parameters>
          <parameter name="media_type" type="const-gchar*"/>
        </parameters>
      </constructor>
      <method name="Append" cname="gst_caps_append">
        <return-type type="void"/>
        <parameters>
          <parameter name="caps2" type="GstCaps*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="AppendStructure" cname="gst_caps_append_structure">
        <return-type type="void"/>
        <parameters>
          <parameter name="structure" type="GstStructure*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="CanIntersect" cname="gst_caps_can_intersect">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="caps2" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="CopyNth" cname="gst_caps_copy_nth">
        <return-type type="GstCaps*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="nth" type="guint"/>
        </parameters>
      </method>
      <method name="Fixate" cname="gst_caps_fixate">
        <return-type type="GstCaps*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetSize" cname="gst_caps_get_size">
        <return-type type="guint"/>
        <parameters/>
      </method>
      <method name="GetStructure" cname="gst_caps_get_structure">
        <return-type type="GstStructure*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="index" type="guint"/>
        </parameters>
      </method>
      <method name="Intersect" cname="gst_caps_intersect">
        <return-type type="GstCaps*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="caps2" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="IntersectFull" cname="gst_caps_intersect_full">
        <return-type type="GstCaps*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="caps2" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="mode" type="GstCapsIntersectMode"/>
        </parameters>
      </method>
      <method name="IsAlwaysCompatible" cname="gst_caps_is_always_compatible">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="caps2" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="IsAny" cname="gst_caps_is_any">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="IsEmpty" cname="gst_caps_is_empty">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="IsEqual" cname="gst_caps_is_equal">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="caps2" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="IsEqualFixed" cname="gst_caps_is_equal_fixed">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="caps2" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="IsFixed" cname="gst_caps_is_fixed">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="IsStrictlyEqual" cname="gst_caps_is_strictly_equal">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="caps2" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="IsSubset" cname="gst_caps_is_subset">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="superset" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="IsSubsetStructure" cname="gst_caps_is_subset_structure">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="structure" type="GstStructure*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Merge" cname="gst_caps_merge">
        <return-type type="GstCaps*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="caps2" type="GstCaps*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="MergeStructure" cname="gst_caps_merge_structure">
        <return-type type="GstCaps*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="structure" type="GstStructure*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Normalize" cname="gst_caps_normalize">
        <return-type type="GstCaps*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="RemoveStructure" cname="gst_caps_remove_structure">
        <return-type type="void"/>
        <parameters>
          <parameter name="idx" type="guint"/>
        </parameters>
      </method>
      <method name="SetValue" cname="gst_caps_set_value">
        <return-type type="void"/>
        <parameters>
          <parameter name="field" type="const-gchar*"/>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Simplify" cname="gst_caps_simplify">
        <return-type type="GstCaps*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="StealStructure" cname="gst_caps_steal_structure">
        <return-type type="GstStructure*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="index" type="guint"/>
        </parameters>
      </method>
      <method name="Subtract" cname="gst_caps_subtract">
        <return-type type="GstCaps*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="subtrahend" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ToString" cname="gst_caps_to_string">
        <return-type type="gchar*" owned="true"/>
        <parameters/>
      </method>
      <method name="Truncate" cname="gst_caps_truncate">
        <return-type type="GstCaps*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="FromString" cname="gst_caps_from_string" shared="true">
        <return-type type="GstCaps*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="string" type="const-gchar*"/>
        </parameters>
      </method>
    </boxed>
    <struct name="ClockEntry" cname="GstClockEntry" opaque="true" hidden="false">
      <field cname="refcount" access="public" writeable="true" readable="true" name="Refcount" type="gint"/>
      <field cname="clock" access="public" writeable="true" readable="true" name="Clock" type="GstClock*"/>
      <field cname="type" access="public" writeable="true" readable="true" name="Type" type="GstClockEntryType"/>
      <field cname="time" access="public" writeable="true" readable="true" name="Time" type="guint64"/>
      <field cname="interval" access="public" writeable="true" readable="true" name="Interval" type="guint64"/>
      <field cname="status" access="public" writeable="true" readable="true" name="Status" type="GstClockReturn"/>
      <field cname="func" access="public" writeable="true" readable="true" name="Func" type="GstClockCallback"/>
      <field cname="user_data" access="public" writeable="true" readable="true" name="UserData" type="gpointer"/>
      <field cname="destroy_data" access="public" writeable="true" readable="true" name="DestroyData" type="GDestroyNotify"/>
      <field cname="unscheduled" access="public" writeable="true" readable="true" name="Unscheduled" type="gboolean"/>
      <field cname="woken_up" access="public" writeable="true" readable="true" name="WokenUp" type="gboolean"/>
      <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
    </struct>
    <struct name="ClockPrivate" cname="GstClockPrivate" opaque="true" hidden="true"/>
    <boxed name="DateTime" cname="GstDateTime" opaque="false" hidden="false">
      <method name="GetType" cname="gst_date_time_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gst_date_time_new">
        <parameters>
          <parameter name="tzoffset" type="gfloat"/>
          <parameter name="year" type="gint"/>
          <parameter name="month" type="gint"/>
          <parameter name="day" type="gint"/>
          <parameter name="hour" type="gint"/>
          <parameter name="minute" type="gint"/>
          <parameter name="seconds" type="gdouble"/>
        </parameters>
      </constructor>
      <constructor cname="gst_date_time_new_from_g_date_time">
        <parameters>
          <parameter name="dt" type="GDateTime*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </constructor>
      <constructor cname="gst_date_time_new_from_iso8601_string">
        <parameters>
          <parameter name="string" type="const-gchar*"/>
        </parameters>
      </constructor>
      <constructor cname="gst_date_time_new_from_unix_epoch_local_time">
        <parameters>
          <parameter name="secs" type="gint64"/>
        </parameters>
      </constructor>
      <constructor cname="gst_date_time_new_from_unix_epoch_utc">
        <parameters>
          <parameter name="secs" type="gint64"/>
        </parameters>
      </constructor>
      <constructor cname="gst_date_time_new_local_time">
        <parameters>
          <parameter name="year" type="gint"/>
          <parameter name="month" type="gint"/>
          <parameter name="day" type="gint"/>
          <parameter name="hour" type="gint"/>
          <parameter name="minute" type="gint"/>
          <parameter name="seconds" type="gdouble"/>
        </parameters>
      </constructor>
      <constructor cname="gst_date_time_new_now_local_time" disable_void_ctor=""/>
      <constructor cname="gst_date_time_new_now_utc" disable_void_ctor=""/>
      <constructor cname="gst_date_time_new_y">
        <parameters>
          <parameter name="year" type="gint"/>
        </parameters>
      </constructor>
      <constructor cname="gst_date_time_new_ym">
        <parameters>
          <parameter name="year" type="gint"/>
          <parameter name="month" type="gint"/>
        </parameters>
      </constructor>
      <constructor cname="gst_date_time_new_ymd">
        <parameters>
          <parameter name="year" type="gint"/>
          <parameter name="month" type="gint"/>
          <parameter name="day" type="gint"/>
        </parameters>
      </constructor>
      <method name="GetDay" cname="gst_date_time_get_day">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetHour" cname="gst_date_time_get_hour">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetMicrosecond" cname="gst_date_time_get_microsecond">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetMinute" cname="gst_date_time_get_minute">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetMonth" cname="gst_date_time_get_month">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetSecond" cname="gst_date_time_get_second">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetTimeZoneOffset" cname="gst_date_time_get_time_zone_offset">
        <return-type type="gfloat"/>
        <parameters/>
      </method>
      <method name="GetYear" cname="gst_date_time_get_year">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="HasDay" cname="gst_date_time_has_day">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="HasMonth" cname="gst_date_time_has_month">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="HasSecond" cname="gst_date_time_has_second">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="HasTime" cname="gst_date_time_has_time">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="HasYear" cname="gst_date_time_has_year">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="Ref" cname="gst_date_time_ref">
        <return-type type="GstDateTime*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="ToGDateTime" cname="gst_date_time_to_g_date_time">
        <return-type type="GDateTime*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="ToIso8601String" cname="gst_date_time_to_iso8601_string">
        <return-type type="gchar*" owned="true"/>
        <parameters/>
      </method>
      <method name="Unref" cname="gst_date_time_unref">
        <return-type type="void"/>
        <parameters/>
      </method>
    </boxed>
    <struct name="DebugCategory" cname="GstDebugCategory" opaque="false" hidden="false">
      <field cname="threshold" access="private" writeable="false" readable="false" name="Threshold" type="gint"/>
      <field cname="color" access="private" writeable="false" readable="false" name="Color" type="guint"/>
      <field cname="name" access="private" writeable="false" readable="false" name="Name" type="gchar*"/>
      <field cname="description" access="private" writeable="false" readable="false" name="Description" type="gchar*"/>
      <method name="Free" cname="gst_debug_category_free">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="GetColor" cname="gst_debug_category_get_color">
        <return-type type="guint"/>
        <parameters/>
      </method>
      <method name="GetDescription" cname="gst_debug_category_get_description">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetName" cname="gst_debug_category_get_name">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetThreshold" cname="gst_debug_category_get_threshold">
        <return-type type="GstDebugLevel"/>
        <parameters/>
      </method>
      <method name="ResetThreshold" cname="gst_debug_category_reset_threshold">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="SetThreshold" cname="gst_debug_category_set_threshold">
        <return-type type="void"/>
        <parameters>
          <parameter name="level" type="GstDebugLevel"/>
        </parameters>
      </method>
    </struct>
    <struct name="DebugMessage" cname="GstDebugMessage" opaque="true" hidden="false">
      <method name="Get" cname="gst_debug_message_get">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
    </struct>
    <boxed name="Event" cname="GstEvent" opaque="false" hidden="false">
      <method name="GetType" cname="gst_event_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <field cname="mini_object" access="public" writeable="true" readable="true" name="MiniObject" type="GstMiniObject">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="type" access="public" writeable="true" readable="true" name="Type" type="GstEventType"/>
      <field cname="timestamp" access="public" writeable="true" readable="true" name="Timestamp" type="guint64"/>
      <field cname="seqnum" access="public" writeable="true" readable="true" name="Seqnum" type="guint32"/>
      <constructor cname="gst_event_new_buffer_size">
        <parameters>
          <parameter name="format" type="GstFormat"/>
          <parameter name="minsize" type="gint64"/>
          <parameter name="maxsize" type="gint64"/>
          <parameter name="async" type="gboolean"/>
        </parameters>
      </constructor>
      <constructor cname="gst_event_new_caps">
        <parameters>
          <parameter name="caps" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </constructor>
      <constructor cname="gst_event_new_custom">
        <parameters>
          <parameter name="type" type="GstEventType"/>
          <parameter name="structure" type="GstStructure*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </constructor>
      <constructor cname="gst_event_new_eos" disable_void_ctor=""/>
      <constructor cname="gst_event_new_flush_start" disable_void_ctor=""/>
      <constructor cname="gst_event_new_flush_stop">
        <parameters>
          <parameter name="reset_time" type="gboolean"/>
        </parameters>
      </constructor>
      <constructor cname="gst_event_new_gap">
        <parameters>
          <parameter name="timestamp" type="guint64"/>
          <parameter name="duration" type="guint64"/>
        </parameters>
      </constructor>
      <constructor cname="gst_event_new_latency">
        <parameters>
          <parameter name="latency" type="guint64"/>
        </parameters>
      </constructor>
      <constructor cname="gst_event_new_navigation">
        <parameters>
          <parameter name="structure" type="GstStructure*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </constructor>
      <constructor cname="gst_event_new_qos">
        <parameters>
          <parameter name="type" type="GstQOSType"/>
          <parameter name="proportion" type="gdouble"/>
          <parameter name="diff" type="gint64"/>
          <parameter name="timestamp" type="guint64"/>
        </parameters>
      </constructor>
      <constructor cname="gst_event_new_reconfigure" disable_void_ctor=""/>
      <constructor cname="gst_event_new_seek">
        <parameters>
          <parameter name="rate" type="gdouble"/>
          <parameter name="format" type="GstFormat"/>
          <parameter name="flags" type="GstSeekFlags"/>
          <parameter name="start_type" type="GstSeekType"/>
          <parameter name="start" type="gint64"/>
          <parameter name="stop_type" type="GstSeekType"/>
          <parameter name="stop" type="gint64"/>
        </parameters>
      </constructor>
      <constructor cname="gst_event_new_segment">
        <parameters>
          <parameter name="segment" type="GstSegment*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </constructor>
      <constructor cname="gst_event_new_segment_done">
        <parameters>
          <parameter name="format" type="GstFormat"/>
          <parameter name="position" type="gint64"/>
        </parameters>
      </constructor>
      <constructor cname="gst_event_new_sink_message">
        <parameters>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="msg" type="GstMessage*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </constructor>
      <constructor cname="gst_event_new_step">
        <parameters>
          <parameter name="format" type="GstFormat"/>
          <parameter name="amount" type="guint64"/>
          <parameter name="rate" type="gdouble"/>
          <parameter name="flush" type="gboolean"/>
          <parameter name="intermediate" type="gboolean"/>
        </parameters>
      </constructor>
      <constructor cname="gst_event_new_stream_start">
        <parameters>
          <parameter name="stream_id" type="const-gchar*"/>
        </parameters>
      </constructor>
      <constructor cname="gst_event_new_tag">
        <parameters>
          <parameter name="taglist" type="GstTagList*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </constructor>
      <constructor cname="gst_event_new_toc">
        <parameters>
          <parameter name="toc" type="GstToc*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="updated" type="gboolean"/>
        </parameters>
      </constructor>
      <constructor cname="gst_event_new_toc_select">
        <parameters>
          <parameter name="uid" type="const-gchar*"/>
        </parameters>
      </constructor>
      <method name="CopySegment" cname="gst_event_copy_segment">
        <return-type type="void"/>
        <parameters>
          <parameter name="segment" type="GstSegment*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetSeqnum" cname="gst_event_get_seqnum">
        <return-type type="guint32"/>
        <parameters/>
      </method>
      <method name="GetStructure" cname="gst_event_get_structure">
        <return-type type="GstStructure*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="HasName" cname="gst_event_has_name">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="ParseBufferSize" cname="gst_event_parse_buffer_size">
        <return-type type="void"/>
        <parameters>
          <parameter name="format" type="GstFormat" owned="true" pass_as="out"/>
          <parameter name="minsize" type="gint64*" owned="true" pass_as="out"/>
          <parameter name="maxsize" type="gint64*" owned="true" pass_as="out"/>
          <parameter name="async" type="gboolean*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseCaps" cname="gst_event_parse_caps">
        <return-type type="void"/>
        <parameters>
          <parameter name="caps" type="GstCaps**" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ParseFlushStop" cname="gst_event_parse_flush_stop">
        <return-type type="void"/>
        <parameters>
          <parameter name="reset_time" type="gboolean*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseGap" cname="gst_event_parse_gap">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="timestamp" type="guint64" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="duration" type="guint64" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseLatency" cname="gst_event_parse_latency">
        <return-type type="void"/>
        <parameters>
          <parameter name="latency" type="guint64" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseQos" cname="gst_event_parse_qos">
        <return-type type="void"/>
        <parameters>
          <parameter name="type" type="GstQOSType" owned="true" pass_as="out"/>
          <parameter name="proportion" type="gdouble*" owned="true" pass_as="out"/>
          <parameter name="diff" type="gint64" owned="true" pass_as="out"/>
          <parameter name="timestamp" type="guint64" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseSeek" cname="gst_event_parse_seek">
        <return-type type="void"/>
        <parameters>
          <parameter name="rate" type="gdouble*" owned="true" pass_as="out"/>
          <parameter name="format" type="GstFormat" owned="true" pass_as="out"/>
          <parameter name="flags" type="GstSeekFlags" owned="true" pass_as="out"/>
          <parameter name="start_type" type="GstSeekType" owned="true" pass_as="out"/>
          <parameter name="start" type="gint64*" owned="true" pass_as="out"/>
          <parameter name="stop_type" type="GstSeekType" owned="true" pass_as="out"/>
          <parameter name="stop" type="gint64*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseSegment" cname="gst_event_parse_segment">
        <return-type type="void"/>
        <parameters>
          <parameter name="segment" type="GstSegment**" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ParseSegmentDone" cname="gst_event_parse_segment_done">
        <return-type type="void"/>
        <parameters>
          <parameter name="format" type="GstFormat" owned="true" pass_as="out"/>
          <parameter name="position" type="gint64*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseSinkMessage" cname="gst_event_parse_sink_message">
        <return-type type="void"/>
        <parameters>
          <parameter name="msg" type="GstMessage**" owned="true" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ParseStep" cname="gst_event_parse_step">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="format" type="GstFormat" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="amount" type="guint64*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="rate" type="gdouble*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="flush" type="gboolean*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="intermediate" type="gboolean*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseStreamStart" cname="gst_event_parse_stream_start">
        <return-type type="void"/>
        <parameters>
          <parameter name="stream_id" type="const-gchar*" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseTag" cname="gst_event_parse_tag">
        <return-type type="void"/>
        <parameters>
          <parameter name="taglist" type="GstTagList**" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ParseToc" cname="gst_event_parse_toc">
        <return-type type="void"/>
        <parameters>
          <parameter name="toc" type="GstToc**" owned="true" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="updated" type="gboolean*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseTocSelect" cname="gst_event_parse_toc_select">
        <return-type type="void"/>
        <parameters>
          <parameter name="uid" type="gchar*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="SetSeqnum" cname="gst_event_set_seqnum">
        <return-type type="void"/>
        <parameters>
          <parameter name="seqnum" type="guint32"/>
        </parameters>
      </method>
      <method name="WritableStructure" cname="gst_event_writable_structure">
        <return-type type="GstStructure*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
    </boxed>
    <struct name="FormatDefinition" cname="GstFormatDefinition" opaque="false" hidden="false">
      <field cname="value" access="public" writeable="true" readable="true" name="Value" type="GstFormat"/>
      <field cname="nick" access="public" writeable="true" readable="true" name="Nick" type="gchar*"/>
      <field cname="description" access="public" writeable="true" readable="true" name="Description" type="gchar*"/>
      <field cname="quark" access="public" writeable="true" readable="true" name="Quark" type="guint32"/>
    </struct>
    <struct name="GhostPadPrivate" cname="GstGhostPadPrivate" opaque="true" hidden="true"/>
    <boxed name="Iterator" cname="GstIterator" opaque="false" hidden="false">
      <method name="GetType" cname="gst_iterator_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <field cname="copy" access="public" writeable="true" readable="true" name="CopyFunc" type="GstIteratorCopyFunction"/>
      <field cname="next" access="public" writeable="true" readable="true" name="NextFunc" type="GstIteratorNextFunction"/>
      <field cname="item" access="public" writeable="true" readable="true" name="Item" type="GstIteratorItemFunction"/>
      <field cname="resync" access="public" writeable="true" readable="true" name="ResyncFunc" type="GstIteratorResyncFunction"/>
      <field cname="free" access="public" writeable="true" readable="true" name="FreeFunc" type="GstIteratorFreeFunction"/>
      <field cname="pushed" access="public" writeable="true" readable="true" name="Pushed" type="GstIterator*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="type" access="public" writeable="true" readable="true" name="Type" type="GType"/>
      <field cname="lock" access="public" writeable="true" readable="true" name="Lock" type="GMutex*"/>
      <field cname="cookie" access="public" writeable="true" readable="true" name="Cookie" type="guint32"/>
      <field cname="master_cookie" access="public" writeable="true" readable="true" name="MasterCookie" type="guint32"/>
      <field cname="size" access="public" writeable="true" readable="true" name="Size" type="guint"/>
      <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
      <constructor cname="gst_iterator_new_single">
        <parameters>
          <parameter name="type" type="GType"/>
          <parameter name="_object" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </constructor>
      <method name="Copy" cname="gst_iterator_copy">
        <return-type type="GstIterator*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="Filter" cname="gst_iterator_filter">
        <return-type type="GstIterator*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter scope="call" name="func" type="GCompareFunc"/>
          <parameter name="user_data" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="FindCustom" cname="gst_iterator_find_custom">
        <return-type type="gboolean"/>
        <parameters>
          <parameter closure="2" scope="call" name="func" type="GCompareFunc"/>
          <parameter name="elem" type="GValue*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="Fold" cname="gst_iterator_fold">
        <return-type type="GstIteratorResult"/>
        <parameters>
          <parameter closure="2" scope="call" name="func" type="GstIteratorFoldFunction"/>
          <parameter name="_ret" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="Foreach" cname="gst_iterator_foreach">
        <return-type type="GstIteratorResult"/>
        <parameters>
          <parameter closure="1" scope="call" name="func" type="GstIteratorForeachFunction"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="Free" cname="gst_iterator_free">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="Next" cname="gst_iterator_next">
        <return-type type="GstIteratorResult"/>
        <parameters>
          <parameter name="elem" type="GValue*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Push" cname="gst_iterator_push">
        <return-type type="void"/>
        <parameters>
          <parameter name="other" type="GstIterator*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Resync" cname="gst_iterator_resync">
        <return-type type="void"/>
        <parameters/>
      </method>
    </boxed>
    <struct name="MapInfo" cname="GstMapInfo" opaque="false" hidden="false">
      <field cname="memory" access="public" writeable="true" readable="true" name="Memory" type="GstMemory*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="flags" access="public" writeable="true" readable="true" name="Flags" type="GstMapFlags"/>
      <field cname="data" access="public" writeable="true" readable="true" name="Data" type="guint8"/>
      <field cname="size" access="public" writeable="true" readable="true" name="Size" type="gsize"/>
      <field cname="maxsize" access="public" writeable="true" readable="true" name="Maxsize" type="gsize"/>
      <field cname="user_data" access="public" writeable="true" readable="true" name="UserData" type="gpointer" array="true" array_len="4"/>
      <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
    </struct>
    <boxed name="Memory" cname="GstMemory" opaque="false" hidden="false">
      <method name="GetType" cname="gst_memory_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <field cname="mini_object" access="public" writeable="true" readable="true" name="MiniObject" type="GstMiniObject">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="allocator" access="public" writeable="true" readable="true" name="Allocator" type="GstAllocator*"/>
      <field cname="parent" access="public" writeable="true" readable="true" name="Parent" type="GstMemory*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="maxsize" access="public" writeable="true" readable="true" name="Maxsize" type="gsize"/>
      <field cname="align" access="public" writeable="true" readable="true" name="Align" type="gsize"/>
      <field cname="offset" access="public" writeable="true" readable="true" name="Offset" type="gsize"/>
      <field cname="size" access="public" writeable="true" readable="true" name="Size" type="gsize"/>
      <constructor cname="gst_memory_new_wrapped">
        <parameters>
          <parameter name="flags" type="GstMemoryFlags"/>
          <parameter name="data" type="gpointer"/>
          <parameter name="maxsize" type="gsize"/>
          <parameter name="offset" type="gsize"/>
          <parameter name="size" type="gsize"/>
          <parameter name="user_data" type="gpointer"/>
          <parameter name="notify" type="GDestroyNotify"/>
        </parameters>
      </constructor>
      <method name="Copy" cname="gst_memory_copy">
        <return-type type="GstMemory*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="offset" type="gssize"/>
          <parameter name="size" type="gssize"/>
        </parameters>
      </method>
      <method name="GetSizes" cname="gst_memory_get_sizes">
        <return-type type="gsize"/>
        <parameters>
          <parameter name="offset" type="gsize"/>
          <parameter name="maxsize" type="gsize"/>
        </parameters>
      </method>
      <method name="IsSpan" cname="gst_memory_is_span">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="mem2" type="GstMemory*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="offset" type="gsize"/>
        </parameters>
      </method>
      <method name="MakeMapped" cname="gst_memory_make_mapped">
        <return-type type="GstMemory*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="info" type="GstMapInfo*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="flags" type="GstMapFlags"/>
        </parameters>
      </method>
      <method name="Map" cname="gst_memory_map">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="info" type="GstMapInfo*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="flags" type="GstMapFlags"/>
        </parameters>
      </method>
      <method name="Resize" cname="gst_memory_resize">
        <return-type type="void"/>
        <parameters>
          <parameter name="offset" type="gssize"/>
          <parameter name="size" type="gsize"/>
        </parameters>
      </method>
      <method name="Share" cname="gst_memory_share">
        <return-type type="GstMemory*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="offset" type="gssize"/>
          <parameter name="size" type="gssize"/>
        </parameters>
      </method>
      <method name="Unmap" cname="gst_memory_unmap">
        <return-type type="void"/>
        <parameters>
          <parameter name="info" type="GstMapInfo*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
    </boxed>
    <boxed name="Message" cname="GstMessage" opaque="false" hidden="false">
      <method name="GetType" cname="gst_message_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <field cname="mini_object" access="public" writeable="true" readable="true" name="MiniObject" type="GstMiniObject">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="type" access="public" writeable="true" readable="true" name="Type" type="GstMessageType"/>
      <field cname="timestamp" access="public" writeable="true" readable="true" name="Timestamp" type="guint64"/>
      <field cname="src" access="public" writeable="true" readable="true" name="Src" type="GstObject*"/>
      <field cname="seqnum" access="public" writeable="true" readable="true" name="Seqnum" type="guint32"/>
      <field cname="lock" access="private" writeable="false" readable="false" name="Lock" type="GMutex*"/>
      <field cname="cond" access="private" writeable="false" readable="false" name="Cond" type="GCond">
        <warning>missing glib:type-name</warning>
      </field>
      <constructor cname="gst_message_new_application">
        <parameters>
          <parameter name="src" type="GstObject*"/>
          <parameter name="structure" type="GstStructure*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </constructor>
      <constructor cname="gst_message_new_async_done">
        <parameters>
          <parameter name="src" type="GstObject*"/>
          <parameter name="running_time" type="guint64"/>
        </parameters>
      </constructor>
      <constructor cname="gst_message_new_async_start">
        <parameters>
          <parameter name="src" type="GstObject*"/>
        </parameters>
      </constructor>
      <constructor cname="gst_message_new_buffering">
        <parameters>
          <parameter name="src" type="GstObject*"/>
          <parameter name="percent" type="gint"/>
        </parameters>
      </constructor>
      <constructor cname="gst_message_new_clock_lost">
        <parameters>
          <parameter name="src" type="GstObject*"/>
          <parameter name="clock" type="GstClock*"/>
        </parameters>
      </constructor>
      <constructor cname="gst_message_new_clock_provide">
        <parameters>
          <parameter name="src" type="GstObject*"/>
          <parameter name="clock" type="GstClock*"/>
          <parameter name="ready" type="gboolean"/>
        </parameters>
      </constructor>
      <constructor cname="gst_message_new_custom">
        <parameters>
          <parameter name="type" type="GstMessageType"/>
          <parameter name="src" type="GstObject*"/>
          <parameter name="structure" type="GstStructure*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </constructor>
      <constructor cname="gst_message_new_duration_changed">
        <parameters>
          <parameter name="src" type="GstObject*"/>
        </parameters>
      </constructor>
      <constructor cname="gst_message_new_element">
        <parameters>
          <parameter name="src" type="GstObject*"/>
          <parameter name="structure" type="GstStructure*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </constructor>
      <constructor cname="gst_message_new_eos">
        <parameters>
          <parameter name="src" type="GstObject*"/>
        </parameters>
      </constructor>
      <constructor cname="gst_message_new_error">
        <parameters>
          <parameter name="src" type="GstObject*"/>
          <parameter name="error" type="GError*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="debug" type="const-gchar*"/>
        </parameters>
      </constructor>
      <constructor cname="gst_message_new_info">
        <parameters>
          <parameter name="src" type="GstObject*"/>
          <parameter name="error" type="GError*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="debug" type="const-gchar*"/>
        </parameters>
      </constructor>
      <constructor cname="gst_message_new_latency">
        <parameters>
          <parameter name="src" type="GstObject*"/>
        </parameters>
      </constructor>
      <constructor cname="gst_message_new_new_clock">
        <parameters>
          <parameter name="src" type="GstObject*"/>
          <parameter name="clock" type="GstClock*"/>
        </parameters>
      </constructor>
      <constructor cname="gst_message_new_progress">
        <parameters>
          <parameter name="src" type="GstObject*"/>
          <parameter name="type" type="GstProgressType"/>
          <parameter name="code" type="const-gchar*"/>
          <parameter name="text" type="const-gchar*"/>
        </parameters>
      </constructor>
      <constructor cname="gst_message_new_qos">
        <parameters>
          <parameter name="src" type="GstObject*"/>
          <parameter name="live" type="gboolean"/>
          <parameter name="running_time" type="guint64"/>
          <parameter name="stream_time" type="guint64"/>
          <parameter name="timestamp" type="guint64"/>
          <parameter name="duration" type="guint64"/>
        </parameters>
      </constructor>
      <constructor cname="gst_message_new_request_state">
        <parameters>
          <parameter name="src" type="GstObject*"/>
          <parameter name="state" type="GstState"/>
        </parameters>
      </constructor>
      <constructor cname="gst_message_new_reset_time">
        <parameters>
          <parameter name="src" type="GstObject*"/>
          <parameter name="running_time" type="guint64"/>
        </parameters>
      </constructor>
      <constructor cname="gst_message_new_segment_done">
        <parameters>
          <parameter name="src" type="GstObject*"/>
          <parameter name="format" type="GstFormat"/>
          <parameter name="position" type="gint64"/>
        </parameters>
      </constructor>
      <constructor cname="gst_message_new_segment_start">
        <parameters>
          <parameter name="src" type="GstObject*"/>
          <parameter name="format" type="GstFormat"/>
          <parameter name="position" type="gint64"/>
        </parameters>
      </constructor>
      <constructor cname="gst_message_new_state_changed">
        <parameters>
          <parameter name="src" type="GstObject*"/>
          <parameter name="oldstate" type="GstState"/>
          <parameter name="newstate" type="GstState"/>
          <parameter name="pending" type="GstState"/>
        </parameters>
      </constructor>
      <constructor cname="gst_message_new_state_dirty">
        <parameters>
          <parameter name="src" type="GstObject*"/>
        </parameters>
      </constructor>
      <constructor cname="gst_message_new_step_done">
        <parameters>
          <parameter name="src" type="GstObject*"/>
          <parameter name="format" type="GstFormat"/>
          <parameter name="amount" type="guint64"/>
          <parameter name="rate" type="gdouble"/>
          <parameter name="flush" type="gboolean"/>
          <parameter name="intermediate" type="gboolean"/>
          <parameter name="duration" type="guint64"/>
          <parameter name="eos" type="gboolean"/>
        </parameters>
      </constructor>
      <constructor cname="gst_message_new_step_start">
        <parameters>
          <parameter name="src" type="GstObject*"/>
          <parameter name="active" type="gboolean"/>
          <parameter name="format" type="GstFormat"/>
          <parameter name="amount" type="guint64"/>
          <parameter name="rate" type="gdouble"/>
          <parameter name="flush" type="gboolean"/>
          <parameter name="intermediate" type="gboolean"/>
        </parameters>
      </constructor>
      <constructor cname="gst_message_new_stream_start">
        <parameters>
          <parameter name="src" type="GstObject*"/>
        </parameters>
      </constructor>
      <constructor cname="gst_message_new_stream_status">
        <parameters>
          <parameter name="src" type="GstObject*"/>
          <parameter name="type" type="GstStreamStatusType"/>
          <parameter name="owner" type="GstElement*"/>
        </parameters>
      </constructor>
      <constructor cname="gst_message_new_structure_change">
        <parameters>
          <parameter name="src" type="GstObject*"/>
          <parameter name="type" type="GstStructureChangeType"/>
          <parameter name="owner" type="GstElement*"/>
          <parameter name="busy" type="gboolean"/>
        </parameters>
      </constructor>
      <constructor cname="gst_message_new_tag">
        <parameters>
          <parameter name="src" type="GstObject*"/>
          <parameter name="tag_list" type="GstTagList*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </constructor>
      <constructor cname="gst_message_new_toc">
        <parameters>
          <parameter name="src" type="GstObject*"/>
          <parameter name="toc" type="GstToc*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="updated" type="gboolean"/>
        </parameters>
      </constructor>
      <constructor cname="gst_message_new_warning">
        <parameters>
          <parameter name="src" type="GstObject*"/>
          <parameter name="error" type="GError*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="debug" type="const-gchar*"/>
        </parameters>
      </constructor>
      <method name="GetSeqnum" cname="gst_message_get_seqnum">
        <return-type type="guint32"/>
        <parameters/>
      </method>
      <method name="GetStreamStatusObject" cname="gst_message_get_stream_status_object">
        <return-type type="GValue*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetStructure" cname="gst_message_get_structure">
        <return-type type="GstStructure*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="HasName" cname="gst_message_has_name">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="ParseAsyncDone" cname="gst_message_parse_async_done">
        <return-type type="void"/>
        <parameters>
          <parameter name="running_time" type="guint64" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseBuffering" cname="gst_message_parse_buffering">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="percent" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseBufferingStats" cname="gst_message_parse_buffering_stats">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="mode" type="GstBufferingMode" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="avg_in" type="gint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="avg_out" type="gint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="buffering_left" type="gint64*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseClockLost" cname="gst_message_parse_clock_lost">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="clock" type="GstClock*" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseClockProvide" cname="gst_message_parse_clock_provide">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="clock" type="GstClock*" pass_as="out"/>
          <parameter allow-none="1" name="ready" type="gboolean*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseError" cname="gst_message_parse_error">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="gerror" type="GError**" owned="true" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter allow-none="1" name="debug" type="gchar*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseInfo" cname="gst_message_parse_info">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="gerror" type="GError**" owned="true" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter allow-none="1" name="debug" type="gchar*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseNewClock" cname="gst_message_parse_new_clock">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="clock" type="GstClock*" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseProgress" cname="gst_message_parse_progress">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="type" type="GstProgressType" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="code" type="gchar*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="text" type="gchar*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseQos" cname="gst_message_parse_qos">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="live" type="gboolean*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="running_time" type="guint64*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="stream_time" type="guint64*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="timestamp" type="guint64*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="duration" type="guint64*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseQosStats" cname="gst_message_parse_qos_stats">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="format" type="GstFormat" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="processed" type="guint64*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="dropped" type="guint64*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseQosValues" cname="gst_message_parse_qos_values">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="jitter" type="gint64*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="proportion" type="gdouble*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="quality" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseRequestState" cname="gst_message_parse_request_state">
        <return-type type="void"/>
        <parameters>
          <parameter name="state" type="GstState" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseResetTime" cname="gst_message_parse_reset_time">
        <return-type type="void"/>
        <parameters>
          <parameter name="running_time" type="guint64" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseSegmentDone" cname="gst_message_parse_segment_done">
        <return-type type="void"/>
        <parameters>
          <parameter name="format" type="GstFormat" owned="true" pass_as="out"/>
          <parameter name="position" type="gint64*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseSegmentStart" cname="gst_message_parse_segment_start">
        <return-type type="void"/>
        <parameters>
          <parameter name="format" type="GstFormat" owned="true" pass_as="out"/>
          <parameter name="position" type="gint64*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseStateChanged" cname="gst_message_parse_state_changed">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="oldstate" type="GstState" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="newstate" type="GstState" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="pending" type="GstState" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseStepDone" cname="gst_message_parse_step_done">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="format" type="GstFormat" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="amount" type="guint64*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="rate" type="gdouble*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="flush" type="gboolean*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="intermediate" type="gboolean*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="duration" type="guint64*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="eos" type="gboolean*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseStepStart" cname="gst_message_parse_step_start">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="active" type="gboolean*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="format" type="GstFormat" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="amount" type="guint64*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="rate" type="gdouble*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="flush" type="gboolean*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="intermediate" type="gboolean*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseStreamStatus" cname="gst_message_parse_stream_status">
        <return-type type="void"/>
        <parameters>
          <parameter name="type" type="GstStreamStatusType" owned="true" pass_as="out"/>
          <parameter name="owner" type="GstElement*" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseStructureChange" cname="gst_message_parse_structure_change">
        <return-type type="void"/>
        <parameters>
          <parameter name="type" type="GstStructureChangeType" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="owner" type="GstElement*" pass_as="out"/>
          <parameter allow-none="1" name="busy" type="gboolean*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseTag" cname="gst_message_parse_tag">
        <return-type type="void"/>
        <parameters>
          <parameter name="tag_list" type="GstTagList**" owned="true" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ParseToc" cname="gst_message_parse_toc">
        <return-type type="void"/>
        <parameters>
          <parameter name="toc" type="GstToc**" owned="true" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="updated" type="gboolean*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseWarning" cname="gst_message_parse_warning">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="gerror" type="GError**" owned="true" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter allow-none="1" name="debug" type="gchar*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="SetBufferingStats" cname="gst_message_set_buffering_stats">
        <return-type type="void"/>
        <parameters>
          <parameter name="mode" type="GstBufferingMode"/>
          <parameter name="avg_in" type="gint"/>
          <parameter name="avg_out" type="gint"/>
          <parameter name="buffering_left" type="gint64"/>
        </parameters>
      </method>
      <method name="SetQosStats" cname="gst_message_set_qos_stats">
        <return-type type="void"/>
        <parameters>
          <parameter name="format" type="GstFormat"/>
          <parameter name="processed" type="guint64"/>
          <parameter name="dropped" type="guint64"/>
        </parameters>
      </method>
      <method name="SetQosValues" cname="gst_message_set_qos_values">
        <return-type type="void"/>
        <parameters>
          <parameter name="jitter" type="gint64"/>
          <parameter name="proportion" type="gdouble"/>
          <parameter name="quality" type="gint"/>
        </parameters>
      </method>
      <method name="SetSeqnum" cname="gst_message_set_seqnum">
        <return-type type="void"/>
        <parameters>
          <parameter name="seqnum" type="guint32"/>
        </parameters>
      </method>
      <method name="SetStreamStatusObject" cname="gst_message_set_stream_status_object">
        <return-type type="void"/>
        <parameters>
          <parameter name="_object" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
    </boxed>
    <struct name="Meta" cname="GstMeta" opaque="false" hidden="false">
      <field cname="flags" access="public" writeable="true" readable="true" name="Flags" type="GstMetaFlags"/>
      <field cname="info" access="public" writeable="true" readable="true" name="Info" type="GstMetaInfo*">
        <warning>missing glib:type-name</warning>
      </field>
      <method name="ApiTypeHasTag" cname="gst_meta_api_type_has_tag" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="api" type="GType"/>
          <parameter name="tag" type="guint32"/>
        </parameters>
      </method>
      <method name="ApiTypeRegister" cname="gst_meta_api_type_register" shared="true">
        <return-type type="GType"/>
        <parameters>
          <parameter name="api" type="const-gchar*"/>
          <parameter name="tags" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetInfo" cname="gst_meta_get_info" shared="true">
        <return-type type="GstMetaInfo*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="impl" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="Register" cname="gst_meta_register" shared="true">
        <return-type type="GstMetaInfo*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="api" type="GType"/>
          <parameter name="impl" type="const-gchar*"/>
          <parameter name="size" type="gsize"/>
          <parameter scope="async" name="init_func" type="GstMetaInitFunction"/>
          <parameter scope="async" name="free_func" type="GstMetaFreeFunction"/>
          <parameter scope="async" name="transform_func" type="GstMetaTransformFunction"/>
        </parameters>
      </method>
    </struct>
    <struct name="MetaInfo" cname="GstMetaInfo" opaque="false" hidden="false">
      <field cname="api" access="public" writeable="true" readable="true" name="Api" type="GType"/>
      <field cname="type" access="public" writeable="true" readable="true" name="Type" type="GType"/>
      <field cname="size" access="public" writeable="true" readable="true" name="Size" type="gsize"/>
      <field cname="init_func" access="public" writeable="true" readable="true" name="InitFunc" type="GstMetaInitFunction"/>
      <field cname="free_func" access="public" writeable="true" readable="true" name="FreeFunc" type="GstMetaFreeFunction"/>
      <field cname="transform_func" access="public" writeable="true" readable="true" name="TransformFunc" type="GstMetaTransformFunction"/>
      <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
    </struct>
    <struct name="MetaTransformCopy" cname="GstMetaTransformCopy" opaque="false" hidden="false">
      <field cname="region" access="public" writeable="true" readable="true" name="Region" type="gboolean"/>
      <field cname="offset" access="public" writeable="true" readable="true" name="Offset" type="gsize"/>
      <field cname="size" access="public" writeable="true" readable="true" name="Size" type="gsize"/>
    </struct>
    <struct name="MiniObject" cname="GstMiniObject" opaque="false" hidden="false">
      <field cname="type" access="public" writeable="true" readable="true" name="Type" type="GType"/>
      <field cname="refcount" access="public" writeable="true" readable="true" name="Refcount" type="gint"/>
      <field cname="lockstate" access="public" writeable="true" readable="true" name="Lockstate" type="gint"/>
      <field cname="flags" access="public" writeable="true" readable="true" name="Flags" type="guint"/>
      <field cname="copy" access="public" writeable="true" readable="true" name="CopyFunc" type="GstMiniObjectCopyFunction"/>
      <field cname="dispose" access="public" writeable="true" readable="true" name="Dispose" type="GstMiniObjectDisposeFunction"/>
      <field cname="free" access="public" writeable="true" readable="true" name="Free" type="GstMiniObjectFreeFunction"/>
      <field cname="n_qdata" access="private" writeable="false" readable="false" name="NQdata" type="guint"/>
      <field cname="qdata" access="private" writeable="false" readable="false" name="Qdata" type="gpointer"/>
      <method name="GetQdata" cname="gst_mini_object_get_qdata">
        <return-type type="gpointer"/>
        <parameters>
          <parameter name="quark" type="guint32"/>
        </parameters>
      </method>
      <method name="IsWritable" cname="gst_mini_object_is_writable">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="Lock" cname="gst_mini_object_lock">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="flags" type="GstLockFlags"/>
        </parameters>
      </method>
      <method name="SetQdata" cname="gst_mini_object_set_qdata">
        <return-type type="void"/>
        <parameters>
          <parameter name="quark" type="guint32"/>
          <parameter name="data" type="gpointer"/>
          <parameter scope="async" name="destroy" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="StealQdata" cname="gst_mini_object_steal_qdata">
        <return-type type="gpointer*" owned="true"/>
        <parameters>
          <parameter name="quark" type="guint32"/>
        </parameters>
      </method>
      <method name="Unlock" cname="gst_mini_object_unlock">
        <return-type type="void"/>
        <parameters>
          <parameter name="flags" type="GstLockFlags"/>
        </parameters>
      </method>
      <method name="Unref" cname="gst_mini_object_unref">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="Replace" cname="gst_mini_object_replace" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="olddata" type="GstMiniObject**" owned="true" pass_as="ref">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="newdata" type="GstMiniObject*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Take" cname="gst_mini_object_take" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="olddata" type="GstMiniObject**" owned="true" pass_as="ref">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="newdata" type="GstMiniObject*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
    </struct>
    <struct name="PadPrivate" cname="GstPadPrivate" opaque="true" hidden="true"/>
    <struct name="PadProbeInfo" cname="GstPadProbeInfo" opaque="false" hidden="false">
      <field cname="type" access="public" writeable="true" readable="true" name="Type" type="GstPadProbeType"/>
      <field cname="id" access="public" writeable="true" readable="true" name="Id" type="gulong"/>
      <field cname="data" access="public" writeable="true" readable="true" name="Data" type="gpointer"/>
      <field cname="offset" access="public" writeable="true" readable="true" name="Offset" type="guint64"/>
      <field cname="size" access="public" writeable="true" readable="true" name="Size" type="guint"/>
      <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
      <method name="GetBuffer" cname="gst_pad_probe_info_get_buffer">
        <return-type type="GstBuffer*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetBufferList" cname="gst_pad_probe_info_get_buffer_list">
        <return-type type="GstBufferList*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetEvent" cname="gst_pad_probe_info_get_event">
        <return-type type="GstEvent*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetQuery" cname="gst_pad_probe_info_get_query">
        <return-type type="GstQuery*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
    </struct>
    <struct name="ParamSpecFraction" cname="GstParamSpecFraction" opaque="false" hidden="false">
      <field cname="parent_instance" access="public" writeable="true" readable="true" name="ParentInstance" type="GParamSpec*"/>
      <field cname="min_num" access="public" writeable="true" readable="true" name="MinNum" type="gint"/>
      <field cname="min_den" access="public" writeable="true" readable="true" name="MinDen" type="gint"/>
      <field cname="max_num" access="public" writeable="true" readable="true" name="MaxNum" type="gint"/>
      <field cname="max_den" access="public" writeable="true" readable="true" name="MaxDen" type="gint"/>
      <field cname="def_num" access="public" writeable="true" readable="true" name="DefNum" type="gint"/>
      <field cname="def_den" access="public" writeable="true" readable="true" name="DefDen" type="gint"/>
    </struct>
    <boxed name="ParseContext" cname="GstParseContext" opaque="false" hidden="false">
      <method name="GetType" cname="gst_parse_context_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gst_parse_context_new" disable_void_ctor=""/>
      <method name="Free" cname="gst_parse_context_free">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="GetMissingElements" cname="gst_parse_context_get_missing_elements">
        <return-type type="gchar***" owned="true" array="true" null_term_array="true"/>
        <parameters/>
      </method>
    </boxed>
    <struct name="PipelinePrivate" cname="GstPipelinePrivate" opaque="true" hidden="true"/>
    <struct name="PluginDesc" cname="GstPluginDesc" opaque="false" hidden="false">
      <field cname="major_version" access="public" writeable="true" readable="true" name="MajorVersion" type="gint"/>
      <field cname="minor_version" access="public" writeable="true" readable="true" name="MinorVersion" type="gint"/>
      <field cname="name" access="public" writeable="true" readable="true" name="Name" type="gchar*"/>
      <field cname="description" access="public" writeable="true" readable="true" name="Description" type="gchar*"/>
      <field cname="plugin_init" access="public" writeable="true" readable="true" name="PluginInit" type="GstPluginInitFunc"/>
      <field cname="version" access="public" writeable="true" readable="true" name="Version" type="gchar*"/>
      <field cname="license" access="public" writeable="true" readable="true" name="License" type="gchar*"/>
      <field cname="source" access="public" writeable="true" readable="true" name="Source" type="gchar*"/>
      <field cname="package" access="public" writeable="true" readable="true" name="Package" type="gchar*"/>
      <field cname="origin" access="public" writeable="true" readable="true" name="Origin" type="gchar*"/>
      <field cname="release_datetime" access="public" writeable="true" readable="true" name="ReleaseDatetime" type="gchar*"/>
      <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
    </struct>
    <struct name="Poll" cname="GstPoll" opaque="true" hidden="false">
      <method name="AddFd" cname="gst_poll_add_fd">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="fd" type="GstPollFD*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="FdCanRead" cname="gst_poll_fd_can_read">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="fd" type="GstPollFD*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="FdCanWrite" cname="gst_poll_fd_can_write">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="fd" type="GstPollFD*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="FdCtlRead" cname="gst_poll_fd_ctl_read">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="fd" type="GstPollFD*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="active" type="gboolean"/>
        </parameters>
      </method>
      <method name="FdCtlWrite" cname="gst_poll_fd_ctl_write">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="fd" type="GstPollFD*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="active" type="gboolean"/>
        </parameters>
      </method>
      <method name="FdHasClosed" cname="gst_poll_fd_has_closed">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="fd" type="GstPollFD*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="FdHasError" cname="gst_poll_fd_has_error">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="fd" type="GstPollFD*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="FdIgnored" cname="gst_poll_fd_ignored">
        <return-type type="void"/>
        <parameters>
          <parameter name="fd" type="GstPollFD*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Free" cname="gst_poll_free">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="GetReadGpollfd" cname="gst_poll_get_read_gpollfd">
        <return-type type="void"/>
        <parameters>
          <parameter name="fd" type="GPollFD*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ReadControl" cname="gst_poll_read_control">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="RemoveFd" cname="gst_poll_remove_fd">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="fd" type="GstPollFD*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Restart" cname="gst_poll_restart">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="SetControllable" cname="gst_poll_set_controllable">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="controllable" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetFlushing" cname="gst_poll_set_flushing">
        <return-type type="void"/>
        <parameters>
          <parameter name="flushing" type="gboolean"/>
        </parameters>
      </method>
      <method name="Wait" cname="gst_poll_wait">
        <return-type type="gint"/>
        <parameters>
          <parameter name="timeout" type="guint64"/>
        </parameters>
      </method>
      <method name="WriteControl" cname="gst_poll_write_control">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
    </struct>
    <struct name="PollFD" cname="GstPollFD" opaque="false" hidden="false">
      <field cname="fd" access="public" writeable="true" readable="true" name="Fd" type="gint"/>
      <field cname="idx" access="private" writeable="false" readable="false" name="Idx" type="gint"/>
      <method name="Init" cname="gst_poll_fd_init">
        <return-type type="void"/>
        <parameters/>
      </method>
    </struct>
    <struct name="ProxyPadPrivate" cname="GstProxyPadPrivate" opaque="true" hidden="true"/>
    <boxed name="Query" cname="GstQuery" opaque="false" hidden="false">
      <method name="GetType" cname="gst_query_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <field cname="mini_object" access="public" writeable="true" readable="true" name="MiniObject" type="GstMiniObject">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="type" access="public" writeable="true" readable="true" name="Type" type="GstQueryType"/>
      <constructor cname="gst_query_new_accept_caps">
        <parameters>
          <parameter name="caps" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </constructor>
      <constructor cname="gst_query_new_allocation">
        <parameters>
          <parameter name="caps" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="need_pool" type="gboolean"/>
        </parameters>
      </constructor>
      <constructor cname="gst_query_new_buffering">
        <parameters>
          <parameter name="format" type="GstFormat"/>
        </parameters>
      </constructor>
      <constructor cname="gst_query_new_caps">
        <parameters>
          <parameter name="filter" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </constructor>
      <constructor cname="gst_query_new_convert">
        <parameters>
          <parameter name="src_format" type="GstFormat"/>
          <parameter name="value" type="gint64"/>
          <parameter name="dest_format" type="GstFormat"/>
        </parameters>
      </constructor>
      <constructor cname="gst_query_new_custom">
        <parameters>
          <parameter name="type" type="GstQueryType"/>
          <parameter name="structure" type="GstStructure*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </constructor>
      <constructor cname="gst_query_new_drain" disable_void_ctor=""/>
      <constructor cname="gst_query_new_duration">
        <parameters>
          <parameter name="format" type="GstFormat"/>
        </parameters>
      </constructor>
      <constructor cname="gst_query_new_formats" disable_void_ctor=""/>
      <constructor cname="gst_query_new_latency" disable_void_ctor=""/>
      <constructor cname="gst_query_new_position">
        <parameters>
          <parameter name="format" type="GstFormat"/>
        </parameters>
      </constructor>
      <constructor cname="gst_query_new_scheduling" disable_void_ctor=""/>
      <constructor cname="gst_query_new_seeking">
        <parameters>
          <parameter name="format" type="GstFormat"/>
        </parameters>
      </constructor>
      <constructor cname="gst_query_new_segment">
        <parameters>
          <parameter name="format" type="GstFormat"/>
        </parameters>
      </constructor>
      <constructor cname="gst_query_new_uri" disable_void_ctor=""/>
      <method name="AddAllocationMeta" cname="gst_query_add_allocation_meta">
        <return-type type="void"/>
        <parameters>
          <parameter name="api" type="GType"/>
          <parameter allow-none="1" name="params" type="GstStructure*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="AddAllocationParam" cname="gst_query_add_allocation_param">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="allocator" type="GstAllocator*"/>
          <parameter allow-none="1" name="params" type="GstAllocationParams*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="AddAllocationPool" cname="gst_query_add_allocation_pool">
        <return-type type="void"/>
        <parameters>
          <parameter name="pool" type="GstBufferPool*"/>
          <parameter name="size" type="guint"/>
          <parameter name="min_buffers" type="guint"/>
          <parameter name="max_buffers" type="guint"/>
        </parameters>
      </method>
      <method name="AddBufferingRange" cname="gst_query_add_buffering_range">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="start" type="gint64"/>
          <parameter name="stop" type="gint64"/>
        </parameters>
      </method>
      <method name="AddSchedulingMode" cname="gst_query_add_scheduling_mode">
        <return-type type="void"/>
        <parameters>
          <parameter name="mode" type="GstPadMode"/>
        </parameters>
      </method>
      <method name="FindAllocationMeta" cname="gst_query_find_allocation_meta">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="api" type="GType"/>
          <parameter allow-none="1" name="index" type="guint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetNAllocationMetas" cname="gst_query_get_n_allocation_metas">
        <return-type type="guint"/>
        <parameters/>
      </method>
      <method name="GetNAllocationParams" cname="gst_query_get_n_allocation_params">
        <return-type type="guint"/>
        <parameters/>
      </method>
      <method name="GetNAllocationPools" cname="gst_query_get_n_allocation_pools">
        <return-type type="guint"/>
        <parameters/>
      </method>
      <method name="GetNBufferingRanges" cname="gst_query_get_n_buffering_ranges">
        <return-type type="guint"/>
        <parameters/>
      </method>
      <method name="GetNSchedulingModes" cname="gst_query_get_n_scheduling_modes">
        <return-type type="guint"/>
        <parameters/>
      </method>
      <method name="GetStructure" cname="gst_query_get_structure">
        <return-type type="GstStructure*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="HasSchedulingMode" cname="gst_query_has_scheduling_mode">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="mode" type="GstPadMode"/>
        </parameters>
      </method>
      <method name="HasSchedulingModeWithFlags" cname="gst_query_has_scheduling_mode_with_flags">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="mode" type="GstPadMode"/>
          <parameter name="flags" type="GstSchedulingFlags"/>
        </parameters>
      </method>
      <method name="ParseAcceptCaps" cname="gst_query_parse_accept_caps">
        <return-type type="void"/>
        <parameters>
          <parameter name="caps" type="GstCaps**" owned="true" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ParseAcceptCapsResult" cname="gst_query_parse_accept_caps_result">
        <return-type type="void"/>
        <parameters>
          <parameter name="_result" type="gboolean"/>
        </parameters>
      </method>
      <method name="ParseAllocation" cname="gst_query_parse_allocation">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="caps" type="GstCaps**" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter allow-none="1" name="need_pool" type="gboolean*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseBufferingPercent" cname="gst_query_parse_buffering_percent">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="busy" type="gboolean*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="percent" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseBufferingRange" cname="gst_query_parse_buffering_range">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="format" type="GstFormat" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="start" type="gint64*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="stop" type="gint64*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="estimated_total" type="gint64*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseBufferingStats" cname="gst_query_parse_buffering_stats">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="mode" type="GstBufferingMode" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="avg_in" type="gint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="avg_out" type="gint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="buffering_left" type="gint64*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseCaps" cname="gst_query_parse_caps">
        <return-type type="void"/>
        <parameters>
          <parameter name="filter" type="GstCaps**" owned="true" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ParseCapsResult" cname="gst_query_parse_caps_result">
        <return-type type="void"/>
        <parameters>
          <parameter name="caps" type="GstCaps**" owned="true" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ParseConvert" cname="gst_query_parse_convert">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="src_format" type="GstFormat" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="src_value" type="gint64*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="dest_format" type="GstFormat" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="dest_value" type="gint64*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseDuration" cname="gst_query_parse_duration">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="format" type="GstFormat" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="duration" type="gint64*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseLatency" cname="gst_query_parse_latency">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="live" type="gboolean*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="min_latency" type="guint64" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="max_latency" type="guint64" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseNFormats" cname="gst_query_parse_n_formats">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="n_formats" type="guint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseNthAllocationMeta" cname="gst_query_parse_nth_allocation_meta">
        <return-type type="GType"/>
        <parameters>
          <parameter name="index" type="guint"/>
          <parameter allow-none="1" name="params" type="GstStructure**" owned="true" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ParseNthAllocationParam" cname="gst_query_parse_nth_allocation_param">
        <return-type type="void"/>
        <parameters>
          <parameter name="index" type="guint"/>
          <parameter allow-none="1" name="allocator" type="GstAllocator*" pass_as="out"/>
          <parameter allow-none="1" name="params" type="GstAllocationParams*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ParseNthAllocationPool" cname="gst_query_parse_nth_allocation_pool">
        <return-type type="void"/>
        <parameters>
          <parameter name="index" type="guint"/>
          <parameter allow-none="1" name="pool" type="GstBufferPool*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="size" type="guint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="min_buffers" type="guint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="max_buffers" type="guint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseNthBufferingRange" cname="gst_query_parse_nth_buffering_range">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="index" type="guint"/>
          <parameter allow-none="1" name="start" type="gint64*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="stop" type="gint64*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseNthFormat" cname="gst_query_parse_nth_format">
        <return-type type="void"/>
        <parameters>
          <parameter name="nth" type="guint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="format" type="GstFormat" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseNthSchedulingMode" cname="gst_query_parse_nth_scheduling_mode">
        <return-type type="GstPadMode"/>
        <parameters>
          <parameter name="index" type="guint"/>
        </parameters>
      </method>
      <method name="ParsePosition" cname="gst_query_parse_position">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="format" type="GstFormat" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="cur" type="gint64*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseScheduling" cname="gst_query_parse_scheduling">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="flags" type="GstSchedulingFlags" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="minsize" type="gint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="maxsize" type="gint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="align" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseSeeking" cname="gst_query_parse_seeking">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="format" type="GstFormat" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="seekable" type="gboolean*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="segment_start" type="gint64*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="segment_end" type="gint64*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseSegment" cname="gst_query_parse_segment">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="rate" type="gdouble*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="format" type="GstFormat" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="start_value" type="gint64*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="stop_value" type="gint64*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ParseUri" cname="gst_query_parse_uri">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="uri" type="gchar*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="RemoveNthAllocationMeta" cname="gst_query_remove_nth_allocation_meta">
        <return-type type="void"/>
        <parameters>
          <parameter name="index" type="guint"/>
        </parameters>
      </method>
      <method name="SetAcceptCapsResult" cname="gst_query_set_accept_caps_result">
        <return-type type="void"/>
        <parameters>
          <parameter name="_result" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetBufferingPercent" cname="gst_query_set_buffering_percent">
        <return-type type="void"/>
        <parameters>
          <parameter name="busy" type="gboolean"/>
          <parameter name="percent" type="gint"/>
        </parameters>
      </method>
      <method name="SetBufferingRange" cname="gst_query_set_buffering_range">
        <return-type type="void"/>
        <parameters>
          <parameter name="format" type="GstFormat"/>
          <parameter name="start" type="gint64"/>
          <parameter name="stop" type="gint64"/>
          <parameter name="estimated_total" type="gint64"/>
        </parameters>
      </method>
      <method name="SetBufferingStats" cname="gst_query_set_buffering_stats">
        <return-type type="void"/>
        <parameters>
          <parameter name="mode" type="GstBufferingMode"/>
          <parameter name="avg_in" type="gint"/>
          <parameter name="avg_out" type="gint"/>
          <parameter name="buffering_left" type="gint64"/>
        </parameters>
      </method>
      <method name="SetCapsResult" cname="gst_query_set_caps_result">
        <return-type type="void"/>
        <parameters>
          <parameter name="caps" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetConvert" cname="gst_query_set_convert">
        <return-type type="void"/>
        <parameters>
          <parameter name="src_format" type="GstFormat"/>
          <parameter name="src_value" type="gint64"/>
          <parameter name="dest_format" type="GstFormat"/>
          <parameter name="dest_value" type="gint64"/>
        </parameters>
      </method>
      <method name="SetDuration" cname="gst_query_set_duration">
        <return-type type="void"/>
        <parameters>
          <parameter name="format" type="GstFormat"/>
          <parameter name="duration" type="gint64"/>
        </parameters>
      </method>
      <method name="SetFormatsv" cname="gst_query_set_formatsv">
        <return-type type="void"/>
        <parameters>
          <parameter name="n_formats" type="gint"/>
          <parameter name="formats" type="GstFormat*" array="true" array_length_param_index="0"/>
        </parameters>
      </method>
      <method name="SetLatency" cname="gst_query_set_latency">
        <return-type type="void"/>
        <parameters>
          <parameter name="live" type="gboolean"/>
          <parameter name="min_latency" type="guint64"/>
          <parameter name="max_latency" type="guint64"/>
        </parameters>
      </method>
      <method name="SetNthAllocationParam" cname="gst_query_set_nth_allocation_param">
        <return-type type="void"/>
        <parameters>
          <parameter name="index" type="guint"/>
          <parameter allow-none="1" name="allocator" type="GstAllocator*"/>
          <parameter allow-none="1" name="params" type="GstAllocationParams*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetNthAllocationPool" cname="gst_query_set_nth_allocation_pool">
        <return-type type="void"/>
        <parameters>
          <parameter name="index" type="guint"/>
          <parameter name="pool" type="GstBufferPool*"/>
          <parameter name="size" type="guint"/>
          <parameter name="min_buffers" type="guint"/>
          <parameter name="max_buffers" type="guint"/>
        </parameters>
      </method>
      <method name="SetPosition" cname="gst_query_set_position">
        <return-type type="void"/>
        <parameters>
          <parameter name="format" type="GstFormat"/>
          <parameter name="cur" type="gint64"/>
        </parameters>
      </method>
      <method name="SetScheduling" cname="gst_query_set_scheduling">
        <return-type type="void"/>
        <parameters>
          <parameter name="flags" type="GstSchedulingFlags"/>
          <parameter name="minsize" type="gint"/>
          <parameter name="maxsize" type="gint"/>
          <parameter name="align" type="gint"/>
        </parameters>
      </method>
      <method name="SetSeeking" cname="gst_query_set_seeking">
        <return-type type="void"/>
        <parameters>
          <parameter name="format" type="GstFormat"/>
          <parameter name="seekable" type="gboolean"/>
          <parameter name="segment_start" type="gint64"/>
          <parameter name="segment_end" type="gint64"/>
        </parameters>
      </method>
      <method name="SetSegment" cname="gst_query_set_segment">
        <return-type type="void"/>
        <parameters>
          <parameter name="rate" type="gdouble"/>
          <parameter name="format" type="GstFormat"/>
          <parameter name="start_value" type="gint64"/>
          <parameter name="stop_value" type="gint64"/>
        </parameters>
      </method>
      <method name="SetUri" cname="gst_query_set_uri">
        <return-type type="void"/>
        <parameters>
          <parameter name="uri" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="WritableStructure" cname="gst_query_writable_structure">
        <return-type type="GstStructure*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
    </boxed>
    <struct name="RegistryPrivate" cname="GstRegistryPrivate" opaque="true" hidden="true"/>
    <boxed name="Sample" cname="GstSample" opaque="false" hidden="false">
      <method name="GetType" cname="gst_sample_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gst_sample_new">
        <parameters>
          <parameter name="buffer" type="GstBuffer*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="caps" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="segment" type="GstSegment*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="info" type="GstStructure*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </constructor>
      <method name="GetBuffer" cname="gst_sample_get_buffer">
        <return-type type="GstBuffer*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetCaps" cname="gst_sample_get_caps">
        <return-type type="GstCaps*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetInfo" cname="gst_sample_get_info">
        <return-type type="GstStructure*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetSegment" cname="gst_sample_get_segment">
        <return-type type="GstSegment*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
    </boxed>
    <boxed name="Segment" cname="GstSegment" opaque="false" hidden="false">
      <method name="GetType" cname="gst_segment_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <field cname="flags" access="public" writeable="true" readable="true" name="Flags" type="GstSegmentFlags"/>
      <field cname="rate" access="public" writeable="true" readable="true" name="Rate" type="gdouble"/>
      <field cname="applied_rate" access="public" writeable="true" readable="true" name="AppliedRate" type="gdouble"/>
      <field cname="format" access="public" writeable="true" readable="true" name="Format" type="GstFormat"/>
      <field cname="base" access="public" writeable="true" readable="true" name="Base" type="guint64"/>
      <field cname="offset" access="public" writeable="true" readable="true" name="Offset" type="guint64"/>
      <field cname="start" access="public" writeable="true" readable="true" name="Start" type="guint64"/>
      <field cname="stop" access="public" writeable="true" readable="true" name="Stop" type="guint64"/>
      <field cname="time" access="public" writeable="true" readable="true" name="Time" type="guint64"/>
      <field cname="position" access="public" writeable="true" readable="true" name="Position" type="guint64"/>
      <field cname="duration" access="public" writeable="true" readable="true" name="Duration" type="guint64"/>
      <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
      <constructor cname="gst_segment_new" disable_void_ctor=""/>
      <method name="Clip" cname="gst_segment_clip">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="format" type="GstFormat"/>
          <parameter name="start" type="guint64"/>
          <parameter name="stop" type="guint64"/>
          <parameter allow-none="1" name="clip_start" type="guint64*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="clip_stop" type="guint64*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="Copy" cname="gst_segment_copy">
        <return-type type="GstSegment*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="CopyInto" cname="gst_segment_copy_into">
        <return-type type="void"/>
        <parameters>
          <parameter name="dest" type="GstSegment*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="DoSeek" cname="gst_segment_do_seek">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="rate" type="gdouble"/>
          <parameter name="format" type="GstFormat"/>
          <parameter name="flags" type="GstSeekFlags"/>
          <parameter name="start_type" type="GstSeekType"/>
          <parameter name="start" type="guint64"/>
          <parameter name="stop_type" type="GstSeekType"/>
          <parameter name="stop" type="guint64"/>
          <parameter name="update" type="gboolean"/>
        </parameters>
      </method>
      <method name="Free" cname="gst_segment_free">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="Init" cname="gst_segment_init">
        <return-type type="void"/>
        <parameters>
          <parameter name="format" type="GstFormat"/>
        </parameters>
      </method>
      <method name="SetRunningTime" cname="gst_segment_set_running_time">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="format" type="GstFormat"/>
          <parameter name="running_time" type="guint64"/>
        </parameters>
      </method>
      <method name="ToPosition" cname="gst_segment_to_position">
        <return-type type="guint64"/>
        <parameters>
          <parameter name="format" type="GstFormat"/>
          <parameter name="running_time" type="guint64"/>
        </parameters>
      </method>
      <method name="ToRunningTime" cname="gst_segment_to_running_time">
        <return-type type="guint64"/>
        <parameters>
          <parameter name="format" type="GstFormat"/>
          <parameter name="position" type="guint64"/>
        </parameters>
      </method>
      <method name="ToStreamTime" cname="gst_segment_to_stream_time">
        <return-type type="guint64"/>
        <parameters>
          <parameter name="format" type="GstFormat"/>
          <parameter name="position" type="guint64"/>
        </parameters>
      </method>
    </boxed>
    <struct name="StaticCaps" cname="GstStaticCaps" opaque="false" hidden="false">
      <field cname="caps" access="public" writeable="true" readable="true" name="Caps" type="GstCaps*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="string" access="public" writeable="true" readable="true" name="String" type="gchar*"/>
      <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
      <method name="Cleanup" cname="gst_static_caps_cleanup">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="Get" cname="gst_static_caps_get">
        <return-type type="GstCaps*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
    </struct>
    <struct name="StaticPadTemplate" cname="GstStaticPadTemplate" opaque="false" hidden="false">
      <field cname="name_template" access="public" writeable="true" readable="true" name="NameTemplate" type="gchar*"/>
      <field cname="direction" access="public" writeable="true" readable="true" name="Direction" type="GstPadDirection"/>
      <field cname="presence" access="public" writeable="true" readable="true" name="Presence" type="GstPadPresence"/>
      <field cname="static_caps" access="public" writeable="true" readable="true" name="StaticCaps" type="GstStaticCaps">
        <warning>missing glib:type-name</warning>
      </field>
      <method name="Get" cname="gst_static_pad_template_get">
        <return-type type="GstPadTemplate*" owned="true"/>
        <parameters/>
      </method>
      <method name="GetCaps" cname="gst_static_pad_template_get_caps">
        <return-type type="GstCaps*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
    </struct>
    <boxed name="Structure" cname="GstStructure" opaque="false" hidden="false">
      <method name="GetType" cname="gst_structure_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <field cname="type" access="public" writeable="true" readable="true" name="Type" type="GType"/>
      <field cname="name" access="private" writeable="false" readable="false" name="Name" type="guint32"/>
      <constructor cname="gst_structure_new_empty">
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </constructor>
      <constructor cname="gst_structure_new_id_empty">
        <parameters>
          <parameter name="quark" type="guint32"/>
        </parameters>
      </constructor>
      <method name="CanIntersect" cname="gst_structure_can_intersect">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="struct2" type="GstStructure*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Copy" cname="gst_structure_copy">
        <return-type type="GstStructure*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="Fixate" cname="gst_structure_fixate">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="FixateField" cname="gst_structure_fixate_field">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="field_name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="FixateFieldBoolean" cname="gst_structure_fixate_field_boolean">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="field_name" type="const-gchar*"/>
          <parameter name="target" type="gboolean"/>
        </parameters>
      </method>
      <method name="FixateFieldNearestDouble" cname="gst_structure_fixate_field_nearest_double">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="field_name" type="const-gchar*"/>
          <parameter name="target" type="gdouble"/>
        </parameters>
      </method>
      <method name="FixateFieldNearestFraction" cname="gst_structure_fixate_field_nearest_fraction">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="field_name" type="const-gchar*"/>
          <parameter name="target_numerator" type="gint"/>
          <parameter name="target_denominator" type="gint"/>
        </parameters>
      </method>
      <method name="FixateFieldNearestInt" cname="gst_structure_fixate_field_nearest_int">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="field_name" type="const-gchar*"/>
          <parameter name="target" type="gint"/>
        </parameters>
      </method>
      <method name="FixateFieldString" cname="gst_structure_fixate_field_string">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="field_name" type="const-gchar*"/>
          <parameter name="target" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="Foreach" cname="gst_structure_foreach">
        <return-type type="gboolean"/>
        <parameters>
          <parameter closure="1" scope="call" name="func" type="GstStructureForeachFunc"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="Free" cname="gst_structure_free">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="GetBoolean" cname="gst_structure_get_boolean">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="fieldname" type="const-gchar*"/>
          <parameter name="value" type="gboolean*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetClockTime" cname="gst_structure_get_clock_time">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="fieldname" type="const-gchar*"/>
          <parameter name="value" type="guint64" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetDate" cname="gst_structure_get_date">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="fieldname" type="const-gchar*"/>
          <parameter name="value" type="GDate**" owned="true" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetDateTime" cname="gst_structure_get_date_time">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="fieldname" type="const-gchar*"/>
          <parameter name="value" type="GstDateTime**" owned="true" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetDouble" cname="gst_structure_get_double">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="fieldname" type="const-gchar*"/>
          <parameter name="value" type="gdouble*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetEnum" cname="gst_structure_get_enum">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="fieldname" type="const-gchar*"/>
          <parameter name="enumtype" type="GType"/>
          <parameter name="value" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetFieldType" cname="gst_structure_get_field_type">
        <return-type type="GType"/>
        <parameters>
          <parameter name="fieldname" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetFraction" cname="gst_structure_get_fraction">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="fieldname" type="const-gchar*"/>
          <parameter name="value_numerator" type="gint*" owned="true" pass_as="out"/>
          <parameter name="value_denominator" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetInt" cname="gst_structure_get_int">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="fieldname" type="const-gchar*"/>
          <parameter name="value" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetName" cname="gst_structure_get_name">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetNameId" cname="gst_structure_get_name_id">
        <return-type type="guint32"/>
        <parameters/>
      </method>
      <method name="GetString" cname="gst_structure_get_string">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="fieldname" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetUint" cname="gst_structure_get_uint">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="fieldname" type="const-gchar*"/>
          <parameter name="value" type="guint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetValue" cname="gst_structure_get_value">
        <return-type type="GValue*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="fieldname" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="HasField" cname="gst_structure_has_field">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="fieldname" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="HasFieldTyped" cname="gst_structure_has_field_typed">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="fieldname" type="const-gchar*"/>
          <parameter name="type" type="GType"/>
        </parameters>
      </method>
      <method name="HasName" cname="gst_structure_has_name">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="IdGetValue" cname="gst_structure_id_get_value">
        <return-type type="GValue*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="field" type="guint32"/>
        </parameters>
      </method>
      <method name="IdHasField" cname="gst_structure_id_has_field">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="field" type="guint32"/>
        </parameters>
      </method>
      <method name="IdHasFieldTyped" cname="gst_structure_id_has_field_typed">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="field" type="guint32"/>
          <parameter name="type" type="GType"/>
        </parameters>
      </method>
      <method name="IdSetValue" cname="gst_structure_id_set_value">
        <return-type type="void"/>
        <parameters>
          <parameter name="field" type="guint32"/>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="IdTakeValue" cname="gst_structure_id_take_value">
        <return-type type="void"/>
        <parameters>
          <parameter name="field" type="guint32"/>
          <parameter name="value" type="GValue*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Intersect" cname="gst_structure_intersect">
        <return-type type="GstStructure*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="struct2" type="GstStructure*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="IsEqual" cname="gst_structure_is_equal">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="structure2" type="GstStructure*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="IsSubset" cname="gst_structure_is_subset">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="superset" type="GstStructure*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="MapInPlace" cname="gst_structure_map_in_place">
        <return-type type="gboolean"/>
        <parameters>
          <parameter closure="1" scope="call" name="func" type="GstStructureMapFunc"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="NFields" cname="gst_structure_n_fields">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="NthFieldName" cname="gst_structure_nth_field_name">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="index" type="guint"/>
        </parameters>
      </method>
      <method name="RemoveAllFields" cname="gst_structure_remove_all_fields">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="RemoveField" cname="gst_structure_remove_field">
        <return-type type="void"/>
        <parameters>
          <parameter name="fieldname" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetName" cname="gst_structure_set_name">
        <return-type type="void"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetParentRefcount" cname="gst_structure_set_parent_refcount">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="refcount" type="gint"/>
        </parameters>
      </method>
      <method name="SetValue" cname="gst_structure_set_value">
        <return-type type="void"/>
        <parameters>
          <parameter name="fieldname" type="const-gchar*"/>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="TakeValue" cname="gst_structure_take_value">
        <return-type type="void"/>
        <parameters>
          <parameter name="fieldname" type="const-gchar*"/>
          <parameter name="value" type="GValue*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ToString" cname="gst_structure_to_string">
        <return-type type="gchar*" owned="true"/>
        <parameters/>
      </method>
      <method name="FromString" cname="gst_structure_from_string" shared="true">
        <return-type type="GstStructure*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="string" type="const-gchar*"/>
          <parameter allow-none="1" name="end" type="const-gchar*" pass_as="out"/>
        </parameters>
      </method>
    </boxed>
    <struct name="SystemClockPrivate" cname="GstSystemClockPrivate" opaque="true" hidden="true"/>
    <boxed name="TagList" cname="GstTagList" opaque="false" hidden="false">
      <method name="GetType" cname="gst_tag_list_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <field cname="mini_object" access="public" writeable="true" readable="true" name="MiniObject" type="GstMiniObject">
        <warning>missing glib:type-name</warning>
      </field>
      <constructor cname="gst_tag_list_new_empty" disable_void_ctor=""/>
      <constructor cname="gst_tag_list_new_from_string">
        <parameters>
          <parameter name="str" type="const-gchar*"/>
        </parameters>
      </constructor>
      <method name="AddValue" cname="gst_tag_list_add_value">
        <return-type type="void"/>
        <parameters>
          <parameter name="mode" type="GstTagMergeMode"/>
          <parameter name="tag" type="const-gchar*"/>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Foreach" cname="gst_tag_list_foreach">
        <return-type type="void"/>
        <parameters>
          <parameter closure="1" scope="call" name="func" type="GstTagForeachFunc"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="GetBoolean" cname="gst_tag_list_get_boolean">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="tag" type="const-gchar*"/>
          <parameter name="value" type="gboolean*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetBooleanIndex" cname="gst_tag_list_get_boolean_index">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="tag" type="const-gchar*"/>
          <parameter name="index" type="guint"/>
          <parameter name="value" type="gboolean*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetDate" cname="gst_tag_list_get_date">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="tag" type="const-gchar*"/>
          <parameter name="value" type="GDate**" owned="true" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetDateIndex" cname="gst_tag_list_get_date_index">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="tag" type="const-gchar*"/>
          <parameter name="index" type="guint"/>
          <parameter name="value" type="GDate**" owned="true" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetDateTime" cname="gst_tag_list_get_date_time">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="tag" type="const-gchar*"/>
          <parameter name="value" type="GstDateTime**" owned="true" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetDateTimeIndex" cname="gst_tag_list_get_date_time_index">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="tag" type="const-gchar*"/>
          <parameter name="index" type="guint"/>
          <parameter name="value" type="GstDateTime**" owned="true" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetDouble" cname="gst_tag_list_get_double">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="tag" type="const-gchar*"/>
          <parameter name="value" type="gdouble*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetDoubleIndex" cname="gst_tag_list_get_double_index">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="tag" type="const-gchar*"/>
          <parameter name="index" type="guint"/>
          <parameter name="value" type="gdouble*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetFloat" cname="gst_tag_list_get_float">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="tag" type="const-gchar*"/>
          <parameter name="value" type="gfloat*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetFloatIndex" cname="gst_tag_list_get_float_index">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="tag" type="const-gchar*"/>
          <parameter name="index" type="guint"/>
          <parameter name="value" type="gfloat*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetInt" cname="gst_tag_list_get_int">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="tag" type="const-gchar*"/>
          <parameter name="value" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetInt64" cname="gst_tag_list_get_int64">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="tag" type="const-gchar*"/>
          <parameter name="value" type="gint64"/>
        </parameters>
      </method>
      <method name="GetInt64Index" cname="gst_tag_list_get_int64_index">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="tag" type="const-gchar*"/>
          <parameter name="index" type="guint"/>
          <parameter name="value" type="gint64*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetIntIndex" cname="gst_tag_list_get_int_index">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="tag" type="const-gchar*"/>
          <parameter name="index" type="guint"/>
          <parameter name="value" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetPointer" cname="gst_tag_list_get_pointer">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="tag" type="const-gchar*"/>
          <parameter name="value" type="gpointer" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetPointerIndex" cname="gst_tag_list_get_pointer_index">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="tag" type="const-gchar*"/>
          <parameter name="index" type="guint"/>
          <parameter name="value" type="gpointer" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetSample" cname="gst_tag_list_get_sample">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="tag" type="const-gchar*"/>
          <parameter name="sample" type="GstSample**" owned="true" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetSampleIndex" cname="gst_tag_list_get_sample_index">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="tag" type="const-gchar*"/>
          <parameter name="index" type="guint"/>
          <parameter name="sample" type="GstSample**" owned="true" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetScope" cname="gst_tag_list_get_scope">
        <return-type type="GstTagScope"/>
        <parameters/>
      </method>
      <method name="GetString" cname="gst_tag_list_get_string">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="tag" type="const-gchar*"/>
          <parameter name="value" type="gchar*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetStringIndex" cname="gst_tag_list_get_string_index">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="tag" type="const-gchar*"/>
          <parameter name="index" type="guint"/>
          <parameter name="value" type="gchar*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetTagSize" cname="gst_tag_list_get_tag_size">
        <return-type type="guint"/>
        <parameters>
          <parameter name="tag" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetUint" cname="gst_tag_list_get_uint">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="tag" type="const-gchar*"/>
          <parameter name="value" type="guint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetUint64" cname="gst_tag_list_get_uint64">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="tag" type="const-gchar*"/>
          <parameter name="value" type="guint64*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetUint64Index" cname="gst_tag_list_get_uint64_index">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="tag" type="const-gchar*"/>
          <parameter name="index" type="guint"/>
          <parameter name="value" type="guint64*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetUintIndex" cname="gst_tag_list_get_uint_index">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="tag" type="const-gchar*"/>
          <parameter name="index" type="guint"/>
          <parameter name="value" type="guint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetValueIndex" cname="gst_tag_list_get_value_index">
        <return-type type="GValue*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="tag" type="const-gchar*"/>
          <parameter name="index" type="guint"/>
        </parameters>
      </method>
      <method name="Insert" cname="gst_tag_list_insert">
        <return-type type="void"/>
        <parameters>
          <parameter name="from" type="GstTagList*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="mode" type="GstTagMergeMode"/>
        </parameters>
      </method>
      <method name="IsEmpty" cname="gst_tag_list_is_empty">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="IsEqual" cname="gst_tag_list_is_equal">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="list2" type="GstTagList*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Merge" cname="gst_tag_list_merge">
        <return-type type="GstTagList*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="list2" type="GstTagList*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="mode" type="GstTagMergeMode"/>
        </parameters>
      </method>
      <method name="NTags" cname="gst_tag_list_n_tags">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="NthTagName" cname="gst_tag_list_nth_tag_name">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="index" type="guint"/>
        </parameters>
      </method>
      <method name="PeekStringIndex" cname="gst_tag_list_peek_string_index">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="tag" type="const-gchar*"/>
          <parameter name="index" type="guint"/>
          <parameter name="value" type="const-gchar*" pass_as="out"/>
        </parameters>
      </method>
      <method name="RemoveTag" cname="gst_tag_list_remove_tag">
        <return-type type="void"/>
        <parameters>
          <parameter name="tag" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetScope" cname="gst_tag_list_set_scope">
        <return-type type="void"/>
        <parameters>
          <parameter name="scope" type="GstTagScope"/>
        </parameters>
      </method>
      <method name="ToString" cname="gst_tag_list_to_string">
        <return-type type="gchar*" owned="true"/>
        <parameters/>
      </method>
      <method name="CopyValue" cname="gst_tag_list_copy_value" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="dest" type="GValue*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="list" type="GstTagList*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="tag" type="const-gchar*"/>
        </parameters>
      </method>
    </boxed>
    <struct name="TaskPrivate" cname="GstTaskPrivate" opaque="true" hidden="true"/>
    <struct name="TimedValue" cname="GstTimedValue" opaque="false" hidden="false">
      <field cname="timestamp" access="public" writeable="true" readable="true" name="Timestamp" type="guint64"/>
      <field cname="value" access="public" writeable="true" readable="true" name="Value" type="gdouble"/>
    </struct>
    <boxed name="Toc" cname="GstToc" opaque="false" hidden="false">
      <method name="GetType" cname="gst_toc_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gst_toc_new">
        <parameters>
          <parameter name="scope" type="GstTocScope"/>
        </parameters>
      </constructor>
      <method name="AppendEntry" cname="gst_toc_append_entry">
        <return-type type="void"/>
        <parameters>
          <parameter name="entry" type="GstTocEntry*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Dump" cname="gst_toc_dump">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="FindEntry" cname="gst_toc_find_entry">
        <return-type type="GstTocEntry*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="uid" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetEntries" cname="gst_toc_get_entries">
        <return-type type="GList*" element_type="GList*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetScope" cname="gst_toc_get_scope">
        <return-type type="GstTocScope"/>
        <parameters/>
      </method>
      <method name="GetTags" cname="gst_toc_get_tags">
        <return-type type="GstTagList*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="MergeTags" cname="gst_toc_merge_tags">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="tags" type="GstTagList*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="mode" type="GstTagMergeMode"/>
        </parameters>
      </method>
      <method name="SetTags" cname="gst_toc_set_tags">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="tags" type="GstTagList*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
    </boxed>
    <boxed name="TocEntry" cname="GstTocEntry" opaque="false" hidden="false">
      <method name="GetType" cname="gst_toc_entry_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gst_toc_entry_new">
        <parameters>
          <parameter name="type" type="GstTocEntryType"/>
          <parameter name="uid" type="const-gchar*"/>
        </parameters>
      </constructor>
      <method name="AppendSubEntry" cname="gst_toc_entry_append_sub_entry">
        <return-type type="void"/>
        <parameters>
          <parameter name="subentry" type="GstTocEntry*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetEntryType" cname="gst_toc_entry_get_entry_type">
        <return-type type="GstTocEntryType"/>
        <parameters/>
      </method>
      <method name="GetParent" cname="gst_toc_entry_get_parent">
        <return-type type="GstTocEntry*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetStartStopTimes" cname="gst_toc_entry_get_start_stop_times">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="start" type="gint64*" owned="true" pass_as="out"/>
          <parameter name="stop" type="gint64*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetSubEntries" cname="gst_toc_entry_get_sub_entries">
        <return-type type="GList*" element_type="GList*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetTags" cname="gst_toc_entry_get_tags">
        <return-type type="GstTagList*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetToc" cname="gst_toc_entry_get_toc">
        <return-type type="GstToc*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetUid" cname="gst_toc_entry_get_uid">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="IsAlternative" cname="gst_toc_entry_is_alternative">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="IsSequence" cname="gst_toc_entry_is_sequence">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="MergeTags" cname="gst_toc_entry_merge_tags">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="tags" type="GstTagList*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="mode" type="GstTagMergeMode"/>
        </parameters>
      </method>
      <method name="SetStartStopTimes" cname="gst_toc_entry_set_start_stop_times">
        <return-type type="void"/>
        <parameters>
          <parameter name="start" type="gint64"/>
          <parameter name="stop" type="gint64"/>
        </parameters>
      </method>
      <method name="SetTags" cname="gst_toc_entry_set_tags">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="tags" type="GstTagList*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
    </boxed>
    <struct name="TypeFind" cname="GstTypeFind" opaque="false" hidden="false">
      <field cname="data" access="public" writeable="true" readable="true" name="Data" type="gpointer"/>
      <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
      <method name="GetLength" cname="gst_type_find_get_length">
        <return-type type="guint64"/>
        <parameters/>
      </method>
      <method name="Peek" cname="gst_type_find_peek">
        <return-type type="guint8*" array="true" array_length_param_index="1"/>
        <parameters>
          <parameter name="offset" type="gint64"/>
          <parameter name="size" type="guint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="Suggest" cname="gst_type_find_suggest">
        <return-type type="void"/>
        <parameters>
          <parameter name="probability" type="guint"/>
          <parameter name="caps" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Register" cname="gst_type_find_register" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="plugin" type="GstPlugin*"/>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="rank" type="guint"/>
          <parameter closure="6" destroy="7" scope="notified" name="func" type="GstTypeFindFunction"/>
          <parameter allow-none="1" name="extensions" type="const-gchar*"/>
          <parameter name="possible_caps" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="data" type="gpointer"/>
          <parameter scope="async" name="data_notify" type="GDestroyNotify"/>
        </parameters>
      </method>
    </struct>
    <struct name="ValueTable" cname="GstValueTable" opaque="false" hidden="false">
      <field cname="type" access="public" writeable="true" readable="true" name="Type" type="GType"/>
      <field cname="compare" access="public" writeable="true" readable="true" name="Compare" type="GstValueCompareFunc"/>
      <field cname="serialize" access="public" writeable="true" readable="true" name="Serialize" type="GstValueSerializeFunc"/>
      <field cname="deserialize" access="public" writeable="true" readable="true" name="Deserialize" type="GstValueDeserializeFunc"/>
      <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
    </struct>
    <object name="Global" cname="GstGlobal" opaque="true">
      <method name="CapsFromString" cname="gst_caps_from_string" shared="true">
        <return-type type="GstCaps*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="string" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="CoreErrorQuark" cname="gst_core_error_quark" shared="true">
        <return-type type="guint32"/>
      </method>
      <method name="DebugAddLogFunction" cname="gst_debug_add_log_function" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter closure="1" destroy="2" scope="notified" name="func" type="GstLogFunction"/>
          <parameter name="user_data" type="gpointer"/>
          <parameter scope="async" name="notify" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="DebugBinToDotFile" cname="gst_debug_bin_to_dot_file" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="bin" type="GstBin*"/>
          <parameter name="details" type="GstDebugGraphDetails"/>
          <parameter name="file_name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="DebugBinToDotFileWithTs" cname="gst_debug_bin_to_dot_file_with_ts" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="bin" type="GstBin*"/>
          <parameter name="details" type="GstDebugGraphDetails"/>
          <parameter name="file_name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="DebugConstructTermColor" cname="gst_debug_construct_term_color" shared="true">
        <return-type type="gchar*" owned="true"/>
        <parameters>
          <parameter name="colorinfo" type="guint"/>
        </parameters>
      </method>
      <method name="DebugConstructWinColor" cname="gst_debug_construct_win_color" shared="true">
        <return-type type="gint"/>
        <parameters>
          <parameter name="colorinfo" type="guint"/>
        </parameters>
      </method>
      <method name="DebugGetAllCategories" cname="gst_debug_get_all_categories" shared="true">
        <return-type type="GSList*" element_type="GSList*" elements_owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
      </method>
      <method name="DebugGetDefaultThreshold" cname="gst_debug_get_default_threshold" shared="true">
        <return-type type="GstDebugLevel"/>
      </method>
      <method name="DebugIsActive" cname="gst_debug_is_active" shared="true">
        <return-type type="gboolean"/>
      </method>
      <method name="DebugIsColored" cname="gst_debug_is_colored" shared="true">
        <return-type type="gboolean"/>
      </method>
      <method name="DebugLevelGetName" cname="gst_debug_level_get_name" shared="true">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="level" type="GstDebugLevel"/>
        </parameters>
      </method>
      <method name="DebugLog" cname="gst_debug_log" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="category" type="GstDebugCategory*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="level" type="GstDebugLevel"/>
          <parameter name="file" type="const-gchar*"/>
          <parameter name="function" type="const-gchar*"/>
          <parameter name="line" type="gint"/>
          <parameter allow-none="1" name="_object" type="GObject*"/>
          <parameter name="format" type="const-gchar*"/>
          <parameter name="arg7" type="va_list"/>
        </parameters>
      </method>
      <method name="DebugLogDefault" cname="gst_debug_log_default" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="category" type="GstDebugCategory*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="level" type="GstDebugLevel"/>
          <parameter name="file" type="const-gchar*"/>
          <parameter name="function" type="const-gchar*"/>
          <parameter name="line" type="gint"/>
          <parameter allow-none="1" name="_object" type="GObject*"/>
          <parameter name="message" type="GstDebugMessage*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="unused" type="gpointer"/>
        </parameters>
      </method>
      <method name="DebugLogValist" cname="gst_debug_log_valist" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="category" type="GstDebugCategory*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="level" type="GstDebugLevel"/>
          <parameter name="file" type="const-gchar*"/>
          <parameter name="function" type="const-gchar*"/>
          <parameter name="line" type="gint"/>
          <parameter allow-none="1" name="_object" type="GObject*"/>
          <parameter name="format" type="const-gchar*"/>
          <parameter name="args" type="va_list"/>
        </parameters>
      </method>
      <method name="DebugPrintStackTrace" cname="gst_debug_print_stack_trace" shared="true">
        <return-type type="void"/>
      </method>
      <method name="DebugRemoveLogFunction" cname="gst_debug_remove_log_function" shared="true">
        <return-type type="guint"/>
        <parameters>
          <parameter scope="call" name="func" type="GstLogFunction"/>
        </parameters>
      </method>
      <method name="DebugRemoveLogFunctionByData" cname="gst_debug_remove_log_function_by_data" shared="true">
        <return-type type="guint"/>
        <parameters>
          <parameter name="data" type="gpointer"/>
        </parameters>
      </method>
      <method name="DebugSetActive" cname="gst_debug_set_active" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="active" type="gboolean"/>
        </parameters>
      </method>
      <method name="DebugSetColored" cname="gst_debug_set_colored" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="colored" type="gboolean"/>
        </parameters>
      </method>
      <method name="DebugSetDefaultThreshold" cname="gst_debug_set_default_threshold" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="level" type="GstDebugLevel"/>
        </parameters>
      </method>
      <method name="DebugSetThresholdForName" cname="gst_debug_set_threshold_for_name" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="level" type="GstDebugLevel"/>
        </parameters>
      </method>
      <method name="DebugUnsetThresholdForName" cname="gst_debug_unset_threshold_for_name" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="Deinit" cname="gst_deinit" shared="true">
        <return-type type="void"/>
      </method>
      <method name="ErrorGetMessage" cname="gst_error_get_message" shared="true">
        <return-type type="gchar*" owned="true"/>
        <parameters>
          <parameter name="domain" type="guint32"/>
          <parameter name="code" type="gint"/>
        </parameters>
      </method>
      <method name="EventTypeGetFlags" cname="gst_event_type_get_flags" shared="true">
        <return-type type="GstEventTypeFlags"/>
        <parameters>
          <parameter name="type" type="GstEventType"/>
        </parameters>
      </method>
      <method name="EventTypeGetName" cname="gst_event_type_get_name" shared="true">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="type" type="GstEventType"/>
        </parameters>
      </method>
      <method name="EventTypeToQuark" cname="gst_event_type_to_quark" shared="true">
        <return-type type="guint32"/>
        <parameters>
          <parameter name="type" type="GstEventType"/>
        </parameters>
      </method>
      <method name="FilenameToUri" cname="gst_filename_to_uri" shared="true">
        <return-type type="gchar*" owned="true"/>
        <parameters throws="1">
          <parameter name="filename" type="const-gchar*"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="FlowGetName" cname="gst_flow_get_name" shared="true">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="_ret" type="GstFlowReturn"/>
        </parameters>
      </method>
      <method name="FlowToQuark" cname="gst_flow_to_quark" shared="true">
        <return-type type="guint32"/>
        <parameters>
          <parameter name="_ret" type="GstFlowReturn"/>
        </parameters>
      </method>
      <method name="FormatGetByNick" cname="gst_format_get_by_nick" shared="true">
        <return-type type="GstFormat"/>
        <parameters>
          <parameter name="nick" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="FormatGetDetails" cname="gst_format_get_details" shared="true">
        <return-type type="GstFormatDefinition*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="format" type="GstFormat"/>
        </parameters>
      </method>
      <method name="FormatGetName" cname="gst_format_get_name" shared="true">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="format" type="GstFormat"/>
        </parameters>
      </method>
      <method name="FormatIterateDefinitions" cname="gst_format_iterate_definitions" shared="true">
        <return-type type="GstIterator*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
      </method>
      <method name="FormatRegister" cname="gst_format_register" shared="true">
        <return-type type="GstFormat"/>
        <parameters>
          <parameter name="nick" type="const-gchar*"/>
          <parameter name="description" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="FormatToQuark" cname="gst_format_to_quark" shared="true">
        <return-type type="guint32"/>
        <parameters>
          <parameter name="format" type="GstFormat"/>
        </parameters>
      </method>
      <method name="FormatsContains" cname="gst_formats_contains" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="formats" type="GstFormat*" array="true" null_term_array="true"/>
          <parameter name="format" type="GstFormat"/>
        </parameters>
      </method>
      <method name="Init" cname="gst_init" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="argc" type="gint*" owned="true" pass_as="ref"/>
          <parameter allow-none="1" name="argv" type="char***" owned="true" pass_as="ref" array="true" array_length_param_index="0"/>
        </parameters>
      </method>
      <method name="InitCheck" cname="gst_init_check" shared="true">
        <return-type type="gboolean"/>
        <parameters throws="1">
          <parameter allow-none="1" name="argc" type="gint*" owned="true" pass_as="ref"/>
          <parameter allow-none="1" name="argv" type="char***" owned="true" pass_as="ref" array="true" array_length_param_index="0"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="InitGetOptionGroup" cname="gst_init_get_option_group" shared="true">
        <return-type type="GOptionGroup*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
      </method>
      <method name="IsInitialized" cname="gst_is_initialized" shared="true">
        <return-type type="gboolean"/>
      </method>
      <method name="LibraryErrorQuark" cname="gst_library_error_quark" shared="true">
        <return-type type="guint32"/>
      </method>
      <method name="MessageTypeGetName" cname="gst_message_type_get_name" shared="true">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="type" type="GstMessageType"/>
        </parameters>
      </method>
      <method name="MessageTypeToQuark" cname="gst_message_type_to_quark" shared="true">
        <return-type type="guint32"/>
        <parameters>
          <parameter name="type" type="GstMessageType"/>
        </parameters>
      </method>
      <method name="MetaApiTypeHasTag" cname="gst_meta_api_type_has_tag" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="api" type="GType"/>
          <parameter name="tag" type="guint32"/>
        </parameters>
      </method>
      <method name="MetaApiTypeRegister" cname="gst_meta_api_type_register" shared="true">
        <return-type type="GType"/>
        <parameters>
          <parameter name="api" type="const-gchar*"/>
          <parameter name="tags" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="MetaGetInfo" cname="gst_meta_get_info" shared="true">
        <return-type type="GstMetaInfo*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="impl" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="MetaRegister" cname="gst_meta_register" shared="true">
        <return-type type="GstMetaInfo*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="api" type="GType"/>
          <parameter name="impl" type="const-gchar*"/>
          <parameter name="size" type="gsize"/>
          <parameter scope="async" name="init_func" type="GstMetaInitFunction"/>
          <parameter scope="async" name="free_func" type="GstMetaFreeFunction"/>
          <parameter scope="async" name="transform_func" type="GstMetaTransformFunction"/>
        </parameters>
      </method>
      <method name="MiniObjectReplace" cname="gst_mini_object_replace" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="olddata" type="GstMiniObject**" owned="true" pass_as="ref">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="newdata" type="GstMiniObject*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="MiniObjectTake" cname="gst_mini_object_take" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="olddata" type="GstMiniObject**" owned="true" pass_as="ref">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="newdata" type="GstMiniObject*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="PadModeGetName" cname="gst_pad_mode_get_name" shared="true">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="mode" type="GstPadMode"/>
        </parameters>
      </method>
      <method name="ParamSpecFraction" cname="gst_param_spec_fraction" shared="true">
        <return-type type="GParamSpec*" owned="true"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="nick" type="const-gchar*"/>
          <parameter name="blurb" type="const-gchar*"/>
          <parameter name="min_num" type="gint"/>
          <parameter name="min_denom" type="gint"/>
          <parameter name="max_num" type="gint"/>
          <parameter name="max_denom" type="gint"/>
          <parameter name="default_num" type="gint"/>
          <parameter name="default_denom" type="gint"/>
          <parameter name="flags" type="GParamFlags"/>
        </parameters>
      </method>
      <method name="ParseBinFromDescription" cname="gst_parse_bin_from_description" shared="true">
        <return-type type="GstBin*"/>
        <parameters throws="1">
          <parameter name="bin_description" type="const-gchar*"/>
          <parameter name="ghost_unlinked_pads" type="gboolean"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="ParseBinFromDescriptionFull" cname="gst_parse_bin_from_description_full" shared="true">
        <return-type type="GstBin*" owned="true"/>
        <parameters throws="1">
          <parameter name="bin_description" type="const-gchar*"/>
          <parameter name="ghost_unlinked_pads" type="gboolean"/>
          <parameter allow-none="1" name="context" type="GstParseContext*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="flags" type="GstParseFlags"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="ParseErrorQuark" cname="gst_parse_error_quark" shared="true">
        <return-type type="guint32"/>
      </method>
      <method name="ParseLaunch" cname="gst_parse_launch" shared="true">
        <return-type type="GstElement*"/>
        <parameters throws="1">
          <parameter name="pipeline_description" type="const-gchar*"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="ParseLaunchFull" cname="gst_parse_launch_full" shared="true">
        <return-type type="GstElement*" owned="true"/>
        <parameters throws="1">
          <parameter name="pipeline_description" type="const-gchar*"/>
          <parameter allow-none="1" name="context" type="GstParseContext*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="flags" type="GstParseFlags"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="ParseLaunchv" cname="gst_parse_launchv" shared="true">
        <return-type type="GstElement*" owned="true"/>
        <parameters throws="1">
          <parameter name="argv" type="const-gchar**" array="true" null_term_array="true"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="ParseLaunchvFull" cname="gst_parse_launchv_full" shared="true">
        <return-type type="GstElement*" owned="true"/>
        <parameters throws="1">
          <parameter name="argv" type="const-gchar**" array="true" null_term_array="true"/>
          <parameter allow-none="1" name="context" type="GstParseContext*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="flags" type="GstParseFlags"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="PluginErrorQuark" cname="gst_plugin_error_quark" shared="true">
        <return-type type="guint32"/>
      </method>
      <method name="PollNew" cname="gst_poll_new" shared="true">
        <return-type type="GstPoll*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="controllable" type="gboolean"/>
        </parameters>
      </method>
      <method name="PollNewTimer" cname="gst_poll_new_timer" shared="true">
        <return-type type="GstPoll*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
      </method>
      <method name="PresetGetAppDir" cname="gst_preset_get_app_dir" shared="true">
        <return-type type="const-gchar*"/>
      </method>
      <method name="PresetSetAppDir" cname="gst_preset_set_app_dir" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="app_dir" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="QueryTypeGetFlags" cname="gst_query_type_get_flags" shared="true">
        <return-type type="GstQueryTypeFlags"/>
        <parameters>
          <parameter name="type" type="GstQueryType"/>
        </parameters>
      </method>
      <method name="QueryTypeGetName" cname="gst_query_type_get_name" shared="true">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="type" type="GstQueryType"/>
        </parameters>
      </method>
      <method name="QueryTypeToQuark" cname="gst_query_type_to_quark" shared="true">
        <return-type type="guint32"/>
        <parameters>
          <parameter name="type" type="GstQueryType"/>
        </parameters>
      </method>
      <method name="ResourceErrorQuark" cname="gst_resource_error_quark" shared="true">
        <return-type type="guint32"/>
      </method>
      <method name="SegtrapIsEnabled" cname="gst_segtrap_is_enabled" shared="true">
        <return-type type="gboolean"/>
      </method>
      <method name="SegtrapSetEnabled" cname="gst_segtrap_set_enabled" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="enabled" type="gboolean"/>
        </parameters>
      </method>
      <method name="StaticCapsGetType" cname="gst_static_caps_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="StaticPadTemplateGetType" cname="gst_static_pad_template_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="StreamErrorQuark" cname="gst_stream_error_quark" shared="true">
        <return-type type="guint32"/>
      </method>
      <method name="StructureFromString" cname="gst_structure_from_string" shared="true">
        <return-type type="GstStructure*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="string" type="const-gchar*"/>
          <parameter allow-none="1" name="end" type="const-gchar*" pass_as="out"/>
        </parameters>
      </method>
      <method name="TagExists" cname="gst_tag_exists" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="tag" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="TagGetDescription" cname="gst_tag_get_description" shared="true">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="tag" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="TagGetFlag" cname="gst_tag_get_flag" shared="true">
        <return-type type="GstTagFlag"/>
        <parameters>
          <parameter name="tag" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="TagGetNick" cname="gst_tag_get_nick" shared="true">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="tag" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="TagGetType" cname="gst_tag_get_type" shared="true">
        <return-type type="GType"/>
        <parameters>
          <parameter name="tag" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="TagIsFixed" cname="gst_tag_is_fixed" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="tag" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="TagListCopyValue" cname="gst_tag_list_copy_value" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="dest" type="GValue*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="list" type="GstTagList*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="tag" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="TagMergeStringsWithComma" cname="gst_tag_merge_strings_with_comma" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="dest" type="GValue*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="src" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="TagMergeUseFirst" cname="gst_tag_merge_use_first" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="dest" type="GValue*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="src" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="TagRegister" cname="gst_tag_register" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="flag" type="GstTagFlag"/>
          <parameter name="type" type="GType"/>
          <parameter name="nick" type="const-gchar*"/>
          <parameter name="blurb" type="const-gchar*"/>
          <parameter name="func" type="GstTagMergeFunc"/>
        </parameters>
      </method>
      <method name="TagRegisterStatic" cname="gst_tag_register_static" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="flag" type="GstTagFlag"/>
          <parameter name="type" type="GType"/>
          <parameter name="nick" type="const-gchar*"/>
          <parameter name="blurb" type="const-gchar*"/>
          <parameter name="func" type="GstTagMergeFunc"/>
        </parameters>
      </method>
      <method name="TocEntryTypeGetNick" cname="gst_toc_entry_type_get_nick" shared="true">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="type" type="GstTocEntryType"/>
        </parameters>
      </method>
      <method name="TypeFindGetType" cname="gst_type_find_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="TypeFindRegister" cname="gst_type_find_register" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="plugin" type="GstPlugin*"/>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="rank" type="guint"/>
          <parameter closure="6" destroy="7" scope="notified" name="func" type="GstTypeFindFunction"/>
          <parameter allow-none="1" name="extensions" type="const-gchar*"/>
          <parameter name="possible_caps" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="data" type="gpointer"/>
          <parameter scope="async" name="data_notify" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="UpdateRegistry" cname="gst_update_registry" shared="true">
        <return-type type="gboolean"/>
      </method>
      <method name="UriConstruct" cname="gst_uri_construct" shared="true">
        <return-type type="gchar*" owned="true"/>
        <parameters>
          <parameter name="protocol" type="const-gchar*"/>
          <parameter name="location" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="UriErrorQuark" cname="gst_uri_error_quark" shared="true">
        <return-type type="guint32"/>
      </method>
      <method name="UriGetLocation" cname="gst_uri_get_location" shared="true">
        <return-type type="gchar*" owned="true"/>
        <parameters>
          <parameter name="uri" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="UriGetProtocol" cname="gst_uri_get_protocol" shared="true">
        <return-type type="gchar*" owned="true"/>
        <parameters>
          <parameter name="uri" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="UriHasProtocol" cname="gst_uri_has_protocol" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="uri" type="const-gchar*"/>
          <parameter name="protocol" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="UriIsValid" cname="gst_uri_is_valid" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="uri" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="UriProtocolIsSupported" cname="gst_uri_protocol_is_supported" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="type" type="GstURIType"/>
          <parameter name="protocol" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="UriProtocolIsValid" cname="gst_uri_protocol_is_valid" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="protocol" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="UtilArrayBinarySearch" cname="gst_util_array_binary_search" shared="true">
        <return-type type="gpointer"/>
        <parameters>
          <parameter name="array" type="gpointer"/>
          <parameter name="num_elements" type="guint"/>
          <parameter name="element_size" type="gsize"/>
          <parameter closure="6" scope="call" name="search_func" type="GCompareDataFunc"/>
          <parameter name="mode" type="GstSearchMode"/>
          <parameter name="search_data" type="gpointer"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="UtilDoubleToFraction" cname="gst_util_double_to_fraction" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="src" type="gdouble"/>
          <parameter name="dest_n" type="gint*" owned="true" pass_as="out"/>
          <parameter name="dest_d" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="UtilDumpMem" cname="gst_util_dump_mem" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="mem" type="guint8"/>
          <parameter name="size" type="guint"/>
        </parameters>
      </method>
      <method name="UtilFractionAdd" cname="gst_util_fraction_add" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="a_n" type="gint"/>
          <parameter name="a_d" type="gint"/>
          <parameter name="b_n" type="gint"/>
          <parameter name="b_d" type="gint"/>
          <parameter name="res_n" type="gint*" owned="true" pass_as="out"/>
          <parameter name="res_d" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="UtilFractionCompare" cname="gst_util_fraction_compare" shared="true">
        <return-type type="gint"/>
        <parameters>
          <parameter name="a_n" type="gint"/>
          <parameter name="a_d" type="gint"/>
          <parameter name="b_n" type="gint"/>
          <parameter name="b_d" type="gint"/>
        </parameters>
      </method>
      <method name="UtilFractionMultiply" cname="gst_util_fraction_multiply" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="a_n" type="gint"/>
          <parameter name="a_d" type="gint"/>
          <parameter name="b_n" type="gint"/>
          <parameter name="b_d" type="gint"/>
          <parameter name="res_n" type="gint*" owned="true" pass_as="out"/>
          <parameter name="res_d" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="UtilFractionToDouble" cname="gst_util_fraction_to_double" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="src_n" type="gint"/>
          <parameter name="src_d" type="gint"/>
          <parameter name="dest" type="gdouble*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="UtilGdoubleToGuint64" cname="gst_util_gdouble_to_guint64" shared="true">
        <return-type type="guint64"/>
        <parameters>
          <parameter name="value" type="gdouble"/>
        </parameters>
      </method>
      <method name="UtilGetTimestamp" cname="gst_util_get_timestamp" shared="true">
        <return-type type="guint64"/>
      </method>
      <method name="UtilGreatestCommonDivisor" cname="gst_util_greatest_common_divisor" shared="true">
        <return-type type="gint"/>
        <parameters>
          <parameter name="a" type="gint"/>
          <parameter name="b" type="gint"/>
        </parameters>
      </method>
      <method name="UtilGreatestCommonDivisorInt64" cname="gst_util_greatest_common_divisor_int64" shared="true">
        <return-type type="gint64"/>
        <parameters>
          <parameter name="a" type="gint64"/>
          <parameter name="b" type="gint64"/>
        </parameters>
      </method>
      <method name="UtilGuint64ToGdouble" cname="gst_util_guint64_to_gdouble" shared="true">
        <return-type type="gdouble"/>
        <parameters>
          <parameter name="value" type="guint64"/>
        </parameters>
      </method>
      <method name="UtilSeqnumCompare" cname="gst_util_seqnum_compare" shared="true">
        <return-type type="gint32"/>
        <parameters>
          <parameter name="s1" type="guint32"/>
          <parameter name="s2" type="guint32"/>
        </parameters>
      </method>
      <method name="UtilSeqnumNext" cname="gst_util_seqnum_next" shared="true">
        <return-type type="guint32"/>
      </method>
      <method name="UtilSetObjectArg" cname="gst_util_set_object_arg" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="_object" type="GObject*"/>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="value" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="UtilSetValueFromString" cname="gst_util_set_value_from_string" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="value" type="GValue*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="value_str" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="UtilUint64Scale" cname="gst_util_uint64_scale" shared="true">
        <return-type type="guint64"/>
        <parameters>
          <parameter name="val" type="guint64"/>
          <parameter name="num" type="guint64"/>
          <parameter name="denom" type="guint64"/>
        </parameters>
      </method>
      <method name="UtilUint64ScaleCeil" cname="gst_util_uint64_scale_ceil" shared="true">
        <return-type type="guint64"/>
        <parameters>
          <parameter name="val" type="guint64"/>
          <parameter name="num" type="guint64"/>
          <parameter name="denom" type="guint64"/>
        </parameters>
      </method>
      <method name="UtilUint64ScaleInt" cname="gst_util_uint64_scale_int" shared="true">
        <return-type type="guint64"/>
        <parameters>
          <parameter name="val" type="guint64"/>
          <parameter name="num" type="gint"/>
          <parameter name="denom" type="gint"/>
        </parameters>
      </method>
      <method name="UtilUint64ScaleIntCeil" cname="gst_util_uint64_scale_int_ceil" shared="true">
        <return-type type="guint64"/>
        <parameters>
          <parameter name="val" type="guint64"/>
          <parameter name="num" type="gint"/>
          <parameter name="denom" type="gint"/>
        </parameters>
      </method>
      <method name="UtilUint64ScaleIntRound" cname="gst_util_uint64_scale_int_round" shared="true">
        <return-type type="guint64"/>
        <parameters>
          <parameter name="val" type="guint64"/>
          <parameter name="num" type="gint"/>
          <parameter name="denom" type="gint"/>
        </parameters>
      </method>
      <method name="UtilUint64ScaleRound" cname="gst_util_uint64_scale_round" shared="true">
        <return-type type="guint64"/>
        <parameters>
          <parameter name="val" type="guint64"/>
          <parameter name="num" type="guint64"/>
          <parameter name="denom" type="guint64"/>
        </parameters>
      </method>
      <method name="ValueCanCompare" cname="gst_value_can_compare" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="value1" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="value2" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ValueCanIntersect" cname="gst_value_can_intersect" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="value1" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="value2" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ValueCanSubtract" cname="gst_value_can_subtract" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="minuend" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="subtrahend" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ValueCanUnion" cname="gst_value_can_union" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="value1" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="value2" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ValueCompare" cname="gst_value_compare" shared="true">
        <return-type type="gint"/>
        <parameters>
          <parameter name="value1" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="value2" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ValueDeserialize" cname="gst_value_deserialize" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="dest" type="GValue*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="src" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="ValueFixate" cname="gst_value_fixate" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="dest" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="src" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ValueFractionMultiply" cname="gst_value_fraction_multiply" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="product" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="factor1" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="factor2" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ValueFractionSubtract" cname="gst_value_fraction_subtract" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="dest" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="minuend" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="subtrahend" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ValueGetBitmask" cname="gst_value_get_bitmask" shared="true">
        <return-type type="guint64"/>
        <parameters>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ValueGetCaps" cname="gst_value_get_caps" shared="true">
        <return-type type="GstCaps*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ValueGetDoubleRangeMax" cname="gst_value_get_double_range_max" shared="true">
        <return-type type="gdouble"/>
        <parameters>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ValueGetDoubleRangeMin" cname="gst_value_get_double_range_min" shared="true">
        <return-type type="gdouble"/>
        <parameters>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ValueGetFractionDenominator" cname="gst_value_get_fraction_denominator" shared="true">
        <return-type type="gint"/>
        <parameters>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ValueGetFractionNumerator" cname="gst_value_get_fraction_numerator" shared="true">
        <return-type type="gint"/>
        <parameters>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ValueGetFractionRangeMax" cname="gst_value_get_fraction_range_max" shared="true">
        <return-type type="GValue*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ValueGetFractionRangeMin" cname="gst_value_get_fraction_range_min" shared="true">
        <return-type type="GValue*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ValueGetInt64RangeMax" cname="gst_value_get_int64_range_max" shared="true">
        <return-type type="gint64"/>
        <parameters>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ValueGetInt64RangeMin" cname="gst_value_get_int64_range_min" shared="true">
        <return-type type="gint64"/>
        <parameters>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ValueGetInt64RangeStep" cname="gst_value_get_int64_range_step" shared="true">
        <return-type type="gint64"/>
        <parameters>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ValueGetIntRangeMax" cname="gst_value_get_int_range_max" shared="true">
        <return-type type="gint"/>
        <parameters>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ValueGetIntRangeMin" cname="gst_value_get_int_range_min" shared="true">
        <return-type type="gint"/>
        <parameters>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ValueGetIntRangeStep" cname="gst_value_get_int_range_step" shared="true">
        <return-type type="gint"/>
        <parameters>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ValueGetStructure" cname="gst_value_get_structure" shared="true">
        <return-type type="GstStructure*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ValueInitAndCopy" cname="gst_value_init_and_copy" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="dest" type="GValue*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="src" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ValueIntersect" cname="gst_value_intersect" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="dest" type="GValue*" owned="true" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="value1" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="value2" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ValueIsFixed" cname="gst_value_is_fixed" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ValueIsSubset" cname="gst_value_is_subset" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="value1" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="value2" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ValueRegister" cname="gst_value_register" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="table" type="GstValueTable*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ValueSerialize" cname="gst_value_serialize" shared="true">
        <return-type type="gchar*" owned="true"/>
        <parameters>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ValueSetBitmask" cname="gst_value_set_bitmask" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="bitmask" type="guint64"/>
        </parameters>
      </method>
      <method name="ValueSetCaps" cname="gst_value_set_caps" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="caps" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ValueSetDoubleRange" cname="gst_value_set_double_range" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="start" type="gdouble"/>
          <parameter name="end" type="gdouble"/>
        </parameters>
      </method>
      <method name="ValueSetFraction" cname="gst_value_set_fraction" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="numerator" type="gint"/>
          <parameter name="denominator" type="gint"/>
        </parameters>
      </method>
      <method name="ValueSetFractionRange" cname="gst_value_set_fraction_range" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="start" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="end" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ValueSetFractionRangeFull" cname="gst_value_set_fraction_range_full" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="numerator_start" type="gint"/>
          <parameter name="denominator_start" type="gint"/>
          <parameter name="numerator_end" type="gint"/>
          <parameter name="denominator_end" type="gint"/>
        </parameters>
      </method>
      <method name="ValueSetInt64Range" cname="gst_value_set_int64_range" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="start" type="gint64"/>
          <parameter name="end" type="gint64"/>
        </parameters>
      </method>
      <method name="ValueSetInt64RangeStep" cname="gst_value_set_int64_range_step" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="start" type="gint64"/>
          <parameter name="end" type="gint64"/>
          <parameter name="step" type="gint64"/>
        </parameters>
      </method>
      <method name="ValueSetIntRange" cname="gst_value_set_int_range" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="start" type="gint"/>
          <parameter name="end" type="gint"/>
        </parameters>
      </method>
      <method name="ValueSetIntRangeStep" cname="gst_value_set_int_range_step" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="start" type="gint"/>
          <parameter name="end" type="gint"/>
          <parameter name="step" type="gint"/>
        </parameters>
      </method>
      <method name="ValueSetStructure" cname="gst_value_set_structure" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="structure" type="GstStructure*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ValueSubtract" cname="gst_value_subtract" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="dest" type="GValue*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="minuend" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="subtrahend" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ValueUnion" cname="gst_value_union" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="dest" type="GValue*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="value1" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="value2" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Version" cname="gst_version" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="major" type="guint*" owned="true" pass_as="out"/>
          <parameter name="minor" type="guint*" owned="true" pass_as="out"/>
          <parameter name="micro" type="guint*" owned="true" pass_as="out"/>
          <parameter name="nano" type="guint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="VersionString" cname="gst_version_string" shared="true">
        <return-type type="gchar*" owned="true"/>
      </method>
    </object>
    <object name="Constants" cname="GstConstants" opaque="true">
      <constant value="SystemMemory" ctype="gchar*" gtype="gchar*" name="ALLOCATOR_SYSMEM"/>
      <constant value="0" ctype="GstBufferCopyFlags" gtype="GstBufferCopyFlags" name="BUFFER_COPY_ALL"/>
      <constant value="0" ctype="gint" gtype="gint" name="BUFFER_COPY_METADATA"/>
      <constant value="18446744073709551615" ctype="guint64" gtype="guint64" name="BUFFER_OFFSET_NONE"/>
      <constant value="1" ctype="gint" gtype="gint" name="CAN_INLINE"/>
      <constant value="18446744073709551615" ctype="GstClockTime" gtype="GstClockTime" name="CLOCK_TIME_NONE"/>
      <constant value="240" ctype="gint" gtype="gint" name="DEBUG_BG_MASK"/>
      <constant value="15" ctype="gint" gtype="gint" name="DEBUG_FG_MASK"/>
      <constant value="65280" ctype="gint" gtype="gint" name="DEBUG_FORMAT_MASK"/>
      <constant value="Decoder" ctype="gchar*" gtype="gchar*" name="ELEMENT_FACTORY_KLASS_DECODER"/>
      <constant value="Demuxer" ctype="gchar*" gtype="gchar*" name="ELEMENT_FACTORY_KLASS_DEMUXER"/>
      <constant value="Depayloader" ctype="gchar*" gtype="gchar*" name="ELEMENT_FACTORY_KLASS_DEPAYLOADER"/>
      <constant value="Encoder" ctype="gchar*" gtype="gchar*" name="ELEMENT_FACTORY_KLASS_ENCODER"/>
      <constant value="Formatter" ctype="gchar*" gtype="gchar*" name="ELEMENT_FACTORY_KLASS_FORMATTER"/>
      <constant value="Audio" ctype="gchar*" gtype="gchar*" name="ELEMENT_FACTORY_KLASS_MEDIA_AUDIO"/>
      <constant value="Image" ctype="gchar*" gtype="gchar*" name="ELEMENT_FACTORY_KLASS_MEDIA_IMAGE"/>
      <constant value="Metadata" ctype="gchar*" gtype="gchar*" name="ELEMENT_FACTORY_KLASS_MEDIA_METADATA"/>
      <constant value="Subtitle" ctype="gchar*" gtype="gchar*" name="ELEMENT_FACTORY_KLASS_MEDIA_SUBTITLE"/>
      <constant value="Video" ctype="gchar*" gtype="gchar*" name="ELEMENT_FACTORY_KLASS_MEDIA_VIDEO"/>
      <constant value="Muxer" ctype="gchar*" gtype="gchar*" name="ELEMENT_FACTORY_KLASS_MUXER"/>
      <constant value="Parser" ctype="gchar*" gtype="gchar*" name="ELEMENT_FACTORY_KLASS_PARSER"/>
      <constant value="Payloader" ctype="gchar*" gtype="gchar*" name="ELEMENT_FACTORY_KLASS_PAYLOADER"/>
      <constant value="Sink" ctype="gchar*" gtype="gchar*" name="ELEMENT_FACTORY_KLASS_SINK"/>
      <constant value="Source" ctype="gchar*" gtype="gchar*" name="ELEMENT_FACTORY_KLASS_SRC"/>
      <constant value="562949953421311" ctype="gint" gtype="gint" name="ELEMENT_FACTORY_TYPE_ANY"/>
      <constant value="3940649673949188" ctype="gint" gtype="gint" name="ELEMENT_FACTORY_TYPE_AUDIOVIDEO_SINKS"/>
      <constant value="1125899906842626" ctype="gint" gtype="gint" name="ELEMENT_FACTORY_TYPE_AUDIO_ENCODER"/>
      <constant value="353" ctype="gint" gtype="gint" name="ELEMENT_FACTORY_TYPE_DECODABLE"/>
      <constant value="1" ctype="gint" gtype="gint" name="ELEMENT_FACTORY_TYPE_DECODER"/>
      <constant value="32" ctype="gint" gtype="gint" name="ELEMENT_FACTORY_TYPE_DEMUXER"/>
      <constant value="256" ctype="gint" gtype="gint" name="ELEMENT_FACTORY_TYPE_DEPAYLOADER"/>
      <constant value="2" ctype="gint" gtype="gint" name="ELEMENT_FACTORY_TYPE_ENCODER"/>
      <constant value="512" ctype="gint" gtype="gint" name="ELEMENT_FACTORY_TYPE_FORMATTER"/>
      <constant value="281474976710656" ctype="gint" gtype="gint" name="ELEMENT_FACTORY_TYPE_MAX_ELEMENTS"/>
      <constant value="18446462598732840960" ctype="gint" gtype="gint" name="ELEMENT_FACTORY_TYPE_MEDIA_ANY"/>
      <constant value="1125899906842624" ctype="gint" gtype="gint" name="ELEMENT_FACTORY_TYPE_MEDIA_AUDIO"/>
      <constant value="2251799813685248" ctype="gint" gtype="gint" name="ELEMENT_FACTORY_TYPE_MEDIA_IMAGE"/>
      <constant value="9007199254740992" ctype="gint" gtype="gint" name="ELEMENT_FACTORY_TYPE_MEDIA_METADATA"/>
      <constant value="4503599627370496" ctype="gint" gtype="gint" name="ELEMENT_FACTORY_TYPE_MEDIA_SUBTITLE"/>
      <constant value="562949953421312" ctype="gint" gtype="gint" name="ELEMENT_FACTORY_TYPE_MEDIA_VIDEO"/>
      <constant value="16" ctype="gint" gtype="gint" name="ELEMENT_FACTORY_TYPE_MUXER"/>
      <constant value="64" ctype="gint" gtype="gint" name="ELEMENT_FACTORY_TYPE_PARSER"/>
      <constant value="128" ctype="gint" gtype="gint" name="ELEMENT_FACTORY_TYPE_PAYLOADER"/>
      <constant value="4" ctype="gint" gtype="gint" name="ELEMENT_FACTORY_TYPE_SINK"/>
      <constant value="8" ctype="gint" gtype="gint" name="ELEMENT_FACTORY_TYPE_SRC"/>
      <constant value="2814749767106562" ctype="gint" gtype="gint" name="ELEMENT_FACTORY_TYPE_VIDEO_ENCODER"/>
      <constant value="author" ctype="gchar*" gtype="gchar*" name="ELEMENT_METADATA_AUTHOR"/>
      <constant value="description" ctype="gchar*" gtype="gchar*" name="ELEMENT_METADATA_DESCRIPTION"/>
      <constant value="doc-uri" ctype="gchar*" gtype="gchar*" name="ELEMENT_METADATA_DOC_URI"/>
      <constant value="icon-name" ctype="gchar*" gtype="gchar*" name="ELEMENT_METADATA_ICON_NAME"/>
      <constant value="klass" ctype="gchar*" gtype="gchar*" name="ELEMENT_METADATA_KLASS"/>
      <constant value="long-name" ctype="gchar*" gtype="gchar*" name="ELEMENT_METADATA_LONGNAME"/>
      <constant value="system error: %s" ctype="gchar*" gtype="gchar*" name="ERROR_SYSTEM"/>
      <constant value="8" ctype="gint" gtype="gint" name="EVENT_NUM_SHIFT"/>
      <constant value="0" ctype="gint" gtype="gint" name="EVENT_TYPE_BOTH"/>
      <constant value="1000000" ctype="gint64" gtype="gint64" name="FORMAT_PERCENT_MAX"/>
      <constant value="10000" ctype="gint64" gtype="gint64" name="FORMAT_PERCENT_SCALE"/>
      <constant value="c%c%c%c" ctype="gchar*" gtype="gchar*" name="FOURCC_FORMAT"/>
      <constant value="unknown" ctype="gchar*" gtype="gchar*" name="LICENSE_UNKNOWN"/>
      <constant value="0" ctype="gint" gtype="gint" name="LOCK_FLAG_READWRITE"/>
      <constant value="0" ctype="gint" gtype="gint" name="MAP_READWRITE"/>
      <constant value="1000000" ctype="gint" gtype="gint" name="MSECOND"/>
      <constant value="1" ctype="gint" gtype="gint" name="NSECOND"/>
      <constant value="2" ctype="gint" gtype="gint" name="PARAM_CONTROLLABLE"/>
      <constant value="8" ctype="gint" gtype="gint" name="PARAM_MUTABLE_PAUSED"/>
      <constant value="16" ctype="gint" gtype="gint" name="PARAM_MUTABLE_PLAYING"/>
      <constant value="4" ctype="gint" gtype="gint" name="PARAM_MUTABLE_READY"/>
      <constant value="256" ctype="gint" gtype="gint" name="PARAM_USER_SHIFT"/>
      <constant value="8" ctype="gint" gtype="gint" name="QUERY_NUM_SHIFT"/>
      <constant value="0" ctype="gint" gtype="gint" name="QUERY_TYPE_BOTH"/>
      <constant value="1000000000" ctype="gint" gtype="gint" name="SECOND"/>
      <constant value="album" ctype="gchar*" gtype="gchar*" name="TAG_ALBUM"/>
      <constant value="album-artist" ctype="gchar*" gtype="gchar*" name="TAG_ALBUM_ARTIST"/>
      <constant value="album-artist-sortname" ctype="gchar*" gtype="gchar*" name="TAG_ALBUM_ARTIST_SORTNAME"/>
      <constant value="replaygain-album-gain" ctype="gchar*" gtype="gchar*" name="TAG_ALBUM_GAIN"/>
      <constant value="replaygain-album-peak" ctype="gchar*" gtype="gchar*" name="TAG_ALBUM_PEAK"/>
      <constant value="album-sortname" ctype="gchar*" gtype="gchar*" name="TAG_ALBUM_SORTNAME"/>
      <constant value="album-disc-count" ctype="gchar*" gtype="gchar*" name="TAG_ALBUM_VOLUME_COUNT"/>
      <constant value="album-disc-number" ctype="gchar*" gtype="gchar*" name="TAG_ALBUM_VOLUME_NUMBER"/>
      <constant value="application-data" ctype="gchar*" gtype="gchar*" name="TAG_APPLICATION_DATA"/>
      <constant value="application-name" ctype="gchar*" gtype="gchar*" name="TAG_APPLICATION_NAME"/>
      <constant value="artist" ctype="gchar*" gtype="gchar*" name="TAG_ARTIST"/>
      <constant value="artist-sortname" ctype="gchar*" gtype="gchar*" name="TAG_ARTIST_SORTNAME"/>
      <constant value="attachment" ctype="gchar*" gtype="gchar*" name="TAG_ATTACHMENT"/>
      <constant value="audio-codec" ctype="gchar*" gtype="gchar*" name="TAG_AUDIO_CODEC"/>
      <constant value="beats-per-minute" ctype="gchar*" gtype="gchar*" name="TAG_BEATS_PER_MINUTE"/>
      <constant value="bitrate" ctype="gchar*" gtype="gchar*" name="TAG_BITRATE"/>
      <constant value="codec" ctype="gchar*" gtype="gchar*" name="TAG_CODEC"/>
      <constant value="comment" ctype="gchar*" gtype="gchar*" name="TAG_COMMENT"/>
      <constant value="composer" ctype="gchar*" gtype="gchar*" name="TAG_COMPOSER"/>
      <constant value="composer-sortname" ctype="gchar*" gtype="gchar*" name="TAG_COMPOSER_SORTNAME"/>
      <constant value="contact" ctype="gchar*" gtype="gchar*" name="TAG_CONTACT"/>
      <constant value="container-format" ctype="gchar*" gtype="gchar*" name="TAG_CONTAINER_FORMAT"/>
      <constant value="copyright" ctype="gchar*" gtype="gchar*" name="TAG_COPYRIGHT"/>
      <constant value="copyright-uri" ctype="gchar*" gtype="gchar*" name="TAG_COPYRIGHT_URI"/>
      <constant value="date" ctype="gchar*" gtype="gchar*" name="TAG_DATE"/>
      <constant value="datetime" ctype="gchar*" gtype="gchar*" name="TAG_DATE_TIME"/>
      <constant value="description" ctype="gchar*" gtype="gchar*" name="TAG_DESCRIPTION"/>
      <constant value="device-manufacturer" ctype="gchar*" gtype="gchar*" name="TAG_DEVICE_MANUFACTURER"/>
      <constant value="device-model" ctype="gchar*" gtype="gchar*" name="TAG_DEVICE_MODEL"/>
      <constant value="duration" ctype="gchar*" gtype="gchar*" name="TAG_DURATION"/>
      <constant value="encoded-by" ctype="gchar*" gtype="gchar*" name="TAG_ENCODED_BY"/>
      <constant value="encoder" ctype="gchar*" gtype="gchar*" name="TAG_ENCODER"/>
      <constant value="encoder-version" ctype="gchar*" gtype="gchar*" name="TAG_ENCODER_VERSION"/>
      <constant value="extended-comment" ctype="gchar*" gtype="gchar*" name="TAG_EXTENDED_COMMENT"/>
      <constant value="genre" ctype="gchar*" gtype="gchar*" name="TAG_GENRE"/>
      <constant value="geo-location-capture-direction" ctype="gchar*" gtype="gchar*" name="TAG_GEO_LOCATION_CAPTURE_DIRECTION"/>
      <constant value="geo-location-city" ctype="gchar*" gtype="gchar*" name="TAG_GEO_LOCATION_CITY"/>
      <constant value="geo-location-country" ctype="gchar*" gtype="gchar*" name="TAG_GEO_LOCATION_COUNTRY"/>
      <constant value="geo-location-elevation" ctype="gchar*" gtype="gchar*" name="TAG_GEO_LOCATION_ELEVATION"/>
      <constant value="geo-location-horizontal-error" ctype="gchar*" gtype="gchar*" name="TAG_GEO_LOCATION_HORIZONTAL_ERROR"/>
      <constant value="geo-location-latitude" ctype="gchar*" gtype="gchar*" name="TAG_GEO_LOCATION_LATITUDE"/>
      <constant value="geo-location-longitude" ctype="gchar*" gtype="gchar*" name="TAG_GEO_LOCATION_LONGITUDE"/>
      <constant value="geo-location-movement-direction" ctype="gchar*" gtype="gchar*" name="TAG_GEO_LOCATION_MOVEMENT_DIRECTION"/>
      <constant value="geo-location-movement-speed" ctype="gchar*" gtype="gchar*" name="TAG_GEO_LOCATION_MOVEMENT_SPEED"/>
      <constant value="geo-location-name" ctype="gchar*" gtype="gchar*" name="TAG_GEO_LOCATION_NAME"/>
      <constant value="geo-location-sublocation" ctype="gchar*" gtype="gchar*" name="TAG_GEO_LOCATION_SUBLOCATION"/>
      <constant value="grouping" ctype="gchar*" gtype="gchar*" name="TAG_GROUPING"/>
      <constant value="homepage" ctype="gchar*" gtype="gchar*" name="TAG_HOMEPAGE"/>
      <constant value="image" ctype="gchar*" gtype="gchar*" name="TAG_IMAGE"/>
      <constant value="image-orientation" ctype="gchar*" gtype="gchar*" name="TAG_IMAGE_ORIENTATION"/>
      <constant value="isrc" ctype="gchar*" gtype="gchar*" name="TAG_ISRC"/>
      <constant value="keywords" ctype="gchar*" gtype="gchar*" name="TAG_KEYWORDS"/>
      <constant value="language-code" ctype="gchar*" gtype="gchar*" name="TAG_LANGUAGE_CODE"/>
      <constant value="language-name" ctype="gchar*" gtype="gchar*" name="TAG_LANGUAGE_NAME"/>
      <constant value="license" ctype="gchar*" gtype="gchar*" name="TAG_LICENSE"/>
      <constant value="license-uri" ctype="gchar*" gtype="gchar*" name="TAG_LICENSE_URI"/>
      <constant value="location" ctype="gchar*" gtype="gchar*" name="TAG_LOCATION"/>
      <constant value="lyrics" ctype="gchar*" gtype="gchar*" name="TAG_LYRICS"/>
      <constant value="maximum-bitrate" ctype="gchar*" gtype="gchar*" name="TAG_MAXIMUM_BITRATE"/>
      <constant value="minimum-bitrate" ctype="gchar*" gtype="gchar*" name="TAG_MINIMUM_BITRATE"/>
      <constant value="nominal-bitrate" ctype="gchar*" gtype="gchar*" name="TAG_NOMINAL_BITRATE"/>
      <constant value="organization" ctype="gchar*" gtype="gchar*" name="TAG_ORGANIZATION"/>
      <constant value="performer" ctype="gchar*" gtype="gchar*" name="TAG_PERFORMER"/>
      <constant value="preview-image" ctype="gchar*" gtype="gchar*" name="TAG_PREVIEW_IMAGE"/>
      <constant value="replaygain-reference-level" ctype="gchar*" gtype="gchar*" name="TAG_REFERENCE_LEVEL"/>
      <constant value="serial" ctype="gchar*" gtype="gchar*" name="TAG_SERIAL"/>
      <constant value="show-episode-number" ctype="gchar*" gtype="gchar*" name="TAG_SHOW_EPISODE_NUMBER"/>
      <constant value="show-name" ctype="gchar*" gtype="gchar*" name="TAG_SHOW_NAME"/>
      <constant value="show-season-number" ctype="gchar*" gtype="gchar*" name="TAG_SHOW_SEASON_NUMBER"/>
      <constant value="show-sortname" ctype="gchar*" gtype="gchar*" name="TAG_SHOW_SORTNAME"/>
      <constant value="subtitle-codec" ctype="gchar*" gtype="gchar*" name="TAG_SUBTITLE_CODEC"/>
      <constant value="title" ctype="gchar*" gtype="gchar*" name="TAG_TITLE"/>
      <constant value="title-sortname" ctype="gchar*" gtype="gchar*" name="TAG_TITLE_SORTNAME"/>
      <constant value="track-count" ctype="gchar*" gtype="gchar*" name="TAG_TRACK_COUNT"/>
      <constant value="replaygain-track-gain" ctype="gchar*" gtype="gchar*" name="TAG_TRACK_GAIN"/>
      <constant value="track-number" ctype="gchar*" gtype="gchar*" name="TAG_TRACK_NUMBER"/>
      <constant value="replaygain-track-peak" ctype="gchar*" gtype="gchar*" name="TAG_TRACK_PEAK"/>
      <constant value="user-rating" ctype="gchar*" gtype="gchar*" name="TAG_USER_RATING"/>
      <constant value="version" ctype="gchar*" gtype="gchar*" name="TAG_VERSION"/>
      <constant value="video-codec" ctype="gchar*" gtype="gchar*" name="TAG_VIDEO_CODEC"/>
      <constant value="u:%02u:%02u.%09u" ctype="gchar*" gtype="gchar*" name="TIME_FORMAT"/>
      <constant value="1000" ctype="gint" gtype="gint" name="USECOND"/>
      <constant value="0" ctype="gint" gtype="gint" name="VALUE_EQUAL"/>
      <constant value="1" ctype="gint" gtype="gint" name="VALUE_GREATER_THAN"/>
      <constant value="-1" ctype="gint" gtype="gint" name="VALUE_LESS_THAN"/>
      <constant value="2" ctype="gint" gtype="gint" name="VALUE_UNORDERED"/>
    </object>
  </namespace>
  <namespace name="GstBase" library="gstreamer-1.0">
    <enum name="BaseParseFrameFlags" cname="GstBaseParseFrameFlags" type="flags">
      <member cname="GST_BASE_PARSE_FRAME_FLAG_NONE" name="None" value="0"/>
      <member cname="GST_BASE_PARSE_FRAME_FLAG_NEW_FRAME" name="NewFrame" value="1"/>
      <member cname="GST_BASE_PARSE_FRAME_FLAG_NO_FRAME" name="NoFrame" value="2"/>
      <member cname="GST_BASE_PARSE_FRAME_FLAG_CLIP" name="Clip" value="4"/>
      <member cname="GST_BASE_PARSE_FRAME_FLAG_DROP" name="Drop" value="8"/>
      <member cname="GST_BASE_PARSE_FRAME_FLAG_QUEUE" name="Queue" value="16"/>
    </enum>
    <enum name="BaseSrcFlags" cname="GstBaseSrcFlags" type="flags">
      <member cname="GST_BASE_SRC_FLAG_STARTING" name="Starting" value="16384"/>
      <member cname="GST_BASE_SRC_FLAG_STARTED" name="Started" value="32768"/>
      <member cname="GST_BASE_SRC_FLAG_LAST" name="Last" value="1048576"/>
    </enum>
    <enum name="CollectPadsStateFlags" cname="GstCollectPadsStateFlags" type="flags">
      <member cname="GST_COLLECT_PADS_STATE_EOS" name="Eos" value="1"/>
      <member cname="GST_COLLECT_PADS_STATE_FLUSHING" name="Flushing" value="2"/>
      <member cname="GST_COLLECT_PADS_STATE_NEW_SEGMENT" name="NewSegment" value="4"/>
      <member cname="GST_COLLECT_PADS_STATE_WAITING" name="Waiting" value="8"/>
      <member cname="GST_COLLECT_PADS_STATE_LOCKED" name="Locked" value="16"/>
    </enum>
    <callback name="CollectDataDestroyNotify" cname="GstCollectDataDestroyNotify">
      <return-type type="void"/>
      <parameters>
        <parameter name="data" type="GstCollectData*">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <callback name="CollectPadsBufferFunction" cname="GstCollectPadsBufferFunction">
      <return-type type="GstFlowReturn"/>
      <parameters>
        <parameter name="pads" type="GstCollectPads*"/>
        <parameter name="data" type="GstCollectData*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="buffer" type="GstBuffer*" owned="true">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter closure="3" name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="CollectPadsClipFunction" cname="GstCollectPadsClipFunction">
      <return-type type="GstFlowReturn"/>
      <parameters>
        <parameter name="pads" type="GstCollectPads*"/>
        <parameter name="data" type="GstCollectData*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="inbuffer" type="GstBuffer*" owned="true">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="outbuffer" type="GstBuffer**">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter closure="4" name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="CollectPadsCompareFunction" cname="GstCollectPadsCompareFunction">
      <return-type type="gint"/>
      <parameters>
        <parameter name="pads" type="GstCollectPads*"/>
        <parameter name="data1" type="GstCollectData*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="timestamp1" type="guint64"/>
        <parameter name="data2" type="GstCollectData*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="timestamp2" type="guint64"/>
        <parameter closure="5" name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="CollectPadsEventFunction" cname="GstCollectPadsEventFunction">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="pads" type="GstCollectPads*"/>
        <parameter name="pad" type="GstCollectData*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="event" type="GstEvent*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter closure="3" name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="CollectPadsFunction" cname="GstCollectPadsFunction">
      <return-type type="GstFlowReturn"/>
      <parameters>
        <parameter name="pads" type="GstCollectPads*"/>
        <parameter closure="1" name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="CollectPadsQueryFunction" cname="GstCollectPadsQueryFunction">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="pads" type="GstCollectPads*"/>
        <parameter name="pad" type="GstCollectData*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="query" type="GstQuery*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter closure="3" name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="TypeFindHelperGetRangeFunction" cname="GstTypeFindHelperGetRangeFunction">
      <return-type type="GstFlowReturn"/>
      <parameters>
        <parameter name="obj" type="GstObject*"/>
        <parameter name="parent" type="GstObject*"/>
        <parameter name="offset" type="guint64"/>
        <parameter name="length" type="guint"/>
        <parameter name="buffer" type="GstBuffer**">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <object name="Adapter" cname="GstAdapter" abstract="false" opaque="false" hidden="false" parent="GObject">
      <class_struct cname="GstAdapterClass"/>
      <method name="GetType" cname="gst_adapter_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gst_adapter_new" disable_void_ctor=""/>
      <method name="Available" cname="gst_adapter_available">
        <return-type type="gsize"/>
        <parameters/>
      </method>
      <method name="AvailableFast" cname="gst_adapter_available_fast">
        <return-type type="gsize"/>
        <parameters/>
      </method>
      <method name="Clear" cname="gst_adapter_clear">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="Copy" cname="gst_adapter_copy">
        <return-type type="void"/>
        <parameters>
          <parameter name="dest" type="gpointer" pass_as="out" array="true" array_length_param_index="2"/>
          <parameter name="offset" type="gsize"/>
          <parameter name="size" type="gsize*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="Flush" cname="gst_adapter_flush">
        <return-type type="void"/>
        <parameters>
          <parameter name="flush" type="gsize"/>
        </parameters>
      </method>
      <method name="Map" cname="gst_adapter_map">
        <return-type type="gconstpointer" array="true" array_length_param_index="0"/>
        <parameters>
          <parameter name="size" type="gsize*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="MaskedScanUint32" cname="gst_adapter_masked_scan_uint32">
        <return-type type="gsize"/>
        <parameters>
          <parameter name="mask" type="guint32"/>
          <parameter name="pattern" type="guint32"/>
          <parameter name="offset" type="gsize"/>
          <parameter name="size" type="gsize"/>
        </parameters>
      </method>
      <method name="MaskedScanUint32Peek" cname="gst_adapter_masked_scan_uint32_peek">
        <return-type type="gsize"/>
        <parameters>
          <parameter name="mask" type="guint32"/>
          <parameter name="pattern" type="guint32"/>
          <parameter name="offset" type="gsize"/>
          <parameter name="size" type="gsize"/>
          <parameter name="value" type="guint32"/>
        </parameters>
      </method>
      <method name="PrevDts" cname="gst_adapter_prev_dts">
        <return-type type="guint64"/>
        <parameters>
          <parameter allow-none="1" name="distance" type="guint64*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="PrevPts" cname="gst_adapter_prev_pts">
        <return-type type="guint64"/>
        <parameters>
          <parameter allow-none="1" name="distance" type="guint64*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="Push" cname="gst_adapter_push">
        <return-type type="void"/>
        <parameters>
          <parameter name="buf" type="GstBuffer*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Take" cname="gst_adapter_take">
        <return-type type="gpointer*" owned="true" array="true" array_length_param_index="0"/>
        <parameters>
          <parameter name="nbytes" type="gsize*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="TakeBuffer" cname="gst_adapter_take_buffer">
        <return-type type="GstBuffer*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="nbytes" type="gsize"/>
        </parameters>
      </method>
      <method name="TakeList" cname="gst_adapter_take_list">
        <return-type type="GList*" element_type="GList*" elements_owned="true" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="nbytes" type="gsize"/>
        </parameters>
      </method>
      <method name="Unmap" cname="gst_adapter_unmap">
        <return-type type="void"/>
        <parameters/>
      </method>
    </object>
    <object name="BaseParse" cname="GstBaseParse" abstract="true" opaque="false" hidden="false" parent="GstElement">
      <class_struct cname="GstBaseParseClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GstElementClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="start"/>
        <method vm="stop"/>
        <method vm="set_sink_caps"/>
        <method vm="handle_frame"/>
        <method vm="pre_push_frame"/>
        <method vm="convert"/>
        <method vm="sink_event"/>
        <method vm="src_event"/>
        <method vm="get_sink_caps"/>
        <method vm="detect"/>
        <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="20"/>
      </class_struct>
      <method name="GetType" cname="gst_base_parse_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <virtual_method name="Convert" cname="convert">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="src_format" type="GstFormat"/>
          <parameter name="src_value" type="gint64"/>
          <parameter name="dest_format" type="GstFormat"/>
          <parameter name="dest_value" type="gint64"/>
        </parameters>
      </virtual_method>
      <virtual_method name="Detect" cname="detect">
        <return-type type="GstFlowReturn"/>
        <parameters>
          <parameter name="buffer" type="GstBuffer*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="GetSinkCaps" cname="get_sink_caps">
        <return-type type="GstCaps*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="filter" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="HandleFrame" cname="handle_frame">
        <return-type type="GstFlowReturn"/>
        <parameters>
          <parameter name="frame" type="GstBaseParseFrame*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="skipsize" type="gint"/>
        </parameters>
      </virtual_method>
      <virtual_method name="PrePushFrame" cname="pre_push_frame">
        <return-type type="GstFlowReturn"/>
        <parameters>
          <parameter name="frame" type="GstBaseParseFrame*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="SetSinkCaps" cname="set_sink_caps">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="caps" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="SinkEvent" cname="sink_event">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="event" type="GstEvent*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="SrcEvent" cname="src_event">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="event" type="GstEvent*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="Start" cname="start">
        <return-type type="gboolean"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="Stop" cname="stop">
        <return-type type="gboolean"/>
        <parameters/>
      </virtual_method>
      <method name="AddIndexEntry" cname="gst_base_parse_add_index_entry">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="offset" type="guint64"/>
          <parameter name="ts" type="guint64"/>
          <parameter name="key" type="gboolean"/>
          <parameter name="force" type="gboolean"/>
        </parameters>
      </method>
      <method name="ConvertDefault" cname="gst_base_parse_convert_default">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="src_format" type="GstFormat"/>
          <parameter name="src_value" type="gint64"/>
          <parameter name="dest_format" type="GstFormat"/>
          <parameter name="dest_value" type="gint64"/>
        </parameters>
      </method>
      <method name="FinishFrame" cname="gst_base_parse_finish_frame">
        <return-type type="GstFlowReturn"/>
        <parameters>
          <parameter name="frame" type="GstBaseParseFrame*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="size" type="gint"/>
        </parameters>
      </method>
      <method name="PushFrame" cname="gst_base_parse_push_frame">
        <return-type type="GstFlowReturn"/>
        <parameters>
          <parameter name="frame" type="GstBaseParseFrame*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetAverageBitrate" cname="gst_base_parse_set_average_bitrate">
        <return-type type="void"/>
        <parameters>
          <parameter name="bitrate" type="guint"/>
        </parameters>
      </method>
      <method name="SetDuration" cname="gst_base_parse_set_duration">
        <return-type type="void"/>
        <parameters>
          <parameter name="fmt" type="GstFormat"/>
          <parameter name="duration" type="gint64"/>
          <parameter name="interval" type="gint"/>
        </parameters>
      </method>
      <method name="SetFrameRate" cname="gst_base_parse_set_frame_rate">
        <return-type type="void"/>
        <parameters>
          <parameter name="fps_num" type="guint"/>
          <parameter name="fps_den" type="guint"/>
          <parameter name="lead_in" type="guint"/>
          <parameter name="lead_out" type="guint"/>
        </parameters>
      </method>
      <method name="SetHasTimingInfo" cname="gst_base_parse_set_has_timing_info">
        <return-type type="void"/>
        <parameters>
          <parameter name="has_timing" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetLatency" cname="gst_base_parse_set_latency">
        <return-type type="void"/>
        <parameters>
          <parameter name="min_latency" type="guint64"/>
          <parameter name="max_latency" type="guint64"/>
        </parameters>
      </method>
      <method name="SetMinFrameSize" cname="gst_base_parse_set_min_frame_size">
        <return-type type="void"/>
        <parameters>
          <parameter name="min_size" type="guint"/>
        </parameters>
      </method>
      <method name="SetPassthrough" cname="gst_base_parse_set_passthrough">
        <return-type type="void"/>
        <parameters>
          <parameter name="passthrough" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetPtsInterpolation" cname="gst_base_parse_set_pts_interpolation">
        <return-type type="void"/>
        <parameters>
          <parameter name="pts_interpolate" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetSyncable" cname="gst_base_parse_set_syncable">
        <return-type type="void"/>
        <parameters>
          <parameter name="syncable" type="gboolean"/>
        </parameters>
      </method>
      <field cname="element" access="public" writeable="false" readable="true" name="Element" type="GstElement*"/>
      <field cname="sinkpad" access="public" writeable="false" readable="true" name="Sinkpad" type="GstPad*"/>
      <field cname="srcpad" access="public" writeable="false" readable="true" name="Srcpad" type="GstPad*"/>
      <field cname="flags" access="public" writeable="false" readable="true" name="Flags" type="guint"/>
      <field cname="segment" access="public" writeable="false" readable="true" name="Segment" type="GstSegment">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="20"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GstBaseParsePrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="BaseSink" cname="GstBaseSink" abstract="true" opaque="false" hidden="false" parent="GstElement">
      <class_struct cname="GstBaseSinkClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GstElementClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="get_caps"/>
        <method vm="set_caps"/>
        <method vm="fixate"/>
        <method vm="activate_pull"/>
        <method vm="get_times"/>
        <method vm="propose_allocation"/>
        <method vm="start"/>
        <method vm="stop"/>
        <method vm="unlock"/>
        <method vm="unlock_stop"/>
        <method vm="query"/>
        <method vm="event"/>
        <method vm="wait_event"/>
        <method vm="prepare"/>
        <method vm="prepare_list"/>
        <method vm="preroll"/>
        <method vm="render"/>
        <method vm="render_list"/>
        <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="20"/>
      </class_struct>
      <method name="GetType" cname="gst_base_sink_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <virtual_method name="ActivatePull" cname="activate_pull">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="active" type="gboolean"/>
        </parameters>
      </virtual_method>
      <virtual_method name="Event" cname="event">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="event" type="GstEvent*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="Fixate" cname="fixate">
        <return-type type="GstCaps*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="caps" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="GetCaps" cname="get_caps">
        <return-type type="GstCaps*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="filter" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="GetTimes" cname="get_times">
        <return-type type="void"/>
        <parameters>
          <parameter name="buffer" type="GstBuffer*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="start" type="guint64"/>
          <parameter name="end" type="guint64"/>
        </parameters>
      </virtual_method>
      <virtual_method name="Prepare" cname="prepare">
        <return-type type="GstFlowReturn"/>
        <parameters>
          <parameter name="buffer" type="GstBuffer*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="PrepareList" cname="prepare_list">
        <return-type type="GstFlowReturn"/>
        <parameters>
          <parameter name="buffer_list" type="GstBufferList*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="Preroll" cname="preroll">
        <return-type type="GstFlowReturn"/>
        <parameters>
          <parameter name="buffer" type="GstBuffer*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="ProposeAllocation" cname="propose_allocation">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="query" type="GstQuery*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="Query" cname="query">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="query" type="GstQuery*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="Render" cname="render">
        <return-type type="GstFlowReturn"/>
        <parameters>
          <parameter name="buffer" type="GstBuffer*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="RenderList" cname="render_list">
        <return-type type="GstFlowReturn"/>
        <parameters>
          <parameter name="buffer_list" type="GstBufferList*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="SetCaps" cname="set_caps">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="caps" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="Start" cname="start">
        <return-type type="gboolean"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="Stop" cname="stop">
        <return-type type="gboolean"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="Unlock" cname="unlock">
        <return-type type="gboolean"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="UnlockStop" cname="unlock_stop">
        <return-type type="gboolean"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="WaitEvent" cname="wait_event">
        <return-type type="GstFlowReturn"/>
        <parameters>
          <parameter name="event" type="GstEvent*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <method name="DoPreroll" cname="gst_base_sink_do_preroll">
        <return-type type="GstFlowReturn"/>
        <parameters>
          <parameter name="obj" type="GstMiniObject*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetBlocksize" cname="gst_base_sink_get_blocksize">
        <return-type type="guint"/>
        <parameters/>
      </method>
      <method name="GetLastSample" cname="gst_base_sink_get_last_sample">
        <return-type type="GstSample*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetLatency" cname="gst_base_sink_get_latency">
        <return-type type="guint64"/>
        <parameters/>
      </method>
      <method name="GetMaxLateness" cname="gst_base_sink_get_max_lateness">
        <return-type type="gint64"/>
        <parameters/>
      </method>
      <method name="GetRenderDelay" cname="gst_base_sink_get_render_delay">
        <return-type type="guint64"/>
        <parameters/>
      </method>
      <method name="GetSync" cname="gst_base_sink_get_sync">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetThrottleTime" cname="gst_base_sink_get_throttle_time">
        <return-type type="guint64"/>
        <parameters/>
      </method>
      <method name="GetTsOffset" cname="gst_base_sink_get_ts_offset">
        <return-type type="gint64"/>
        <parameters/>
      </method>
      <method name="IsAsyncEnabled" cname="gst_base_sink_is_async_enabled">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="IsLastSampleEnabled" cname="gst_base_sink_is_last_sample_enabled">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="IsQosEnabled" cname="gst_base_sink_is_qos_enabled">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="QueryLatency" cname="gst_base_sink_query_latency">
        <return-type type="gboolean"/>
        <parameters>
          <parameter allow-none="1" name="live" type="gboolean*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="upstream_live" type="gboolean*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="min_latency" type="guint64" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="max_latency" type="guint64" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="SetAsyncEnabled" cname="gst_base_sink_set_async_enabled">
        <return-type type="void"/>
        <parameters>
          <parameter name="enabled" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetBlocksize" cname="gst_base_sink_set_blocksize">
        <return-type type="void"/>
        <parameters>
          <parameter name="blocksize" type="guint"/>
        </parameters>
      </method>
      <method name="SetLastSampleEnabled" cname="gst_base_sink_set_last_sample_enabled">
        <return-type type="void"/>
        <parameters>
          <parameter name="enabled" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetMaxLateness" cname="gst_base_sink_set_max_lateness">
        <return-type type="void"/>
        <parameters>
          <parameter name="max_lateness" type="gint64"/>
        </parameters>
      </method>
      <method name="SetQosEnabled" cname="gst_base_sink_set_qos_enabled">
        <return-type type="void"/>
        <parameters>
          <parameter name="enabled" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetRenderDelay" cname="gst_base_sink_set_render_delay">
        <return-type type="void"/>
        <parameters>
          <parameter name="delay" type="guint64"/>
        </parameters>
      </method>
      <method name="SetSync" cname="gst_base_sink_set_sync">
        <return-type type="void"/>
        <parameters>
          <parameter name="sync" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetThrottleTime" cname="gst_base_sink_set_throttle_time">
        <return-type type="void"/>
        <parameters>
          <parameter name="throttle" type="guint64"/>
        </parameters>
      </method>
      <method name="SetTsOffset" cname="gst_base_sink_set_ts_offset">
        <return-type type="void"/>
        <parameters>
          <parameter name="offset" type="gint64"/>
        </parameters>
      </method>
      <method name="Wait" cname="gst_base_sink_wait">
        <return-type type="GstFlowReturn"/>
        <parameters>
          <parameter name="time" type="guint64"/>
          <parameter allow-none="1" name="jitter" type="gint64" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="WaitClock" cname="gst_base_sink_wait_clock">
        <return-type type="GstClockReturn"/>
        <parameters>
          <parameter name="time" type="guint64"/>
          <parameter allow-none="1" name="jitter" type="gint64" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="WaitPreroll" cname="gst_base_sink_wait_preroll">
        <return-type type="GstFlowReturn"/>
        <parameters/>
      </method>
      <property name="Async" cname="async" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Blocksize" cname="blocksize" type="guint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="EnableLastSample" cname="enable-last-sample" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="LastSample" cname="last-sample" type="GstSample*" readable="true" writeable="false" construct="false" construct-only="false"/>
      <property name="MaxLateness" cname="max-lateness" type="gint64" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Qos" cname="qos" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="RenderDelay" cname="render-delay" type="guint64" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Sync" cname="sync" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="ThrottleTime" cname="throttle-time" type="guint64" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="TsOffset" cname="ts-offset" type="gint64" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="element" access="public" writeable="false" readable="true" name="Element" type="GstElement*"/>
      <field cname="sinkpad" access="public" writeable="false" readable="true" name="Sinkpad" type="GstPad*"/>
      <field cname="pad_mode" access="public" writeable="false" readable="true" name="PadMode" type="GstPadMode"/>
      <field cname="offset" access="public" writeable="false" readable="true" name="Offset" type="guint64"/>
      <field cname="can_activate_pull" access="public" writeable="false" readable="true" name="CanActivatePull" type="gboolean"/>
      <field cname="can_activate_push" access="public" writeable="false" readable="true" name="CanActivatePush" type="gboolean"/>
      <field cname="preroll_lock" access="public" writeable="false" readable="true" name="PrerollLock" type="GMutex*"/>
      <field cname="preroll_cond" access="public" writeable="false" readable="true" name="PrerollCond" type="GCond">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="eos" access="public" writeable="false" readable="true" name="Eos" type="gboolean"/>
      <field cname="need_preroll" access="public" writeable="false" readable="true" name="NeedPreroll" type="gboolean"/>
      <field cname="have_preroll" access="public" writeable="false" readable="true" name="HavePreroll" type="gboolean"/>
      <field cname="playing_async" access="public" writeable="false" readable="true" name="PlayingAsync" type="gboolean"/>
      <field cname="have_newsegment" access="public" writeable="false" readable="true" name="HaveNewsegment" type="gboolean"/>
      <field cname="segment" access="public" writeable="false" readable="true" name="Segment" type="GstSegment">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="clock_id" access="private" writeable="false" readable="false" name="ClockId" type="gpointer"/>
      <field cname="sync" access="private" writeable="false" readable="false" name="SyncField" type="gboolean"/>
      <field cname="flushing" access="private" writeable="false" readable="false" name="Flushing" type="gboolean"/>
      <field cname="running" access="private" writeable="false" readable="false" name="Running" type="gboolean"/>
      <field cname="max_lateness" access="private" writeable="false" readable="false" name="MaxLatenessField" type="gint64"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GstBaseSinkPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="20"/>
    </object>
    <object name="BaseSrc" cname="GstBaseSrc" abstract="true" opaque="false" hidden="false" parent="GstElement">
      <class_struct cname="GstBaseSrcClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GstElementClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="get_caps"/>
        <method vm="negotiate"/>
        <method vm="fixate"/>
        <method vm="set_caps"/>
        <method vm="decide_allocation"/>
        <method vm="start"/>
        <method vm="stop"/>
        <method vm="get_times"/>
        <method vm="get_size"/>
        <method vm="is_seekable"/>
        <method vm="prepare_seek_segment"/>
        <method vm="do_seek"/>
        <method vm="unlock"/>
        <method vm="unlock_stop"/>
        <method vm="query"/>
        <method vm="event"/>
        <method vm="create"/>
        <method vm="alloc"/>
        <method vm="fill"/>
        <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="20"/>
      </class_struct>
      <method name="GetType" cname="gst_base_src_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <virtual_method name="Alloc" cname="alloc">
        <return-type type="GstFlowReturn"/>
        <parameters>
          <parameter name="offset" type="guint64"/>
          <parameter name="size" type="guint"/>
          <parameter name="buf" type="GstBuffer**">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="Create" cname="create">
        <return-type type="GstFlowReturn"/>
        <parameters>
          <parameter name="offset" type="guint64"/>
          <parameter name="size" type="guint"/>
          <parameter name="buf" type="GstBuffer**">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="DecideAllocation" cname="decide_allocation">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="query" type="GstQuery*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="DoSeek" cname="do_seek">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="segment" type="GstSegment*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="Event" cname="event">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="event" type="GstEvent*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="Fill" cname="fill">
        <return-type type="GstFlowReturn"/>
        <parameters>
          <parameter name="offset" type="guint64"/>
          <parameter name="size" type="guint"/>
          <parameter name="buf" type="GstBuffer*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="Fixate" cname="fixate">
        <return-type type="GstCaps*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="caps" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="GetCaps" cname="get_caps">
        <return-type type="GstCaps*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="filter" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="GetSize" cname="get_size">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="size" type="guint64"/>
        </parameters>
      </virtual_method>
      <virtual_method name="GetTimes" cname="get_times">
        <return-type type="void"/>
        <parameters>
          <parameter name="buffer" type="GstBuffer*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="start" type="guint64"/>
          <parameter name="end" type="guint64"/>
        </parameters>
      </virtual_method>
      <virtual_method name="IsSeekable" cname="is_seekable">
        <return-type type="gboolean"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="Negotiate" cname="negotiate">
        <return-type type="gboolean"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="PrepareSeekSegment" cname="prepare_seek_segment">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="seek" type="GstEvent*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="segment" type="GstSegment*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="Query" cname="query">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="query" type="GstQuery*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="SetCaps" cname="set_caps">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="caps" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="Start" cname="start">
        <return-type type="gboolean"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="Stop" cname="stop">
        <return-type type="gboolean"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="Unlock" cname="unlock">
        <return-type type="gboolean"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="UnlockStop" cname="unlock_stop">
        <return-type type="gboolean"/>
        <parameters/>
      </virtual_method>
      <method name="GetAllocator" cname="gst_base_src_get_allocator">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="allocator" type="GstAllocator*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="params" type="GstAllocationParams*" owned="true" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetBlocksize" cname="gst_base_src_get_blocksize">
        <return-type type="guint"/>
        <parameters/>
      </method>
      <method name="GetBufferPool" cname="gst_base_src_get_buffer_pool">
        <return-type type="GstBufferPool*" owned="true"/>
        <parameters/>
      </method>
      <method name="GetDoTimestamp" cname="gst_base_src_get_do_timestamp">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="IsAsync" cname="gst_base_src_is_async">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="IsLive" cname="gst_base_src_is_live">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="NewSeamlessSegment" cname="gst_base_src_new_seamless_segment">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="start" type="gint64"/>
          <parameter name="stop" type="gint64"/>
          <parameter name="time" type="gint64"/>
        </parameters>
      </method>
      <method name="QueryLatency" cname="gst_base_src_query_latency">
        <return-type type="gboolean"/>
        <parameters>
          <parameter allow-none="1" name="live" type="gboolean*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="min_latency" type="guint64" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="max_latency" type="guint64" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="SetAsync" cname="gst_base_src_set_async">
        <return-type type="void"/>
        <parameters>
          <parameter name="async" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetBlocksize" cname="gst_base_src_set_blocksize">
        <return-type type="void"/>
        <parameters>
          <parameter name="blocksize" type="guint"/>
        </parameters>
      </method>
      <method name="SetCaps" cname="gst_base_src_set_caps">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="caps" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetDoTimestamp" cname="gst_base_src_set_do_timestamp">
        <return-type type="void"/>
        <parameters>
          <parameter name="timestamp" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetDynamicSize" cname="gst_base_src_set_dynamic_size">
        <return-type type="void"/>
        <parameters>
          <parameter name="dynamic" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetFormat" cname="gst_base_src_set_format">
        <return-type type="void"/>
        <parameters>
          <parameter name="format" type="GstFormat"/>
        </parameters>
      </method>
      <method name="SetLive" cname="gst_base_src_set_live">
        <return-type type="void"/>
        <parameters>
          <parameter name="live" type="gboolean"/>
        </parameters>
      </method>
      <method name="StartComplete" cname="gst_base_src_start_complete">
        <return-type type="void"/>
        <parameters>
          <parameter name="_ret" type="GstFlowReturn"/>
        </parameters>
      </method>
      <method name="StartWait" cname="gst_base_src_start_wait">
        <return-type type="GstFlowReturn"/>
        <parameters/>
      </method>
      <method name="WaitPlaying" cname="gst_base_src_wait_playing">
        <return-type type="GstFlowReturn"/>
        <parameters/>
      </method>
      <property name="Blocksize" cname="blocksize" type="guint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="DoTimestamp" cname="do-timestamp" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="NumBuffers" cname="num-buffers" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Typefind" cname="typefind" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="element" access="public" writeable="false" readable="true" name="Element" type="GstElement*"/>
      <field cname="srcpad" access="public" writeable="false" readable="true" name="Srcpad" type="GstPad*"/>
      <field cname="live_lock" access="public" writeable="false" readable="true" name="LiveLock" type="GMutex*"/>
      <field cname="live_cond" access="public" writeable="false" readable="true" name="LiveCond" type="GCond">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="is_live" access="public" writeable="false" readable="true" name="IsLiveField" type="gboolean"/>
      <field cname="live_running" access="public" writeable="false" readable="true" name="LiveRunning" type="gboolean"/>
      <field cname="blocksize" access="public" writeable="false" readable="true" name="BlocksizeField" type="guint"/>
      <field cname="can_activate_push" access="public" writeable="false" readable="true" name="CanActivatePush" type="gboolean"/>
      <field cname="random_access" access="public" writeable="false" readable="true" name="RandomAccess" type="gboolean"/>
      <field cname="clock_id" access="public" writeable="false" readable="true" name="ClockId" type="gpointer"/>
      <field cname="segment" access="public" writeable="false" readable="true" name="Segment" type="GstSegment">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="need_newsegment" access="public" writeable="false" readable="true" name="NeedNewsegment" type="gboolean"/>
      <field cname="num_buffers" access="public" writeable="false" readable="true" name="NumBuffersField" type="gint"/>
      <field cname="num_buffers_left" access="public" writeable="false" readable="true" name="NumBuffersLeft" type="gint"/>
      <field cname="typefind" access="public" writeable="false" readable="true" name="TypefindField" type="gboolean"/>
      <field cname="running" access="public" writeable="false" readable="true" name="Running" type="gboolean"/>
      <field cname="pending_seek" access="public" writeable="false" readable="true" name="PendingSeek" type="GstEvent*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="priv" access="public" writeable="false" readable="true" name="Priv" type="GstBaseSrcPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="20"/>
    </object>
    <object name="BaseTransform" cname="GstBaseTransform" abstract="true" opaque="false" hidden="false" parent="GstElement">
      <class_struct cname="GstBaseTransformClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GstElementClass">
          <warning>missing glib:type-name</warning>
        </field>
        <field cname="passthrough_on_same_caps" access="public" writeable="false" readable="true" name="PassthroughOnSameCaps" type="gboolean"/>
        <field cname="transform_ip_on_passthrough" access="public" writeable="false" readable="true" name="TransformIpOnPassthrough" type="gboolean"/>
        <method vm="transform_caps"/>
        <method vm="fixate_caps"/>
        <method vm="accept_caps"/>
        <method vm="set_caps"/>
        <method vm="query"/>
        <method vm="decide_allocation"/>
        <method vm="filter_meta"/>
        <method vm="propose_allocation"/>
        <method vm="transform_size"/>
        <method vm="get_unit_size"/>
        <method vm="start"/>
        <method vm="stop"/>
        <method vm="sink_event"/>
        <method vm="src_event"/>
        <method vm="prepare_output_buffer"/>
        <method vm="copy_metadata"/>
        <method vm="transform_meta"/>
        <method vm="before_transform"/>
        <method vm="transform"/>
        <method vm="transform_ip"/>
        <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="20"/>
      </class_struct>
      <method name="GetType" cname="gst_base_transform_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <virtual_method name="AcceptCaps" cname="accept_caps">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="direction" type="GstPadDirection"/>
          <parameter name="caps" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="BeforeTransform" cname="before_transform">
        <return-type type="void"/>
        <parameters>
          <parameter name="buffer" type="GstBuffer*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="CopyMetadata" cname="copy_metadata">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="input" type="GstBuffer*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="outbuf" type="GstBuffer*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="DecideAllocation" cname="decide_allocation">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="query" type="GstQuery*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="FilterMeta" cname="filter_meta">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="query" type="GstQuery*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="api" type="GType"/>
          <parameter name="params" type="GstStructure*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="FixateCaps" cname="fixate_caps">
        <return-type type="GstCaps*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="direction" type="GstPadDirection"/>
          <parameter name="caps" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="othercaps" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="GetUnitSize" cname="get_unit_size">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="caps" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="size" type="gsize"/>
        </parameters>
      </virtual_method>
      <virtual_method name="PrepareOutputBuffer" cname="prepare_output_buffer">
        <return-type type="GstFlowReturn"/>
        <parameters>
          <parameter name="input" type="GstBuffer*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="outbuf" type="GstBuffer**">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="ProposeAllocation" cname="propose_allocation">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="decide_query" type="GstQuery*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="query" type="GstQuery*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="Query" cname="query">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="direction" type="GstPadDirection"/>
          <parameter name="query" type="GstQuery*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="SetCaps" cname="set_caps">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="incaps" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="outcaps" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="SinkEvent" cname="sink_event">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="event" type="GstEvent*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="SrcEvent" cname="src_event">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="event" type="GstEvent*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="Start" cname="start">
        <return-type type="gboolean"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="Stop" cname="stop">
        <return-type type="gboolean"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="Transform" cname="transform">
        <return-type type="GstFlowReturn"/>
        <parameters>
          <parameter name="inbuf" type="GstBuffer*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="outbuf" type="GstBuffer*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="TransformCaps" cname="transform_caps">
        <return-type type="GstCaps*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="direction" type="GstPadDirection"/>
          <parameter name="caps" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="filter" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="TransformIp" cname="transform_ip">
        <return-type type="GstFlowReturn"/>
        <parameters>
          <parameter name="buf" type="GstBuffer*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="TransformMeta" cname="transform_meta">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="outbuf" type="GstBuffer*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="meta" type="GstMeta*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="inbuf" type="GstBuffer*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="TransformSize" cname="transform_size">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="direction" type="GstPadDirection"/>
          <parameter name="caps" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="size" type="gsize"/>
          <parameter name="othercaps" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="othersize" type="gsize"/>
        </parameters>
      </virtual_method>
      <method name="GetAllocator" cname="gst_base_transform_get_allocator">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="allocator" type="GstAllocator*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="params" type="GstAllocationParams*" owned="true" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetBufferPool" cname="gst_base_transform_get_buffer_pool">
        <return-type type="GstBufferPool*" owned="true"/>
        <parameters/>
      </method>
      <method name="IsInPlace" cname="gst_base_transform_is_in_place">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="IsPassthrough" cname="gst_base_transform_is_passthrough">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="IsQosEnabled" cname="gst_base_transform_is_qos_enabled">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="ReconfigureSink" cname="gst_base_transform_reconfigure_sink">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="ReconfigureSrc" cname="gst_base_transform_reconfigure_src">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="SetGapAware" cname="gst_base_transform_set_gap_aware">
        <return-type type="void"/>
        <parameters>
          <parameter name="gap_aware" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetInPlace" cname="gst_base_transform_set_in_place">
        <return-type type="void"/>
        <parameters>
          <parameter name="in_place" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetPassthrough" cname="gst_base_transform_set_passthrough">
        <return-type type="void"/>
        <parameters>
          <parameter name="passthrough" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetPreferPassthrough" cname="gst_base_transform_set_prefer_passthrough">
        <return-type type="void"/>
        <parameters>
          <parameter name="prefer_passthrough" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetQosEnabled" cname="gst_base_transform_set_qos_enabled">
        <return-type type="void"/>
        <parameters>
          <parameter name="enabled" type="gboolean"/>
        </parameters>
      </method>
      <method name="UpdateQos" cname="gst_base_transform_update_qos">
        <return-type type="void"/>
        <parameters>
          <parameter name="proportion" type="gdouble"/>
          <parameter name="diff" type="gint64"/>
          <parameter name="timestamp" type="guint64"/>
        </parameters>
      </method>
      <property name="Qos" cname="qos" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="element" access="public" writeable="false" readable="true" name="Element" type="GstElement*"/>
      <field cname="sinkpad" access="public" writeable="false" readable="true" name="Sinkpad" type="GstPad*"/>
      <field cname="srcpad" access="public" writeable="false" readable="true" name="Srcpad" type="GstPad*"/>
      <field cname="have_segment" access="public" writeable="false" readable="true" name="HaveSegment" type="gboolean"/>
      <field cname="segment" access="public" writeable="false" readable="true" name="Segment" type="GstSegment">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GstBaseTransformPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="20"/>
    </object>
    <object name="CollectPads" cname="GstCollectPads" abstract="false" opaque="false" hidden="false" parent="GstObject">
      <class_struct cname="GstCollectPadsClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GstObjectClass">
          <warning>missing glib:type-name</warning>
        </field>
        <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
      </class_struct>
      <method name="GetType" cname="gst_collect_pads_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gst_collect_pads_new" disable_void_ctor=""/>
      <method name="Available" cname="gst_collect_pads_available">
        <return-type type="guint"/>
        <parameters/>
      </method>
      <method name="ClipRunningTime" cname="gst_collect_pads_clip_running_time">
        <return-type type="GstFlowReturn"/>
        <parameters>
          <parameter name="cdata" type="GstCollectData*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="buf" type="GstBuffer*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="outbuf" type="GstBuffer**">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="EventDefault" cname="gst_collect_pads_event_default">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="data" type="GstCollectData*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="event" type="GstEvent*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="discard" type="gboolean"/>
        </parameters>
      </method>
      <method name="Flush" cname="gst_collect_pads_flush">
        <return-type type="guint"/>
        <parameters>
          <parameter name="data" type="GstCollectData*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="size" type="guint"/>
        </parameters>
      </method>
      <method name="Peek" cname="gst_collect_pads_peek">
        <return-type type="GstBuffer*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="data" type="GstCollectData*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Pop" cname="gst_collect_pads_pop">
        <return-type type="GstBuffer*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="data" type="GstCollectData*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="QueryDefault" cname="gst_collect_pads_query_default">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="data" type="GstCollectData*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="query" type="GstQuery*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="discard" type="gboolean"/>
        </parameters>
      </method>
      <method name="ReadBuffer" cname="gst_collect_pads_read_buffer">
        <return-type type="GstBuffer*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="data" type="GstCollectData*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="size" type="guint"/>
        </parameters>
      </method>
      <method name="RemovePad" cname="gst_collect_pads_remove_pad">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="pad" type="GstPad*"/>
        </parameters>
      </method>
      <method name="SetFlushing" cname="gst_collect_pads_set_flushing">
        <return-type type="void"/>
        <parameters>
          <parameter name="flushing" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetWaiting" cname="gst_collect_pads_set_waiting">
        <return-type type="void"/>
        <parameters>
          <parameter name="data" type="GstCollectData*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="waiting" type="gboolean"/>
        </parameters>
      </method>
      <method name="Start" cname="gst_collect_pads_start">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="Stop" cname="gst_collect_pads_stop">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="TakeBuffer" cname="gst_collect_pads_take_buffer">
        <return-type type="GstBuffer*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="data" type="GstCollectData*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="size" type="guint"/>
        </parameters>
      </method>
      <field cname="object" access="public" writeable="false" readable="true" name="Object" type="GstObject*"/>
      <field cname="data" access="public" writeable="false" readable="true" name="Data" type="GSList*" element_type="gpointer"/>
      <field cname="stream_lock" access="private" writeable="false" readable="false" name="StreamLock" type="GRecMutex">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GstCollectPadsPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
    </object>
    <object name="PushSrc" cname="GstPushSrc" abstract="false" opaque="false" hidden="false" parent="GstBaseSrc">
      <class_struct cname="GstPushSrcClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GstBaseSrcClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="create"/>
        <method vm="alloc"/>
        <method vm="fill"/>
        <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
      </class_struct>
      <method name="GetType" cname="gst_push_src_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <virtual_method name="Alloc" cname="alloc">
        <return-type type="GstFlowReturn"/>
        <parameters>
          <parameter name="buf" type="GstBuffer**">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="Create" cname="create">
        <return-type type="GstFlowReturn"/>
        <parameters>
          <parameter name="buf" type="GstBuffer**">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="Fill" cname="fill">
        <return-type type="GstFlowReturn"/>
        <parameters>
          <parameter name="buf" type="GstBuffer*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <field cname="parent" access="public" writeable="false" readable="true" name="Parent" type="GstBaseSrc*"/>
      <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
    </object>
    <boxed name="BaseParseFrame" cname="GstBaseParseFrame" opaque="false" hidden="false">
      <method name="GetType" cname="gst_base_parse_frame_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <field cname="buffer" access="public" writeable="true" readable="true" name="Buffer" type="GstBuffer*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="out_buffer" access="public" writeable="true" readable="true" name="OutBuffer" type="GstBuffer*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="flags" access="public" writeable="true" readable="true" name="Flags" type="guint"/>
      <field cname="offset" access="public" writeable="true" readable="true" name="Offset" type="guint64"/>
      <field cname="overhead" access="public" writeable="true" readable="true" name="Overhead" type="gint"/>
      <field cname="size" access="private" writeable="false" readable="false" name="Size" type="gint"/>
      <field cname="_gst_reserved_i" access="private" writeable="false" readable="false" name="_gstGstReservedI" type="guint" array="true" array_len="2"/>
      <field cname="_gst_reserved_p" access="private" writeable="false" readable="false" name="_gstGstReservedP" type="gpointer" array="true" array_len="2"/>
      <field cname="_private_flags" access="private" writeable="false" readable="false" name="_privatePrivateFlags" type="guint"/>
      <constructor cname="gst_base_parse_frame_new">
        <parameters>
          <parameter name="buffer" type="GstBuffer*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="flags" type="GstBaseParseFrameFlags"/>
          <parameter name="overhead" type="gint"/>
        </parameters>
      </constructor>
      <method name="Free" cname="gst_base_parse_frame_free">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="Init" cname="gst_base_parse_frame_init">
        <return-type type="void"/>
        <parameters/>
      </method>
    </boxed>
    <struct name="BaseParsePrivate" cname="GstBaseParsePrivate" opaque="true" hidden="true"/>
    <struct name="BaseSinkPrivate" cname="GstBaseSinkPrivate" opaque="true" hidden="true"/>
    <struct name="BaseSrcPrivate" cname="GstBaseSrcPrivate" opaque="true" hidden="true"/>
    <struct name="BaseTransformPrivate" cname="GstBaseTransformPrivate" opaque="true" hidden="true"/>
    <struct name="BitReader" cname="GstBitReader" opaque="false" hidden="false">
      <field cname="data" access="public" writeable="true" readable="true" name="Data" type="guint8"/>
      <field cname="size" access="public" writeable="true" readable="true" name="Size" type="guint"/>
      <field cname="byte" access="public" writeable="true" readable="true" name="Byte" type="guint"/>
      <field cname="bit" access="public" writeable="true" readable="true" name="Bit" type="guint"/>
      <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
      <method name="Free" cname="gst_bit_reader_free">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="GetBitsUint16" cname="gst_bit_reader_get_bits_uint16">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="val" type="guint16*" owned="true" pass_as="out"/>
          <parameter name="nbits" type="guint"/>
        </parameters>
      </method>
      <method name="GetBitsUint32" cname="gst_bit_reader_get_bits_uint32">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="val" type="guint32*" owned="true" pass_as="out"/>
          <parameter name="nbits" type="guint"/>
        </parameters>
      </method>
      <method name="GetBitsUint64" cname="gst_bit_reader_get_bits_uint64">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="val" type="guint64*" owned="true" pass_as="out"/>
          <parameter name="nbits" type="guint"/>
        </parameters>
      </method>
      <method name="GetBitsUint8" cname="gst_bit_reader_get_bits_uint8">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="val" type="guint8*" owned="true" pass_as="out"/>
          <parameter name="nbits" type="guint"/>
        </parameters>
      </method>
      <method name="GetPos" cname="gst_bit_reader_get_pos">
        <return-type type="guint"/>
        <parameters/>
      </method>
      <method name="GetRemaining" cname="gst_bit_reader_get_remaining">
        <return-type type="guint"/>
        <parameters/>
      </method>
      <method name="GetSize" cname="gst_bit_reader_get_size">
        <return-type type="guint"/>
        <parameters/>
      </method>
      <method name="Init" cname="gst_bit_reader_init">
        <return-type type="void"/>
        <parameters>
          <parameter name="data" type="guint8*" array="true" array_length_param_index="1"/>
          <parameter name="size" type="guint"/>
        </parameters>
      </method>
      <method name="PeekBitsUint16" cname="gst_bit_reader_peek_bits_uint16">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="val" type="guint16*" owned="true" pass_as="out"/>
          <parameter name="nbits" type="guint"/>
        </parameters>
      </method>
      <method name="PeekBitsUint32" cname="gst_bit_reader_peek_bits_uint32">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="val" type="guint32*" owned="true" pass_as="out"/>
          <parameter name="nbits" type="guint"/>
        </parameters>
      </method>
      <method name="PeekBitsUint64" cname="gst_bit_reader_peek_bits_uint64">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="val" type="guint64*" owned="true" pass_as="out"/>
          <parameter name="nbits" type="guint"/>
        </parameters>
      </method>
      <method name="PeekBitsUint8" cname="gst_bit_reader_peek_bits_uint8">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="val" type="guint8*" owned="true" pass_as="out"/>
          <parameter name="nbits" type="guint"/>
        </parameters>
      </method>
      <method name="SetPos" cname="gst_bit_reader_set_pos">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="pos" type="guint"/>
        </parameters>
      </method>
      <method name="Skip" cname="gst_bit_reader_skip">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="nbits" type="guint"/>
        </parameters>
      </method>
      <method name="SkipToByte" cname="gst_bit_reader_skip_to_byte">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
    </struct>
    <struct name="ByteReader" cname="GstByteReader" opaque="false" hidden="false">
      <field cname="data" access="public" writeable="true" readable="true" name="Data" type="guint8"/>
      <field cname="size" access="public" writeable="true" readable="true" name="Size" type="guint"/>
      <field cname="byte" access="public" writeable="true" readable="true" name="Byte" type="guint"/>
      <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
      <method name="DupData" cname="gst_byte_reader_dup_data">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="size" type="guint*" owned="true" pass_as="out"/>
          <parameter name="val" type="guint8***" owned="true" pass_as="out" array="true" array_length_param_index="0"/>
        </parameters>
      </method>
      <method name="DupStringUtf16" cname="gst_byte_reader_dup_string_utf16">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="str" type="guint16***" owned="true" pass_as="out" array="true" null_term_array="true"/>
        </parameters>
      </method>
      <method name="DupStringUtf32" cname="gst_byte_reader_dup_string_utf32">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="str" type="guint32***" owned="true" pass_as="out" array="true" null_term_array="true"/>
        </parameters>
      </method>
      <method name="DupStringUtf8" cname="gst_byte_reader_dup_string_utf8">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="str" type="gchar***" owned="true" pass_as="out" array="true" null_term_array="true"/>
        </parameters>
      </method>
      <method name="Free" cname="gst_byte_reader_free">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="GetData" cname="gst_byte_reader_get_data">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="size" type="guint*" owned="true" pass_as="out"/>
          <parameter name="val" type="guint8**" pass_as="out" array="true" array_length_param_index="0"/>
        </parameters>
      </method>
      <method name="GetFloat32Be" cname="gst_byte_reader_get_float32_be">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="val" type="gfloat*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetFloat32Le" cname="gst_byte_reader_get_float32_le">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="val" type="gfloat*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetFloat64Be" cname="gst_byte_reader_get_float64_be">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="val" type="gdouble*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetFloat64Le" cname="gst_byte_reader_get_float64_le">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="val" type="gdouble*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetInt16Be" cname="gst_byte_reader_get_int16_be">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="val" type="gint16*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetInt16Le" cname="gst_byte_reader_get_int16_le">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="val" type="gint16*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetInt24Be" cname="gst_byte_reader_get_int24_be">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="val" type="gint32*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetInt24Le" cname="gst_byte_reader_get_int24_le">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="val" type="gint32*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetInt32Be" cname="gst_byte_reader_get_int32_be">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="val" type="gint32*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetInt32Le" cname="gst_byte_reader_get_int32_le">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="val" type="gint32*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetInt64Be" cname="gst_byte_reader_get_int64_be">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="val" type="gint64*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetInt64Le" cname="gst_byte_reader_get_int64_le">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="val" type="gint64*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetInt8" cname="gst_byte_reader_get_int8">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="val" type="gint8*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetPos" cname="gst_byte_reader_get_pos">
        <return-type type="guint"/>
        <parameters/>
      </method>
      <method name="GetRemaining" cname="gst_byte_reader_get_remaining">
        <return-type type="guint"/>
        <parameters/>
      </method>
      <method name="GetSize" cname="gst_byte_reader_get_size">
        <return-type type="guint"/>
        <parameters/>
      </method>
      <method name="GetStringUtf8" cname="gst_byte_reader_get_string_utf8">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="str" type="const-gchar**" pass_as="out" array="true" null_term_array="true"/>
        </parameters>
      </method>
      <method name="GetUint16Be" cname="gst_byte_reader_get_uint16_be">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="val" type="guint16*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetUint16Le" cname="gst_byte_reader_get_uint16_le">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="val" type="guint16*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetUint24Be" cname="gst_byte_reader_get_uint24_be">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="val" type="guint32*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetUint24Le" cname="gst_byte_reader_get_uint24_le">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="val" type="guint32*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetUint32Be" cname="gst_byte_reader_get_uint32_be">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="val" type="guint32*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetUint32Le" cname="gst_byte_reader_get_uint32_le">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="val" type="guint32*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetUint64Be" cname="gst_byte_reader_get_uint64_be">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="val" type="guint64*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetUint64Le" cname="gst_byte_reader_get_uint64_le">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="val" type="guint64*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetUint8" cname="gst_byte_reader_get_uint8">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="val" type="guint8*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="Init" cname="gst_byte_reader_init">
        <return-type type="void"/>
        <parameters>
          <parameter name="data" type="guint8*" array="true" array_length_param_index="1"/>
          <parameter name="size" type="guint"/>
        </parameters>
      </method>
      <method name="MaskedScanUint32" cname="gst_byte_reader_masked_scan_uint32">
        <return-type type="guint"/>
        <parameters>
          <parameter name="mask" type="guint32"/>
          <parameter name="pattern" type="guint32"/>
          <parameter name="offset" type="guint"/>
          <parameter name="size" type="guint"/>
        </parameters>
      </method>
      <method name="PeekData" cname="gst_byte_reader_peek_data">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="size" type="guint*" owned="true" pass_as="out"/>
          <parameter name="val" type="guint8**" pass_as="out" array="true" array_length_param_index="0"/>
        </parameters>
      </method>
      <method name="PeekFloat32Be" cname="gst_byte_reader_peek_float32_be">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="val" type="gfloat*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="PeekFloat32Le" cname="gst_byte_reader_peek_float32_le">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="val" type="gfloat*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="PeekFloat64Be" cname="gst_byte_reader_peek_float64_be">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="val" type="gdouble*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="PeekFloat64Le" cname="gst_byte_reader_peek_float64_le">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="val" type="gdouble*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="PeekInt16Be" cname="gst_byte_reader_peek_int16_be">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="val" type="gint16*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="PeekInt16Le" cname="gst_byte_reader_peek_int16_le">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="val" type="gint16*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="PeekInt24Be" cname="gst_byte_reader_peek_int24_be">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="val" type="gint32*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="PeekInt24Le" cname="gst_byte_reader_peek_int24_le">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="val" type="gint32*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="PeekInt32Be" cname="gst_byte_reader_peek_int32_be">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="val" type="gint32*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="PeekInt32Le" cname="gst_byte_reader_peek_int32_le">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="val" type="gint32*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="PeekInt64Be" cname="gst_byte_reader_peek_int64_be">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="val" type="gint64*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="PeekInt64Le" cname="gst_byte_reader_peek_int64_le">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="val" type="gint64*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="PeekInt8" cname="gst_byte_reader_peek_int8">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="val" type="gint8*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="PeekStringUtf8" cname="gst_byte_reader_peek_string_utf8">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="str" type="const-gchar**" pass_as="out" array="true" null_term_array="true"/>
        </parameters>
      </method>
      <method name="PeekUint16Be" cname="gst_byte_reader_peek_uint16_be">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="val" type="guint16*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="PeekUint16Le" cname="gst_byte_reader_peek_uint16_le">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="val" type="guint16*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="PeekUint24Be" cname="gst_byte_reader_peek_uint24_be">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="val" type="guint32*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="PeekUint24Le" cname="gst_byte_reader_peek_uint24_le">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="val" type="guint32*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="PeekUint32Be" cname="gst_byte_reader_peek_uint32_be">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="val" type="guint32*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="PeekUint32Le" cname="gst_byte_reader_peek_uint32_le">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="val" type="guint32*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="PeekUint64Be" cname="gst_byte_reader_peek_uint64_be">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="val" type="guint64*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="PeekUint64Le" cname="gst_byte_reader_peek_uint64_le">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="val" type="guint64*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="PeekUint8" cname="gst_byte_reader_peek_uint8">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="val" type="guint8*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="SetPos" cname="gst_byte_reader_set_pos">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="pos" type="guint"/>
        </parameters>
      </method>
      <method name="Skip" cname="gst_byte_reader_skip">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="nbytes" type="guint"/>
        </parameters>
      </method>
      <method name="SkipStringUtf16" cname="gst_byte_reader_skip_string_utf16">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="SkipStringUtf32" cname="gst_byte_reader_skip_string_utf32">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="SkipStringUtf8" cname="gst_byte_reader_skip_string_utf8">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
    </struct>
    <struct name="ByteWriter" cname="GstByteWriter" opaque="false" hidden="false">
      <field cname="parent" access="public" writeable="true" readable="true" name="Parent" type="GstByteReader">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="alloc_size" access="public" writeable="true" readable="true" name="AllocSize" type="guint"/>
      <field cname="fixed" access="public" writeable="true" readable="true" name="Fixed" type="gboolean"/>
      <field cname="owned" access="public" writeable="true" readable="true" name="Owned" type="gboolean"/>
      <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
      <method name="EnsureFreeSpace" cname="gst_byte_writer_ensure_free_space">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="size" type="guint"/>
        </parameters>
      </method>
      <method name="Fill" cname="gst_byte_writer_fill">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="value" type="guint8"/>
          <parameter name="size" type="guint"/>
        </parameters>
      </method>
      <method name="Free" cname="gst_byte_writer_free">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="FreeAndGetBuffer" cname="gst_byte_writer_free_and_get_buffer">
        <return-type type="GstBuffer*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="FreeAndGetData" cname="gst_byte_writer_free_and_get_data">
        <return-type type="guint8*" owned="true"/>
        <parameters/>
      </method>
      <method name="GetRemaining" cname="gst_byte_writer_get_remaining">
        <return-type type="guint"/>
        <parameters/>
      </method>
      <method name="Init" cname="gst_byte_writer_init">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="InitWithData" cname="gst_byte_writer_init_with_data">
        <return-type type="void"/>
        <parameters>
          <parameter name="data" type="guint8*" array="true" array_length_param_index="1"/>
          <parameter name="size" type="guint"/>
          <parameter name="initialized" type="gboolean"/>
        </parameters>
      </method>
      <method name="InitWithSize" cname="gst_byte_writer_init_with_size">
        <return-type type="void"/>
        <parameters>
          <parameter name="size" type="guint"/>
          <parameter name="fixed" type="gboolean"/>
        </parameters>
      </method>
      <method name="PutBuffer" cname="gst_byte_writer_put_buffer">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="buffer" type="GstBuffer*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="offset" type="gsize"/>
          <parameter name="size" type="gssize"/>
        </parameters>
      </method>
      <method name="PutData" cname="gst_byte_writer_put_data">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="data" type="guint8*" array="true" array_length_param_index="1"/>
          <parameter name="size" type="guint"/>
        </parameters>
      </method>
      <method name="PutFloat32Be" cname="gst_byte_writer_put_float32_be">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="val" type="gfloat"/>
        </parameters>
      </method>
      <method name="PutFloat32Le" cname="gst_byte_writer_put_float32_le">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="val" type="gfloat"/>
        </parameters>
      </method>
      <method name="PutFloat64Be" cname="gst_byte_writer_put_float64_be">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="val" type="gdouble"/>
        </parameters>
      </method>
      <method name="PutFloat64Le" cname="gst_byte_writer_put_float64_le">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="val" type="gdouble"/>
        </parameters>
      </method>
      <method name="PutInt16Be" cname="gst_byte_writer_put_int16_be">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="val" type="gint16"/>
        </parameters>
      </method>
      <method name="PutInt16Le" cname="gst_byte_writer_put_int16_le">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="val" type="gint16"/>
        </parameters>
      </method>
      <method name="PutInt24Be" cname="gst_byte_writer_put_int24_be">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="val" type="gint32"/>
        </parameters>
      </method>
      <method name="PutInt24Le" cname="gst_byte_writer_put_int24_le">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="val" type="gint32"/>
        </parameters>
      </method>
      <method name="PutInt32Be" cname="gst_byte_writer_put_int32_be">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="val" type="gint32"/>
        </parameters>
      </method>
      <method name="PutInt32Le" cname="gst_byte_writer_put_int32_le">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="val" type="gint32"/>
        </parameters>
      </method>
      <method name="PutInt64Be" cname="gst_byte_writer_put_int64_be">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="val" type="gint64"/>
        </parameters>
      </method>
      <method name="PutInt64Le" cname="gst_byte_writer_put_int64_le">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="val" type="gint64"/>
        </parameters>
      </method>
      <method name="PutInt8" cname="gst_byte_writer_put_int8">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="val" type="gint8"/>
        </parameters>
      </method>
      <method name="PutStringUtf16" cname="gst_byte_writer_put_string_utf16">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="data" type="guint16*" array="true" null_term_array="true"/>
        </parameters>
      </method>
      <method name="PutStringUtf32" cname="gst_byte_writer_put_string_utf32">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="data" type="guint32*" array="true" null_term_array="true"/>
        </parameters>
      </method>
      <method name="PutStringUtf8" cname="gst_byte_writer_put_string_utf8">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="data" type="const-gchar*" array="true" null_term_array="true"/>
        </parameters>
      </method>
      <method name="PutUint16Be" cname="gst_byte_writer_put_uint16_be">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="val" type="guint16"/>
        </parameters>
      </method>
      <method name="PutUint16Le" cname="gst_byte_writer_put_uint16_le">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="val" type="guint16"/>
        </parameters>
      </method>
      <method name="PutUint24Be" cname="gst_byte_writer_put_uint24_be">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="val" type="guint32"/>
        </parameters>
      </method>
      <method name="PutUint24Le" cname="gst_byte_writer_put_uint24_le">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="val" type="guint32"/>
        </parameters>
      </method>
      <method name="PutUint32Be" cname="gst_byte_writer_put_uint32_be">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="val" type="guint32"/>
        </parameters>
      </method>
      <method name="PutUint32Le" cname="gst_byte_writer_put_uint32_le">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="val" type="guint32"/>
        </parameters>
      </method>
      <method name="PutUint64Be" cname="gst_byte_writer_put_uint64_be">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="val" type="guint64"/>
        </parameters>
      </method>
      <method name="PutUint64Le" cname="gst_byte_writer_put_uint64_le">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="val" type="guint64"/>
        </parameters>
      </method>
      <method name="PutUint8" cname="gst_byte_writer_put_uint8">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="val" type="guint8"/>
        </parameters>
      </method>
      <method name="Reset" cname="gst_byte_writer_reset">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="ResetAndGetBuffer" cname="gst_byte_writer_reset_and_get_buffer">
        <return-type type="GstBuffer*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="ResetAndGetData" cname="gst_byte_writer_reset_and_get_data">
        <return-type type="guint8**" owned="true" array="true"/>
        <parameters/>
      </method>
    </struct>
    <struct name="CollectData" cname="GstCollectData" opaque="false" hidden="false">
      <field cname="collect" access="public" writeable="true" readable="true" name="Collect" type="GstCollectPads*"/>
      <field cname="pad" access="public" writeable="true" readable="true" name="Pad" type="GstPad*"/>
      <field cname="buffer" access="public" writeable="true" readable="true" name="Buffer" type="GstBuffer*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="pos" access="public" writeable="true" readable="true" name="Pos" type="guint"/>
      <field cname="segment" access="public" writeable="true" readable="true" name="Segment" type="GstSegment">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="state" access="private" writeable="false" readable="false" name="State" type="GstCollectPadsStateFlags"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GstCollectDataPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
    </struct>
    <struct name="CollectDataPrivate" cname="GstCollectDataPrivate" opaque="true" hidden="true"/>
    <struct name="CollectPadsPrivate" cname="GstCollectPadsPrivate" opaque="true" hidden="true"/>
    <object name="Global" cname="GstBaseGlobal" opaque="true">
      <method name="TypeFindHelper" cname="gst_type_find_helper" shared="true">
        <return-type type="GstCaps*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="src" type="GstPad*"/>
          <parameter name="size" type="guint64"/>
        </parameters>
      </method>
      <method name="TypeFindHelperForBuffer" cname="gst_type_find_helper_for_buffer" shared="true">
        <return-type type="GstCaps*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="obj" type="GstObject*"/>
          <parameter name="buf" type="GstBuffer*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter allow-none="1" name="prob" type="GstTypeFindProbability" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="TypeFindHelperForData" cname="gst_type_find_helper_for_data" shared="true">
        <return-type type="GstCaps*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="obj" type="GstObject*"/>
          <parameter name="data" type="guint8"/>
          <parameter name="size" type="gsize"/>
          <parameter allow-none="1" name="prob" type="GstTypeFindProbability" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="TypeFindHelperForExtension" cname="gst_type_find_helper_for_extension" shared="true">
        <return-type type="GstCaps*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter allow-none="1" name="obj" type="GstObject*"/>
          <parameter name="extension" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="TypeFindHelperGetRange" cname="gst_type_find_helper_get_range" shared="true">
        <return-type type="GstCaps*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="obj" type="GstObject*"/>
          <parameter name="parent" type="GstObject*"/>
          <parameter scope="call" name="func" type="GstTypeFindHelperGetRangeFunction"/>
          <parameter name="size" type="guint64"/>
          <parameter name="extension" type="const-gchar*"/>
          <parameter allow-none="1" name="prob" type="GstTypeFindProbability" owned="true" pass_as="out"/>
        </parameters>
      </method>
    </object>
    <object name="Constants" cname="GstBaseConstants" opaque="true">
      <constant value="2" ctype="gint" gtype="gint" name="BASE_PARSE_FLAG_DRAINING"/>
      <constant value="1" ctype="gint" gtype="gint" name="BASE_PARSE_FLAG_LOST_SYNC"/>
      <constant value="sink" ctype="gchar*" gtype="gchar*" name="BASE_TRANSFORM_SINK_NAME"/>
      <constant value="src" ctype="gchar*" gtype="gchar*" name="BASE_TRANSFORM_SRC_NAME"/>
    </object>
  </namespace>
  <namespace name="GstTag" library="gsttag-1.0">
    <enum name="TagDemuxResult" cname="GstTagDemuxResult" type="enum" gtype="gst_tag_demux_result_get_type">
      <member cname="GST_TAG_DEMUX_RESULT_BROKEN_TAG" name="BrokenTag" value="0"/>
      <member cname="GST_TAG_DEMUX_RESULT_AGAIN" name="Again" value="1"/>
      <member cname="GST_TAG_DEMUX_RESULT_OK" name="Ok" value="2"/>
    </enum>
    <enum name="TagImageType" cname="GstTagImageType" type="enum" gtype="gst_tag_image_type_get_type">
      <member cname="GST_TAG_IMAGE_TYPE_NONE" name="None" value="-1"/>
      <member cname="GST_TAG_IMAGE_TYPE_UNDEFINED" name="Undefined" value="0"/>
      <member cname="GST_TAG_IMAGE_TYPE_FRONT_COVER" name="FrontCover" value="1"/>
      <member cname="GST_TAG_IMAGE_TYPE_BACK_COVER" name="BackCover" value="2"/>
      <member cname="GST_TAG_IMAGE_TYPE_LEAFLET_PAGE" name="LeafletPage" value="3"/>
      <member cname="GST_TAG_IMAGE_TYPE_MEDIUM" name="Medium" value="4"/>
      <member cname="GST_TAG_IMAGE_TYPE_LEAD_ARTIST" name="LeadArtist" value="5"/>
      <member cname="GST_TAG_IMAGE_TYPE_ARTIST" name="Artist" value="6"/>
      <member cname="GST_TAG_IMAGE_TYPE_CONDUCTOR" name="Conductor" value="7"/>
      <member cname="GST_TAG_IMAGE_TYPE_BAND_ORCHESTRA" name="BandOrchestra" value="8"/>
      <member cname="GST_TAG_IMAGE_TYPE_COMPOSER" name="Composer" value="9"/>
      <member cname="GST_TAG_IMAGE_TYPE_LYRICIST" name="Lyricist" value="10"/>
      <member cname="GST_TAG_IMAGE_TYPE_RECORDING_LOCATION" name="RecordingLocation" value="11"/>
      <member cname="GST_TAG_IMAGE_TYPE_DURING_RECORDING" name="DuringRecording" value="12"/>
      <member cname="GST_TAG_IMAGE_TYPE_DURING_PERFORMANCE" name="DuringPerformance" value="13"/>
      <member cname="GST_TAG_IMAGE_TYPE_VIDEO_CAPTURE" name="VideoCapture" value="14"/>
      <member cname="GST_TAG_IMAGE_TYPE_FISH" name="Fish" value="15"/>
      <member cname="GST_TAG_IMAGE_TYPE_ILLUSTRATION" name="Illustration" value="16"/>
      <member cname="GST_TAG_IMAGE_TYPE_BAND_ARTIST_LOGO" name="ArtistLogo" value="17"/>
      <member cname="GST_TAG_IMAGE_TYPE_PUBLISHER_STUDIO_LOGO" name="PublisherStudioLogo" value="18"/>
    </enum>
    <enum name="TagLicenseFlags" cname="GstTagLicenseFlags" type="flags" gtype="gst_tag_license_flags_get_type">
      <member cname="GST_TAG_LICENSE_PERMITS_REPRODUCTION" name="PermitsReproduction" value="1"/>
      <member cname="GST_TAG_LICENSE_PERMITS_DISTRIBUTION" name="PermitsDistribution" value="2"/>
      <member cname="GST_TAG_LICENSE_PERMITS_DERIVATIVE_WORKS" name="PermitsDerivativeWorks" value="4"/>
      <member cname="GST_TAG_LICENSE_PERMITS_SHARING" name="PermitsSharing" value="8"/>
      <member cname="GST_TAG_LICENSE_REQUIRES_NOTICE" name="RequiresNotice" value="256"/>
      <member cname="GST_TAG_LICENSE_REQUIRES_ATTRIBUTION" name="RequiresAttributions" value="512"/>
      <member cname="GST_TAG_LICENSE_REQUIRES_SHARE_ALIKE" name="RequiresShareAlike" value="1024"/>
      <member cname="GST_TAG_LICENSE_REQUIRES_SOURCE_CODE" name="RequiresSourceCode" value="2048"/>
      <member cname="GST_TAG_LICENSE_REQUIRES_COPYLEFT" name="RequiresCopyleft" value="4096"/>
      <member cname="GST_TAG_LICENSE_REQUIRES_LESSER_COPYLEFT" name="RequiresLesserCopyleft" value="8192"/>
      <member cname="GST_TAG_LICENSE_PROHIBITS_COMMERCIAL_USE" name="ProhibitsCommercialUse" value="65536"/>
      <member cname="GST_TAG_LICENSE_PROHIBITS_HIGH_INCOME_NATION_USE" name="ProhibitsHighIncomeNationUse" value="131072"/>
      <member cname="GST_TAG_LICENSE_CREATIVE_COMMONS_LICENSE" name="CreativeCommonsLicense" value="16777216"/>
      <member cname="GST_TAG_LICENSE_FREE_SOFTWARE_FOUNDATION_LICENSE" name="FreeSoftwareFoundationLicense" value="33554432"/>
    </enum>
    <interface name="TagXmpWriter" cname="GstTagXmpWriter" abstract="false" opaque="false" hidden="false">
      <class_struct cname="GstTagXmpWriterInterface">
        <field cname="parent" access="public" writeable="false" readable="true" name="Parent" type="GTypeInterface">
          <warning>missing glib:type-name</warning>
        </field>
      </class_struct>
      <method name="GetType" cname="gst_tag_xmp_writer_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="AddAllSchemas" cname="gst_tag_xmp_writer_add_all_schemas">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="AddSchema" cname="gst_tag_xmp_writer_add_schema">
        <return-type type="void"/>
        <parameters>
          <parameter name="schema" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="HasSchema" cname="gst_tag_xmp_writer_has_schema">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="schema" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="RemoveAllSchemas" cname="gst_tag_xmp_writer_remove_all_schemas">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="RemoveSchema" cname="gst_tag_xmp_writer_remove_schema">
        <return-type type="void"/>
        <parameters>
          <parameter name="schema" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="TagListToXmpBuffer" cname="gst_tag_xmp_writer_tag_list_to_xmp_buffer">
        <return-type type="GstBuffer*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="taglist" type="GstTagList*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="read_only" type="gboolean"/>
        </parameters>
      </method>
    </interface>
    <object name="TagDemux" cname="GstTagDemux" abstract="true" opaque="false" hidden="false" parent="GstElement">
      <class_struct cname="GstTagDemuxClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GstElementClass">
          <warning>missing glib:type-name</warning>
        </field>
        <field cname="min_start_size" access="public" writeable="false" readable="true" name="MinStartSize" type="guint"/>
        <field cname="min_end_size" access="public" writeable="false" readable="true" name="MinEndSize" type="guint"/>
        <method vm="identify_tag"/>
        <method vm="parse_tag"/>
        <method vm="merge_tags"/>
        <field cname="reserved" access="private" writeable="false" readable="false" name="Reserved" type="gpointer" array="true" array_len="4"/>
      </class_struct>
      <method name="GetType" cname="gst_tag_demux_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <virtual_method name="IdentifyTag" cname="identify_tag">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="buffer" type="GstBuffer*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="start_tag" type="gboolean"/>
          <parameter name="tag_size" type="guint"/>
        </parameters>
      </virtual_method>
      <virtual_method name="MergeTags" cname="merge_tags">
        <return-type type="GstTagList*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="start_tags" type="GstTagList*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="end_tags" type="GstTagList*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="ParseTag" cname="parse_tag">
        <return-type type="GstTagDemuxResult"/>
        <parameters>
          <parameter name="buffer" type="GstBuffer*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="start_tag" type="gboolean"/>
          <parameter name="tag_size" type="guint"/>
          <parameter name="tags" type="GstTagList**">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <field cname="element" access="public" writeable="false" readable="true" name="Element" type="GstElement*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GstTagDemuxPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="reserved" access="private" writeable="false" readable="false" name="Reserved" type="gpointer" array="true" array_len="4"/>
    </object>
    <object name="TagMux" cname="GstTagMux" abstract="true" opaque="false" hidden="false" parent="GstElement">
      <implements>
        <interface cname="GstTagSetter"/>
      </implements>
      <class_struct cname="GstTagMuxClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GstElementClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="render_start_tag"/>
        <method vm="render_end_tag"/>
        <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
      </class_struct>
      <method name="GetType" cname="gst_tag_mux_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <virtual_method name="RenderEndTag" cname="render_end_tag">
        <return-type type="GstBuffer*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="tag_list" type="GstTagList*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="RenderStartTag" cname="render_start_tag">
        <return-type type="GstBuffer*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="tag_list" type="GstTagList*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <field cname="element" access="public" writeable="false" readable="true" name="Element" type="GstElement*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GstTagMuxPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
    </object>
    <struct name="TagDemuxPrivate" cname="GstTagDemuxPrivate" opaque="true" hidden="true"/>
    <struct name="TagMuxPrivate" cname="GstTagMuxPrivate" opaque="true" hidden="true"/>
    <object name="Global" cname="GstTagGlobal" opaque="true">
      <method name="TagCheckLanguageCode" cname="gst_tag_check_language_code" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="lang_code" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="TagFreeformStringToUtf8" cname="gst_tag_freeform_string_to_utf8" shared="true">
        <return-type type="gchar*" owned="true"/>
        <parameters>
          <parameter name="data" type="const-gchar*"/>
          <parameter name="size" type="gint"/>
          <parameter name="env_vars" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="TagFromId3Tag" cname="gst_tag_from_id3_tag" shared="true">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="id3_tag" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="TagFromId3UserTag" cname="gst_tag_from_id3_user_tag" shared="true">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="type" type="const-gchar*"/>
          <parameter name="id3_user_tag" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="TagFromVorbisTag" cname="gst_tag_from_vorbis_tag" shared="true">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="vorbis_tag" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="TagGetId3v2TagSize" cname="gst_tag_get_id3v2_tag_size" shared="true">
        <return-type type="guint"/>
        <parameters>
          <parameter name="buffer" type="GstBuffer*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="TagGetLanguageCodeIso6391" cname="gst_tag_get_language_code_iso_639_1" shared="true">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="lang_code" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="TagGetLanguageCodeIso6392B" cname="gst_tag_get_language_code_iso_639_2B" shared="true">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="lang_code" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="TagGetLanguageCodeIso6392T" cname="gst_tag_get_language_code_iso_639_2T" shared="true">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="lang_code" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="TagGetLanguageCodes" cname="gst_tag_get_language_codes" shared="true">
        <return-type type="gchar***" owned="true" array="true" null_term_array="true"/>
      </method>
      <method name="TagGetLanguageName" cname="gst_tag_get_language_name" shared="true">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="language_code" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="TagGetLicenseDescription" cname="gst_tag_get_license_description" shared="true">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="license_ref" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="TagGetLicenseFlags" cname="gst_tag_get_license_flags" shared="true">
        <return-type type="GstTagLicenseFlags"/>
        <parameters>
          <parameter name="license_ref" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="TagGetLicenseJurisdiction" cname="gst_tag_get_license_jurisdiction" shared="true">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="license_ref" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="TagGetLicenseNick" cname="gst_tag_get_license_nick" shared="true">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="license_ref" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="TagGetLicenseTitle" cname="gst_tag_get_license_title" shared="true">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="license_ref" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="TagGetLicenseVersion" cname="gst_tag_get_license_version" shared="true">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="license_ref" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="TagGetLicenses" cname="gst_tag_get_licenses" shared="true">
        <return-type type="gchar***" owned="true" array="true" null_term_array="true"/>
      </method>
      <method name="TagId3GenreCount" cname="gst_tag_id3_genre_count" shared="true">
        <return-type type="guint"/>
      </method>
      <method name="TagId3GenreGet" cname="gst_tag_id3_genre_get" shared="true">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="id" type="guint"/>
        </parameters>
      </method>
      <method name="TagImageDataToImageSample" cname="gst_tag_image_data_to_image_sample" shared="true">
        <return-type type="GstSample*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="image_data" type="guint8"/>
          <parameter name="image_data_len" type="guint"/>
          <parameter name="image_type" type="GstTagImageType"/>
        </parameters>
      </method>
      <method name="TagListAddId3Image" cname="gst_tag_list_add_id3_image" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="tag_list" type="GstTagList*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="image_data" type="guint8"/>
          <parameter name="image_data_len" type="guint"/>
          <parameter name="id3_picture_type" type="guint"/>
        </parameters>
      </method>
      <method name="TagListFromExifBuffer" cname="gst_tag_list_from_exif_buffer" shared="true">
        <return-type type="GstTagList*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="buffer" type="GstBuffer*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="byte_order" type="gint"/>
          <parameter name="base_offset" type="guint32"/>
        </parameters>
      </method>
      <method name="TagListFromExifBufferWithTiffHeader" cname="gst_tag_list_from_exif_buffer_with_tiff_header" shared="true">
        <return-type type="GstTagList*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="buffer" type="GstBuffer*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="TagListFromId3v2Tag" cname="gst_tag_list_from_id3v2_tag" shared="true">
        <return-type type="GstTagList*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="buffer" type="GstBuffer*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="TagListFromVorbiscomment" cname="gst_tag_list_from_vorbiscomment" shared="true">
        <return-type type="GstTagList*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="data" type="guint8"/>
          <parameter name="size" type="gsize"/>
          <parameter name="id_data" type="guint8"/>
          <parameter name="id_data_length" type="guint"/>
          <parameter name="vendor_string" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="TagListFromVorbiscommentBuffer" cname="gst_tag_list_from_vorbiscomment_buffer" shared="true">
        <return-type type="GstTagList*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="buffer" type="GstBuffer*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="id_data" type="guint8"/>
          <parameter name="id_data_length" type="guint"/>
          <parameter name="vendor_string" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="TagListFromXmpBuffer" cname="gst_tag_list_from_xmp_buffer" shared="true">
        <return-type type="GstTagList*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="buffer" type="GstBuffer*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="TagListNewFromId3v1" cname="gst_tag_list_new_from_id3v1" shared="true">
        <return-type type="GstTagList*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="data" type="guint8"/>
        </parameters>
      </method>
      <method name="TagListToExifBuffer" cname="gst_tag_list_to_exif_buffer" shared="true">
        <return-type type="GstBuffer*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="taglist" type="GstTagList*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="byte_order" type="gint"/>
          <parameter name="base_offset" type="guint32"/>
        </parameters>
      </method>
      <method name="TagListToExifBufferWithTiffHeader" cname="gst_tag_list_to_exif_buffer_with_tiff_header" shared="true">
        <return-type type="GstBuffer*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="taglist" type="GstTagList*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="TagListToVorbiscommentBuffer" cname="gst_tag_list_to_vorbiscomment_buffer" shared="true">
        <return-type type="GstBuffer*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="list" type="GstTagList*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="id_data" type="guint8"/>
          <parameter name="id_data_length" type="guint"/>
          <parameter name="vendor_string" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="TagListToXmpBuffer" cname="gst_tag_list_to_xmp_buffer" shared="true">
        <return-type type="GstBuffer*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="list" type="GstTagList*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="read_only" type="gboolean"/>
          <parameter name="schemas" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="TagParseExtendedComment" cname="gst_tag_parse_extended_comment" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="ext_comment" type="const-gchar*"/>
          <parameter name="key" type="const-gchar*"/>
          <parameter name="lang" type="const-gchar*"/>
          <parameter name="value" type="const-gchar*"/>
          <parameter name="fail_if_no_key" type="gboolean"/>
        </parameters>
      </method>
      <method name="TagRegisterMusicbrainzTags" cname="gst_tag_register_musicbrainz_tags" shared="true">
        <return-type type="void"/>
      </method>
      <method name="TagToId3Tag" cname="gst_tag_to_id3_tag" shared="true">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="gst_tag" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="TagToVorbisComments" cname="gst_tag_to_vorbis_comments" shared="true">
        <return-type type="GList*" element_type="gchar*" elements_owned="true" owned="true"/>
        <parameters>
          <parameter name="list" type="GstTagList*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="tag" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="TagToVorbisTag" cname="gst_tag_to_vorbis_tag" shared="true">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="gst_tag" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="TagXmpListSchemas" cname="gst_tag_xmp_list_schemas" shared="true">
        <return-type type="const gchar**" array="true" null_term_array="true"/>
      </method>
      <method name="VorbisTagAdd" cname="gst_vorbis_tag_add" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="list" type="GstTagList*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="tag" type="const-gchar*"/>
          <parameter name="value" type="const-gchar*"/>
        </parameters>
      </method>
    </object>
    <object name="Constants" cname="GstTagConstants" opaque="true">
      <constant value="capturing-contrast" ctype="gchar*" gtype="gchar*" name="TAG_CAPTURING_CONTRAST"/>
      <constant value="capturing-digital-zoom-ratio" ctype="gchar*" gtype="gchar*" name="TAG_CAPTURING_DIGITAL_ZOOM_RATIO"/>
      <constant value="capturing-exposure-compensation" ctype="gchar*" gtype="gchar*" name="TAG_CAPTURING_EXPOSURE_COMPENSATION"/>
      <constant value="capturing-exposure-mode" ctype="gchar*" gtype="gchar*" name="TAG_CAPTURING_EXPOSURE_MODE"/>
      <constant value="capturing-exposure-program" ctype="gchar*" gtype="gchar*" name="TAG_CAPTURING_EXPOSURE_PROGRAM"/>
      <constant value="capturing-flash-fired" ctype="gchar*" gtype="gchar*" name="TAG_CAPTURING_FLASH_FIRED"/>
      <constant value="capturing-flash-mode" ctype="gchar*" gtype="gchar*" name="TAG_CAPTURING_FLASH_MODE"/>
      <constant value="capturing-focal-length" ctype="gchar*" gtype="gchar*" name="TAG_CAPTURING_FOCAL_LENGTH"/>
      <constant value="capturing-focal-ratio" ctype="gchar*" gtype="gchar*" name="TAG_CAPTURING_FOCAL_RATIO"/>
      <constant value="capturing-gain-adjustment" ctype="gchar*" gtype="gchar*" name="TAG_CAPTURING_GAIN_ADJUSTMENT"/>
      <constant value="capturing-iso-speed" ctype="gchar*" gtype="gchar*" name="TAG_CAPTURING_ISO_SPEED"/>
      <constant value="capturing-metering-mode" ctype="gchar*" gtype="gchar*" name="TAG_CAPTURING_METERING_MODE"/>
      <constant value="capturing-saturation" ctype="gchar*" gtype="gchar*" name="TAG_CAPTURING_SATURATION"/>
      <constant value="capturing-scene-capture-type" ctype="gchar*" gtype="gchar*" name="TAG_CAPTURING_SCENE_CAPTURE_TYPE"/>
      <constant value="capturing-sharpness" ctype="gchar*" gtype="gchar*" name="TAG_CAPTURING_SHARPNESS"/>
      <constant value="capturing-shutter-speed" ctype="gchar*" gtype="gchar*" name="TAG_CAPTURING_SHUTTER_SPEED"/>
      <constant value="capturing-source" ctype="gchar*" gtype="gchar*" name="TAG_CAPTURING_SOURCE"/>
      <constant value="capturing-white-balance" ctype="gchar*" gtype="gchar*" name="TAG_CAPTURING_WHITE_BALANCE"/>
      <constant value="discid" ctype="gchar*" gtype="gchar*" name="TAG_CDDA_CDDB_DISCID"/>
      <constant value="discid-full" ctype="gchar*" gtype="gchar*" name="TAG_CDDA_CDDB_DISCID_FULL"/>
      <constant value="musicbrainz-discid" ctype="gchar*" gtype="gchar*" name="TAG_CDDA_MUSICBRAINZ_DISCID"/>
      <constant value="musicbrainz-discid-full" ctype="gchar*" gtype="gchar*" name="TAG_CDDA_MUSICBRAINZ_DISCID_FULL"/>
      <constant value="cmml-clip" ctype="gchar*" gtype="gchar*" name="TAG_CMML_CLIP"/>
      <constant value="cmml-head" ctype="gchar*" gtype="gchar*" name="TAG_CMML_HEAD"/>
      <constant value="cmml-stream" ctype="gchar*" gtype="gchar*" name="TAG_CMML_STREAM"/>
      <constant value="10" ctype="gint" gtype="gint" name="TAG_ID3V2_HEADER_SIZE"/>
      <constant value="image-horizontal-ppi" ctype="gchar*" gtype="gchar*" name="TAG_IMAGE_HORIZONTAL_PPI"/>
      <constant value="image-vertical-ppi" ctype="gchar*" gtype="gchar*" name="TAG_IMAGE_VERTICAL_PPI"/>
      <constant value="musicbrainz-albumartistid" ctype="gchar*" gtype="gchar*" name="TAG_MUSICBRAINZ_ALBUMARTISTID"/>
      <constant value="musicbrainz-albumid" ctype="gchar*" gtype="gchar*" name="TAG_MUSICBRAINZ_ALBUMID"/>
      <constant value="musicbrainz-artistid" ctype="gchar*" gtype="gchar*" name="TAG_MUSICBRAINZ_ARTISTID"/>
      <constant value="musicbrainz-trackid" ctype="gchar*" gtype="gchar*" name="TAG_MUSICBRAINZ_TRACKID"/>
      <constant value="musicbrainz-trmid" ctype="gchar*" gtype="gchar*" name="TAG_MUSICBRAINZ_TRMID"/>
    </object>
  </namespace>
  <namespace name="GstVideo" library="gstvideo-1.0">
    <enum name="ColorBalanceType" cname="GstColorBalanceType" type="enum" gtype="gst_color_balance_type_get_type">
      <member cname="GST_COLOR_BALANCE_HARDWARE" name="Hardware" value="0"/>
      <member cname="GST_COLOR_BALANCE_SOFTWARE" name="Software" value="1"/>
    </enum>
    <enum name="NavigationCommand" cname="GstNavigationCommand" type="enum" gtype="gst_navigation_command_get_type">
      <member cname="GST_NAVIGATION_COMMAND_INVALID" name="Invalid" value="0"/>
      <member cname="GST_NAVIGATION_COMMAND_MENU1" name="Menu1" value="1"/>
      <member cname="GST_NAVIGATION_COMMAND_MENU2" name="Menu2" value="2"/>
      <member cname="GST_NAVIGATION_COMMAND_MENU3" name="Menu3" value="3"/>
      <member cname="GST_NAVIGATION_COMMAND_MENU4" name="Menu4" value="4"/>
      <member cname="GST_NAVIGATION_COMMAND_MENU5" name="Menu5" value="5"/>
      <member cname="GST_NAVIGATION_COMMAND_MENU6" name="Menu6" value="6"/>
      <member cname="GST_NAVIGATION_COMMAND_MENU7" name="Menu7" value="7"/>
      <member cname="GST_NAVIGATION_COMMAND_LEFT" name="Left" value="20"/>
      <member cname="GST_NAVIGATION_COMMAND_RIGHT" name="Right" value="21"/>
      <member cname="GST_NAVIGATION_COMMAND_UP" name="Up" value="22"/>
      <member cname="GST_NAVIGATION_COMMAND_DOWN" name="Down" value="23"/>
      <member cname="GST_NAVIGATION_COMMAND_ACTIVATE" name="Activate" value="24"/>
      <member cname="GST_NAVIGATION_COMMAND_PREV_ANGLE" name="PrevAngle" value="30"/>
      <member cname="GST_NAVIGATION_COMMAND_NEXT_ANGLE" name="NextAngle" value="31"/>
    </enum>
    <enum name="NavigationEventType" cname="GstNavigationEventType" type="enum" gtype="gst_navigation_event_type_get_type">
      <member cname="GST_NAVIGATION_EVENT_INVALID" name="Invalid" value="0"/>
      <member cname="GST_NAVIGATION_EVENT_KEY_PRESS" name="KeyPress" value="1"/>
      <member cname="GST_NAVIGATION_EVENT_KEY_RELEASE" name="KeyRelease" value="2"/>
      <member cname="GST_NAVIGATION_EVENT_MOUSE_BUTTON_PRESS" name="MouseButtonPress" value="3"/>
      <member cname="GST_NAVIGATION_EVENT_MOUSE_BUTTON_RELEASE" name="MouseButtonRelease" value="4"/>
      <member cname="GST_NAVIGATION_EVENT_MOUSE_MOVE" name="MouseMove" value="5"/>
      <member cname="GST_NAVIGATION_EVENT_COMMAND" name="Command" value="6"/>
    </enum>
    <enum name="NavigationMessageType" cname="GstNavigationMessageType" type="enum" gtype="gst_navigation_message_type_get_type">
      <member cname="GST_NAVIGATION_MESSAGE_INVALID" name="Invalid" value="0"/>
      <member cname="GST_NAVIGATION_MESSAGE_MOUSE_OVER" name="MouseOver" value="1"/>
      <member cname="GST_NAVIGATION_MESSAGE_COMMANDS_CHANGED" name="CommandsChanged" value="2"/>
      <member cname="GST_NAVIGATION_MESSAGE_ANGLES_CHANGED" name="AnglesChanged" value="3"/>
    </enum>
    <enum name="NavigationQueryType" cname="GstNavigationQueryType" type="enum" gtype="gst_navigation_query_type_get_type">
      <member cname="GST_NAVIGATION_QUERY_INVALID" name="Invalid" value="0"/>
      <member cname="GST_NAVIGATION_QUERY_COMMANDS" name="Commands" value="1"/>
      <member cname="GST_NAVIGATION_QUERY_ANGLES" name="Angles" value="2"/>
    </enum>
    <enum name="VideoColorMatrix" cname="GstVideoColorMatrix" type="enum" gtype="gst_video_color_matrix_get_type">
      <member cname="GST_VIDEO_COLOR_MATRIX_UNKNOWN" name="Unknown" value="0"/>
      <member cname="GST_VIDEO_COLOR_MATRIX_RGB" name="Rgb" value="1"/>
      <member cname="GST_VIDEO_COLOR_MATRIX_FCC" name="Fcc" value="2"/>
      <member cname="GST_VIDEO_COLOR_MATRIX_BT709" name="Bt709" value="3"/>
      <member cname="GST_VIDEO_COLOR_MATRIX_BT601" name="Bt601" value="4"/>
      <member cname="GST_VIDEO_COLOR_MATRIX_SMPTE240M" name="Smpte240m" value="5"/>
    </enum>
    <enum name="VideoColorPrimaries" cname="GstVideoColorPrimaries" type="enum" gtype="gst_video_color_primaries_get_type">
      <member cname="GST_VIDEO_COLOR_PRIMARIES_UNKNOWN" name="Unknown" value="0"/>
      <member cname="GST_VIDEO_COLOR_PRIMARIES_BT709" name="Bt709" value="1"/>
      <member cname="GST_VIDEO_COLOR_PRIMARIES_BT470M" name="Bt470m" value="2"/>
      <member cname="GST_VIDEO_COLOR_PRIMARIES_BT470BG" name="Bt470bg" value="3"/>
      <member cname="GST_VIDEO_COLOR_PRIMARIES_SMPTE170M" name="Smpte170m" value="4"/>
      <member cname="GST_VIDEO_COLOR_PRIMARIES_SMPTE240M" name="Smpte240m" value="5"/>
      <member cname="GST_VIDEO_COLOR_PRIMARIES_FILM" name="Film" value="6"/>
    </enum>
    <enum name="VideoColorRange" cname="GstVideoColorRange" type="enum" gtype="gst_video_color_range_get_type">
      <member cname="GST_VIDEO_COLOR_RANGE_UNKNOWN" name="Unknown" value="0"/>
      <member cname="GST_VIDEO_COLOR_RANGE_0_255" name="0255" value="1"/>
      <member cname="GST_VIDEO_COLOR_RANGE_16_235" name="16235" value="2"/>
    </enum>
    <enum name="VideoFormat" cname="GstVideoFormat" type="enum" gtype="gst_video_format_get_type">
      <member cname="GST_VIDEO_FORMAT_UNKNOWN" name="Unknown" value="0"/>
      <member cname="GST_VIDEO_FORMAT_ENCODED" name="Encoded" value="1"/>
      <member cname="GST_VIDEO_FORMAT_I420" name="I420" value="2"/>
      <member cname="GST_VIDEO_FORMAT_YV12" name="Yv12" value="3"/>
      <member cname="GST_VIDEO_FORMAT_YUY2" name="Yuy2" value="4"/>
      <member cname="GST_VIDEO_FORMAT_UYVY" name="Uyvy" value="5"/>
      <member cname="GST_VIDEO_FORMAT_AYUV" name="Ayuv" value="6"/>
      <member cname="GST_VIDEO_FORMAT_RGBx" name="Rgbx" value="7"/>
      <member cname="GST_VIDEO_FORMAT_BGRx" name="Bgrx" value="8"/>
      <member cname="GST_VIDEO_FORMAT_xRGB" name="Xrgb" value="9"/>
      <member cname="GST_VIDEO_FORMAT_xBGR" name="Xbgr" value="10"/>
      <member cname="GST_VIDEO_FORMAT_RGBA" name="Rgba" value="11"/>
      <member cname="GST_VIDEO_FORMAT_BGRA" name="Bgra" value="12"/>
      <member cname="GST_VIDEO_FORMAT_ARGB" name="Argb" value="13"/>
      <member cname="GST_VIDEO_FORMAT_ABGR" name="Abgr" value="14"/>
      <member cname="GST_VIDEO_FORMAT_RGB" name="Rgb" value="15"/>
      <member cname="GST_VIDEO_FORMAT_BGR" name="Bgr" value="16"/>
      <member cname="GST_VIDEO_FORMAT_Y41B" name="Y41b" value="17"/>
      <member cname="GST_VIDEO_FORMAT_Y42B" name="Y42b" value="18"/>
      <member cname="GST_VIDEO_FORMAT_YVYU" name="Yvyu" value="19"/>
      <member cname="GST_VIDEO_FORMAT_Y444" name="Y444" value="20"/>
      <member cname="GST_VIDEO_FORMAT_v210" name="V210" value="21"/>
      <member cname="GST_VIDEO_FORMAT_v216" name="V216" value="22"/>
      <member cname="GST_VIDEO_FORMAT_NV12" name="Nv12" value="23"/>
      <member cname="GST_VIDEO_FORMAT_NV21" name="Nv21" value="24"/>
      <member cname="GST_VIDEO_FORMAT_GRAY8" name="Gray8" value="25"/>
      <member cname="GST_VIDEO_FORMAT_GRAY16_BE" name="Gray16Be" value="26"/>
      <member cname="GST_VIDEO_FORMAT_GRAY16_LE" name="Gray16Le" value="27"/>
      <member cname="GST_VIDEO_FORMAT_v308" name="V308" value="28"/>
      <member cname="GST_VIDEO_FORMAT_RGB16" name="Rgb16" value="29"/>
      <member cname="GST_VIDEO_FORMAT_BGR16" name="Bgr16" value="30"/>
      <member cname="GST_VIDEO_FORMAT_RGB15" name="Rgb15" value="31"/>
      <member cname="GST_VIDEO_FORMAT_BGR15" name="Bgr15" value="32"/>
      <member cname="GST_VIDEO_FORMAT_UYVP" name="Uyvp" value="33"/>
      <member cname="GST_VIDEO_FORMAT_A420" name="A420" value="34"/>
      <member cname="GST_VIDEO_FORMAT_RGB8P" name="Rgb8p" value="35"/>
      <member cname="GST_VIDEO_FORMAT_YUV9" name="Yuv9" value="36"/>
      <member cname="GST_VIDEO_FORMAT_YVU9" name="Yvu9" value="37"/>
      <member cname="GST_VIDEO_FORMAT_IYU1" name="Iyu1" value="38"/>
      <member cname="GST_VIDEO_FORMAT_ARGB64" name="Argb64" value="39"/>
      <member cname="GST_VIDEO_FORMAT_AYUV64" name="Ayuv64" value="40"/>
      <member cname="GST_VIDEO_FORMAT_r210" name="R210" value="41"/>
      <member cname="GST_VIDEO_FORMAT_I420_10BE" name="I42010be" value="42"/>
      <member cname="GST_VIDEO_FORMAT_I420_10LE" name="I42010le" value="43"/>
      <member cname="GST_VIDEO_FORMAT_I422_10BE" name="I42210be" value="44"/>
      <member cname="GST_VIDEO_FORMAT_I422_10LE" name="I42210le" value="45"/>
    </enum>
    <enum name="VideoInterlaceMode" cname="GstVideoInterlaceMode" type="enum" gtype="gst_video_interlace_mode_get_type">
      <member cname="GST_VIDEO_INTERLACE_MODE_PROGRESSIVE" name="Progressive" value="0"/>
      <member cname="GST_VIDEO_INTERLACE_MODE_INTERLEAVED" name="Interleaved" value="1"/>
      <member cname="GST_VIDEO_INTERLACE_MODE_MIXED" name="Mixed" value="2"/>
      <member cname="GST_VIDEO_INTERLACE_MODE_FIELDS" name="Fields" value="3"/>
    </enum>
    <enum name="VideoOverlayFormatFlags" cname="GstVideoOverlayFormatFlags" type="enum">
      <member cname="GST_VIDEO_OVERLAY_FORMAT_FLAG_NONE" name="None" value="0"/>
      <member cname="GST_VIDEO_OVERLAY_FORMAT_FLAG_PREMULTIPLIED_ALPHA" name="PremultipliedAlpha" value="1"/>
      <member cname="GST_VIDEO_OVERLAY_FORMAT_FLAG_GLOBAL_ALPHA" name="GlobalAlpha" value="2"/>
    </enum>
    <enum name="VideoPackFlags" cname="GstVideoPackFlags" type="enum" gtype="gst_video_pack_flags_get_type">
      <member cname="GST_VIDEO_PACK_FLAG_NONE" name="None" value="0"/>
      <member cname="GST_VIDEO_PACK_FLAG_TRUNCATE_RANGE" name="TruncateRange" value="1"/>
    </enum>
    <enum name="VideoTransferFunction" cname="GstVideoTransferFunction" type="enum" gtype="gst_video_transfer_function_get_type">
      <member cname="GST_VIDEO_TRANSFER_UNKNOWN" name="Unknown" value="0"/>
      <member cname="GST_VIDEO_TRANSFER_GAMMA10" name="Gamma10" value="1"/>
      <member cname="GST_VIDEO_TRANSFER_GAMMA18" name="Gamma18" value="2"/>
      <member cname="GST_VIDEO_TRANSFER_GAMMA20" name="Gamma20" value="3"/>
      <member cname="GST_VIDEO_TRANSFER_GAMMA22" name="Gamma22" value="4"/>
      <member cname="GST_VIDEO_TRANSFER_BT709" name="Bt709" value="5"/>
      <member cname="GST_VIDEO_TRANSFER_SMPTE240M" name="Smpte240m" value="6"/>
      <member cname="GST_VIDEO_TRANSFER_SRGB" name="Srgb" value="7"/>
      <member cname="GST_VIDEO_TRANSFER_GAMMA28" name="Gamma28" value="8"/>
      <member cname="GST_VIDEO_TRANSFER_LOG100" name="Log100" value="9"/>
      <member cname="GST_VIDEO_TRANSFER_LOG316" name="Log316" value="10"/>
    </enum>
    <enum name="VideoBufferFlags" cname="GstVideoBufferFlags" type="flags">
      <member cname="GST_VIDEO_BUFFER_FLAG_INTERLACED" name="Interlaced" value="1048576"/>
      <member cname="GST_VIDEO_BUFFER_FLAG_TFF" name="Tff" value="2097152"/>
      <member cname="GST_VIDEO_BUFFER_FLAG_RFF" name="Rff" value="4194304"/>
      <member cname="GST_VIDEO_BUFFER_FLAG_ONEFIELD" name="Onefield" value="8388608"/>
      <member cname="GST_VIDEO_BUFFER_FLAG_LAST" name="Last" value="268435456"/>
    </enum>
    <enum name="VideoChromaSite" cname="GstVideoChromaSite" type="flags" gtype="gst_video_chroma_site_get_type">
      <member cname="GST_VIDEO_CHROMA_SITE_UNKNOWN" name="Unknown" value="0"/>
      <member cname="GST_VIDEO_CHROMA_SITE_NONE" name="None" value="1"/>
      <member cname="GST_VIDEO_CHROMA_SITE_JPEG" name="Jpeg" value="1"/>
      <member cname="GST_VIDEO_CHROMA_SITE_H_COSITED" name="HCosited" value="2"/>
      <member cname="GST_VIDEO_CHROMA_SITE_MPEG2" name="Mpeg2" value="2"/>
      <member cname="GST_VIDEO_CHROMA_SITE_V_COSITED" name="VCosited" value="4"/>
      <member cname="GST_VIDEO_CHROMA_SITE_COSITED" name="Cosited" value="6"/>
      <member cname="GST_VIDEO_CHROMA_SITE_ALT_LINE" name="AltLine" value="8"/>
      <member cname="GST_VIDEO_CHROMA_SITE_DV" name="Dv" value="14"/>
    </enum>
    <enum name="VideoCodecFrameFlags" cname="GstVideoCodecFrameFlags" type="flags">
      <member cname="GST_VIDEO_CODEC_FRAME_FLAG_DECODE_ONLY" name="DecodeOnly" value="1"/>
      <member cname="GST_VIDEO_CODEC_FRAME_FLAG_SYNC_POINT" name="SyncPoint" value="2"/>
      <member cname="GST_VIDEO_CODEC_FRAME_FLAG_FORCE_KEYFRAME" name="ForceKeyframe" value="4"/>
      <member cname="GST_VIDEO_CODEC_FRAME_FLAG_FORCE_KEYFRAME_HEADERS" name="ForceKeyframeHeaders" value="8"/>
    </enum>
    <enum name="VideoFlags" cname="GstVideoFlags" type="flags" gtype="gst_video_flags_get_type">
      <member cname="GST_VIDEO_FLAG_NONE" name="None" value="0"/>
      <member cname="GST_VIDEO_FLAG_VARIABLE_FPS" name="VariableFps" value="1"/>
      <member cname="GST_VIDEO_FLAG_PREMULTIPLIED_ALPHA" name="PremultipliedAlpha" value="2"/>
    </enum>
    <enum name="VideoFormatFlags" cname="GstVideoFormatFlags" type="flags" gtype="gst_video_format_flags_get_type">
      <member cname="GST_VIDEO_FORMAT_FLAG_YUV" name="Yuv" value="1"/>
      <member cname="GST_VIDEO_FORMAT_FLAG_RGB" name="Rgb" value="2"/>
      <member cname="GST_VIDEO_FORMAT_FLAG_GRAY" name="Gray" value="4"/>
      <member cname="GST_VIDEO_FORMAT_FLAG_ALPHA" name="Alpha" value="8"/>
      <member cname="GST_VIDEO_FORMAT_FLAG_LE" name="Le" value="16"/>
      <member cname="GST_VIDEO_FORMAT_FLAG_PALETTE" name="Palette" value="32"/>
      <member cname="GST_VIDEO_FORMAT_FLAG_COMPLEX" name="Complex" value="64"/>
      <member cname="GST_VIDEO_FORMAT_FLAG_UNPACK" name="Unpack" value="128"/>
    </enum>
    <enum name="VideoFrameFlags" cname="GstVideoFrameFlags" type="flags">
      <member cname="GST_VIDEO_FRAME_FLAG_NONE" name="None" value="0"/>
      <member cname="GST_VIDEO_FRAME_FLAG_INTERLACED" name="Interlaced" value="1"/>
      <member cname="GST_VIDEO_FRAME_FLAG_TFF" name="Tff" value="2"/>
      <member cname="GST_VIDEO_FRAME_FLAG_RFF" name="Rff" value="4"/>
      <member cname="GST_VIDEO_FRAME_FLAG_ONEFIELD" name="Onefield" value="8"/>
    </enum>
    <callback name="VideoConvertSampleCallback" cname="GstVideoConvertSampleCallback">
      <return-type type="void"/>
      <parameters>
        <parameter name="sample" type="GstSample*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="error" type="GError*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter closure="2" name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="VideoFormatPack" cname="GstVideoFormatPack">
      <return-type type="void"/>
      <parameters>
        <parameter name="info" type="GstVideoFormatInfo*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="flags" type="GstVideoPackFlags"/>
        <parameter name="src" type="gpointer"/>
        <parameter name="sstride" type="gint"/>
        <parameter name="data" type="gpointer"/>
        <parameter name="stride" type="gint"/>
        <parameter name="chroma_site" type="GstVideoChromaSite"/>
        <parameter name="y" type="gint"/>
        <parameter name="width" type="gint"/>
      </parameters>
    </callback>
    <callback name="VideoFormatUnpack" cname="GstVideoFormatUnpack">
      <return-type type="void"/>
      <parameters>
        <parameter name="info" type="GstVideoFormatInfo*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="flags" type="GstVideoPackFlags"/>
        <parameter name="dest" type="gpointer"/>
        <parameter name="data" type="gpointer"/>
        <parameter name="stride" type="gint"/>
        <parameter name="x" type="gint"/>
        <parameter name="y" type="gint"/>
        <parameter name="width" type="gint"/>
      </parameters>
    </callback>
    <interface name="ColorBalance" cname="GstColorBalance" abstract="false" opaque="false" hidden="false">
      <class_struct cname="GstColorBalanceInterface">
        <field cname="iface" access="public" writeable="false" readable="true" name="Iface" type="GTypeInterface">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="list_channels"/>
        <method vm="set_value"/>
        <method vm="get_value"/>
        <method vm="get_balance_type"/>
        <method signal_vm="value_changed"/>
        <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
      </class_struct>
      <method name="GetType" cname="gst_color_balance_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <virtual_method name="GetBalanceType" cname="get_balance_type">
        <return-type type="GstColorBalanceType"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="GetValue" cname="get_value">
        <return-type type="gint"/>
        <parameters>
          <parameter name="channel" type="GstColorBalanceChannel*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="ListChannels" cname="list_channels" hidden="true">
        <return-type type="const GList*" element_type="gpointer"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="SetValue" cname="set_value">
        <return-type type="void"/>
        <parameters>
          <parameter name="channel" type="GstColorBalanceChannel*"/>
          <parameter name="value" type="gint"/>
        </parameters>
      </virtual_method>
      <method name="GetBalanceType" cname="gst_color_balance_get_balance_type">
        <return-type type="GstColorBalanceType"/>
        <parameters/>
      </method>
      <method name="GetValue" cname="gst_color_balance_get_value">
        <return-type type="gint"/>
        <parameters>
          <parameter name="channel" type="GstColorBalanceChannel*"/>
        </parameters>
      </method>
      <method name="SetValue" cname="gst_color_balance_set_value">
        <return-type type="void"/>
        <parameters>
          <parameter name="channel" type="GstColorBalanceChannel*"/>
          <parameter name="value" type="gint"/>
        </parameters>
      </method>
      <signal name="ValueChanged" cname="value-changed" when="last" field_name="value_changed">
        <return-type type="void"/>
        <parameters>
          <parameter name="channel" type="GstColorBalanceChannel*"/>
          <parameter name="value" type="gint"/>
        </parameters>
      </signal>
    </interface>
    <interface name="Navigation" cname="GstNavigation" abstract="false" opaque="false" hidden="false">
      <class_struct cname="GstNavigationInterface">
        <field cname="iface" access="public" writeable="false" readable="true" name="Iface" type="GTypeInterface">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="send_event"/>
      </class_struct>
      <method name="GetType" cname="gst_navigation_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="EventGetType" cname="gst_navigation_event_get_type" shared="true">
        <return-type type="GstNavigationEventType"/>
        <parameters>
          <parameter name="event" type="GstEvent*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="EventParseCommand" cname="gst_navigation_event_parse_command" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="event" type="GstEvent*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="command" type="GstNavigationCommand"/>
        </parameters>
      </method>
      <method name="EventParseKeyEvent" cname="gst_navigation_event_parse_key_event" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="event" type="GstEvent*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="key" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="EventParseMouseButtonEvent" cname="gst_navigation_event_parse_mouse_button_event" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="event" type="GstEvent*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="button" type="gint"/>
          <parameter name="x" type="gdouble"/>
          <parameter name="y" type="gdouble"/>
        </parameters>
      </method>
      <method name="EventParseMouseMoveEvent" cname="gst_navigation_event_parse_mouse_move_event" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="event" type="GstEvent*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="x" type="gdouble"/>
          <parameter name="y" type="gdouble"/>
        </parameters>
      </method>
      <method name="MessageGetType" cname="gst_navigation_message_get_type" shared="true">
        <return-type type="GstNavigationMessageType"/>
        <parameters>
          <parameter name="message" type="GstMessage*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="MessageNewAnglesChanged" cname="gst_navigation_message_new_angles_changed" shared="true">
        <return-type type="GstMessage*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="src" type="GstObject*"/>
          <parameter name="cur_angle" type="guint"/>
          <parameter name="n_angles" type="guint"/>
        </parameters>
      </method>
      <method name="MessageNewCommandsChanged" cname="gst_navigation_message_new_commands_changed" shared="true">
        <return-type type="GstMessage*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="src" type="GstObject*"/>
        </parameters>
      </method>
      <method name="MessageNewMouseOver" cname="gst_navigation_message_new_mouse_over" shared="true">
        <return-type type="GstMessage*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="src" type="GstObject*"/>
          <parameter name="active" type="gboolean"/>
        </parameters>
      </method>
      <method name="MessageParseAnglesChanged" cname="gst_navigation_message_parse_angles_changed" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="message" type="GstMessage*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="cur_angle" type="guint"/>
          <parameter name="n_angles" type="guint"/>
        </parameters>
      </method>
      <method name="MessageParseMouseOver" cname="gst_navigation_message_parse_mouse_over" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="message" type="GstMessage*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="active" type="gboolean"/>
        </parameters>
      </method>
      <method name="QueryGetType" cname="gst_navigation_query_get_type" shared="true">
        <return-type type="GstNavigationQueryType"/>
        <parameters>
          <parameter name="query" type="GstQuery*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="QueryNewAngles" cname="gst_navigation_query_new_angles" shared="true">
        <return-type type="GstQuery*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
      </method>
      <method name="QueryNewCommands" cname="gst_navigation_query_new_commands" shared="true">
        <return-type type="GstQuery*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
      </method>
      <method name="QueryParseAngles" cname="gst_navigation_query_parse_angles" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="query" type="GstQuery*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="cur_angle" type="guint"/>
          <parameter name="n_angles" type="guint"/>
        </parameters>
      </method>
      <method name="QueryParseCommandsLength" cname="gst_navigation_query_parse_commands_length" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="query" type="GstQuery*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="n_cmds" type="guint"/>
        </parameters>
      </method>
      <method name="QueryParseCommandsNth" cname="gst_navigation_query_parse_commands_nth" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="query" type="GstQuery*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="nth" type="guint"/>
          <parameter name="cmd" type="GstNavigationCommand"/>
        </parameters>
      </method>
      <method name="QuerySetAngles" cname="gst_navigation_query_set_angles" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="query" type="GstQuery*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="cur_angle" type="guint"/>
          <parameter name="n_angles" type="guint"/>
        </parameters>
      </method>
      <method name="QuerySetCommandsv" cname="gst_navigation_query_set_commandsv" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="query" type="GstQuery*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="n_cmds" type="gint"/>
          <parameter name="cmds" type="GstNavigationCommand"/>
        </parameters>
      </method>
      <virtual_method name="SendEvent" cname="send_event">
        <return-type type="void"/>
        <parameters>
          <parameter name="structure" type="GstStructure*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <method name="SendCommand" cname="gst_navigation_send_command">
        <return-type type="void"/>
        <parameters>
          <parameter name="command" type="GstNavigationCommand"/>
        </parameters>
      </method>
      <method name="SendEvent" cname="gst_navigation_send_event">
        <return-type type="void"/>
        <parameters>
          <parameter name="structure" type="GstStructure*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SendKeyEvent" cname="gst_navigation_send_key_event">
        <return-type type="void"/>
        <parameters>
          <parameter name="event" type="const-gchar*"/>
          <parameter name="key" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SendMouseEvent" cname="gst_navigation_send_mouse_event">
        <return-type type="void"/>
        <parameters>
          <parameter name="event" type="const-gchar*"/>
          <parameter name="button" type="gint"/>
          <parameter name="x" type="gdouble"/>
          <parameter name="y" type="gdouble"/>
        </parameters>
      </method>
    </interface>
    <interface name="VideoOrientation" cname="GstVideoOrientation" abstract="false" opaque="false" hidden="false">
      <class_struct cname="GstVideoOrientationInterface">
        <field cname="iface" access="public" writeable="false" readable="true" name="Iface" type="GTypeInterface">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="get_hflip"/>
        <method vm="get_vflip"/>
        <method vm="get_hcenter"/>
        <method vm="get_vcenter"/>
        <method vm="set_hflip"/>
        <method vm="set_vflip"/>
        <method vm="set_hcenter"/>
        <method vm="set_vcenter"/>
      </class_struct>
      <method name="GetType" cname="gst_video_orientation_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <virtual_method name="GetHcenter" cname="get_hcenter">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="center" type="gint"/>
        </parameters>
      </virtual_method>
      <virtual_method name="GetHflip" cname="get_hflip">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="flip" type="gboolean"/>
        </parameters>
      </virtual_method>
      <virtual_method name="GetVcenter" cname="get_vcenter">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="center" type="gint"/>
        </parameters>
      </virtual_method>
      <virtual_method name="GetVflip" cname="get_vflip">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="flip" type="gboolean"/>
        </parameters>
      </virtual_method>
      <virtual_method name="SetHcenter" cname="set_hcenter">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="center" type="gint"/>
        </parameters>
      </virtual_method>
      <virtual_method name="SetHflip" cname="set_hflip">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="flip" type="gboolean"/>
        </parameters>
      </virtual_method>
      <virtual_method name="SetVcenter" cname="set_vcenter">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="center" type="gint"/>
        </parameters>
      </virtual_method>
      <virtual_method name="SetVflip" cname="set_vflip">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="flip" type="gboolean"/>
        </parameters>
      </virtual_method>
      <method name="GetHcenter" cname="gst_video_orientation_get_hcenter">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="center" type="gint"/>
        </parameters>
      </method>
      <method name="GetHflip" cname="gst_video_orientation_get_hflip">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="flip" type="gboolean"/>
        </parameters>
      </method>
      <method name="GetVcenter" cname="gst_video_orientation_get_vcenter">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="center" type="gint"/>
        </parameters>
      </method>
      <method name="GetVflip" cname="gst_video_orientation_get_vflip">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="flip" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetHcenter" cname="gst_video_orientation_set_hcenter">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="center" type="gint"/>
        </parameters>
      </method>
      <method name="SetHflip" cname="gst_video_orientation_set_hflip">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="flip" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetVcenter" cname="gst_video_orientation_set_vcenter">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="center" type="gint"/>
        </parameters>
      </method>
      <method name="SetVflip" cname="gst_video_orientation_set_vflip">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="flip" type="gboolean"/>
        </parameters>
      </method>
    </interface>
    <interface name="VideoOverlay" cname="GstVideoOverlay" abstract="false" opaque="false" hidden="false">
      <class_struct cname="GstVideoOverlayInterface">
        <field cname="iface" access="public" writeable="false" readable="true" name="Iface" type="GTypeInterface">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="expose"/>
        <method vm="handle_events"/>
        <method vm="set_render_rectangle"/>
        <method vm="set_window_handle"/>
      </class_struct>
      <method name="GetType" cname="gst_video_overlay_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <virtual_method name="Expose" cname="expose">
        <return-type type="void"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="HandleEvents" cname="handle_events">
        <return-type type="void"/>
        <parameters>
          <parameter name="handle_events" type="gboolean"/>
        </parameters>
      </virtual_method>
      <virtual_method name="SetRenderRectangle" cname="set_render_rectangle">
        <return-type type="void"/>
        <parameters>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
        </parameters>
      </virtual_method>
      <virtual_method name="SetWindowHandle" cname="set_window_handle">
        <return-type type="void"/>
        <parameters>
          <parameter name="handle" type="guintptr"/>
        </parameters>
      </virtual_method>
      <method name="Expose" cname="gst_video_overlay_expose">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="GotWindowHandle" cname="gst_video_overlay_got_window_handle">
        <return-type type="void"/>
        <parameters>
          <parameter name="handle" type="guintptr"/>
        </parameters>
      </method>
      <method name="HandleEvents" cname="gst_video_overlay_handle_events">
        <return-type type="void"/>
        <parameters>
          <parameter name="handle_events" type="gboolean"/>
        </parameters>
      </method>
      <method name="PrepareWindowHandle" cname="gst_video_overlay_prepare_window_handle">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="SetRenderRectangle" cname="gst_video_overlay_set_render_rectangle">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
        </parameters>
      </method>
      <method name="SetWindowHandle" cname="gst_video_overlay_set_window_handle">
        <return-type type="void"/>
        <parameters>
          <parameter name="handle" type="guintptr"/>
        </parameters>
      </method>
    </interface>
    <object name="ColorBalanceChannel" cname="GstColorBalanceChannel" abstract="false" opaque="false" hidden="false" parent="GObject">
      <class_struct cname="GstColorBalanceChannelClass">
        <field cname="parent" access="public" writeable="false" readable="true" name="Parent" type="GObjectClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method signal_vm="value_changed"/>
        <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
      </class_struct>
      <method name="GetType" cname="gst_color_balance_channel_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <field cname="parent" access="public" writeable="false" readable="true" name="Parent" type="GObject*"/>
      <field cname="label" access="public" writeable="false" readable="true" name="Label" type="gchar*"/>
      <field cname="min_value" access="public" writeable="false" readable="true" name="MinValue" type="gint"/>
      <field cname="max_value" access="public" writeable="false" readable="true" name="MaxValue" type="gint"/>
      <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
      <signal name="ValueChanged" cname="value-changed" when="last" field_name="value_changed">
        <return-type type="void"/>
        <parameters>
          <parameter name="value" type="gint"/>
        </parameters>
      </signal>
    </object>
    <object name="VideoBufferPool" cname="GstVideoBufferPool" abstract="false" opaque="false" hidden="false" parent="GstBufferPool">
      <class_struct cname="GstVideoBufferPoolClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GstBufferPoolClass">
          <warning>missing glib:type-name</warning>
        </field>
      </class_struct>
      <method name="GetType" cname="gst_video_buffer_pool_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gst_video_buffer_pool_new" disable_void_ctor=""/>
      <field cname="bufferpool" access="public" writeable="false" readable="true" name="Bufferpool" type="GstBufferPool*"/>
      <field cname="priv" access="public" writeable="false" readable="true" name="Priv" type="GstVideoBufferPoolPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="VideoDecoder" cname="GstVideoDecoder" abstract="true" opaque="false" hidden="false" parent="GstElement">
      <class_struct cname="GstVideoDecoderClass">
        <field cname="element_class" access="private" writeable="false" readable="false" name="ElementClass" type="GstElementClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="open"/>
        <method vm="close"/>
        <method vm="start"/>
        <method vm="stop"/>
        <method vm="parse"/>
        <method vm="set_format"/>
        <method vm="reset"/>
        <method vm="finish"/>
        <method vm="handle_frame"/>
        <method vm="sink_event"/>
        <method vm="src_event"/>
        <method vm="negotiate"/>
        <method vm="decide_allocation"/>
        <method vm="propose_allocation"/>
        <field cname="padding" access="private" writeable="false" readable="false" name="Padding" type="void" array="true" array_len="20"/>
      </class_struct>
      <method name="GetType" cname="gst_video_decoder_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <virtual_method name="Close" cname="close">
        <return-type type="gboolean"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="DecideAllocation" cname="decide_allocation">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="query" type="GstQuery*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="Finish" cname="finish">
        <return-type type="GstFlowReturn"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="HandleFrame" cname="handle_frame">
        <return-type type="GstFlowReturn"/>
        <parameters>
          <parameter name="frame" type="GstVideoCodecFrame*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="Negotiate" cname="negotiate">
        <return-type type="gboolean"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="Open" cname="open">
        <return-type type="gboolean"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="Parse" cname="parse">
        <return-type type="GstFlowReturn"/>
        <parameters>
          <parameter name="frame" type="GstVideoCodecFrame*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="adapter" type="GstAdapter*"/>
          <parameter name="at_eos" type="gboolean"/>
        </parameters>
      </virtual_method>
      <virtual_method name="ProposeAllocation" cname="propose_allocation">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="query" type="GstQuery*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="Reset" cname="reset">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="hard" type="gboolean"/>
        </parameters>
      </virtual_method>
      <virtual_method name="SetFormat" cname="set_format">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="state" type="GstVideoCodecState*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="SinkEvent" cname="sink_event">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="event" type="GstEvent*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="SrcEvent" cname="src_event">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="event" type="GstEvent*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="Start" cname="start">
        <return-type type="gboolean"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="Stop" cname="stop">
        <return-type type="gboolean"/>
        <parameters/>
      </virtual_method>
      <method name="AddToFrame" cname="gst_video_decoder_add_to_frame">
        <return-type type="void"/>
        <parameters>
          <parameter name="n_bytes" type="gint"/>
        </parameters>
      </method>
      <method name="AllocateOutputBuffer" cname="gst_video_decoder_allocate_output_buffer">
        <return-type type="GstBuffer*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="AllocateOutputFrame" cname="gst_video_decoder_allocate_output_frame">
        <return-type type="GstFlowReturn"/>
        <parameters>
          <parameter name="frame" type="GstVideoCodecFrame*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="DropFrame" cname="gst_video_decoder_drop_frame">
        <return-type type="GstFlowReturn"/>
        <parameters>
          <parameter name="frame" type="GstVideoCodecFrame*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="FinishFrame" cname="gst_video_decoder_finish_frame">
        <return-type type="GstFlowReturn"/>
        <parameters>
          <parameter name="frame" type="GstVideoCodecFrame*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetAllocator" cname="gst_video_decoder_get_allocator">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="allocator" type="GstAllocator*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="params" type="GstAllocationParams*" owned="true" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetBufferPool" cname="gst_video_decoder_get_buffer_pool">
        <return-type type="GstBufferPool*" owned="true"/>
        <parameters/>
      </method>
      <method name="GetEstimateRate" cname="gst_video_decoder_get_estimate_rate">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetFrame" cname="gst_video_decoder_get_frame">
        <return-type type="GstVideoCodecFrame*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="frame_number" type="gint"/>
        </parameters>
      </method>
      <method name="GetFrames" cname="gst_video_decoder_get_frames">
        <return-type type="GList*" element_type="GList*" elements_owned="true" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetLatency" cname="gst_video_decoder_get_latency">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="min_latency" type="guint64" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="max_latency" type="guint64" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetMaxDecodeTime" cname="gst_video_decoder_get_max_decode_time">
        <return-type type="gint64"/>
        <parameters>
          <parameter name="frame" type="GstVideoCodecFrame*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetMaxErrors" cname="gst_video_decoder_get_max_errors">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetOldestFrame" cname="gst_video_decoder_get_oldest_frame">
        <return-type type="GstVideoCodecFrame*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetOutputState" cname="gst_video_decoder_get_output_state">
        <return-type type="GstVideoCodecState*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetPacketized" cname="gst_video_decoder_get_packetized">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetQosProportion" cname="gst_video_decoder_get_qos_proportion">
        <return-type type="gdouble"/>
        <parameters/>
      </method>
      <method name="HaveFrame" cname="gst_video_decoder_have_frame">
        <return-type type="GstFlowReturn"/>
        <parameters/>
      </method>
      <method name="MergeTags" cname="gst_video_decoder_merge_tags">
        <return-type type="void"/>
        <parameters>
          <parameter name="tags" type="GstTagList*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="mode" type="GstTagMergeMode"/>
        </parameters>
      </method>
      <method name="Negotiate" cname="gst_video_decoder_negotiate">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="SetEstimateRate" cname="gst_video_decoder_set_estimate_rate">
        <return-type type="void"/>
        <parameters>
          <parameter name="enabled" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetLatency" cname="gst_video_decoder_set_latency">
        <return-type type="void"/>
        <parameters>
          <parameter name="min_latency" type="guint64"/>
          <parameter name="max_latency" type="guint64"/>
        </parameters>
      </method>
      <method name="SetMaxErrors" cname="gst_video_decoder_set_max_errors">
        <return-type type="void"/>
        <parameters>
          <parameter name="num" type="gint"/>
        </parameters>
      </method>
      <method name="SetOutputState" cname="gst_video_decoder_set_output_state">
        <return-type type="GstVideoCodecState*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="fmt" type="GstVideoFormat"/>
          <parameter name="width" type="guint"/>
          <parameter name="height" type="guint"/>
          <parameter allow-none="1" name="reference" type="GstVideoCodecState*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetPacketized" cname="gst_video_decoder_set_packetized">
        <return-type type="void"/>
        <parameters>
          <parameter name="packetized" type="gboolean"/>
        </parameters>
      </method>
      <field cname="element" access="private" writeable="false" readable="false" name="Element" type="GstElement*"/>
      <field cname="sinkpad" access="private" writeable="false" readable="false" name="Sinkpad" type="GstPad*"/>
      <field cname="srcpad" access="private" writeable="false" readable="false" name="Srcpad" type="GstPad*"/>
      <field cname="stream_lock" access="private" writeable="false" readable="false" name="StreamLock" type="GRecMutex">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="input_segment" access="private" writeable="false" readable="false" name="InputSegment" type="GstSegment">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="output_segment" access="private" writeable="false" readable="false" name="OutputSegment" type="GstSegment">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GstVideoDecoderPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="padding" access="private" writeable="false" readable="false" name="Padding" type="void" array="true" array_len="20"/>
    </object>
    <object name="VideoEncoder" cname="GstVideoEncoder" abstract="true" opaque="false" hidden="false" parent="GstElement">
      <implements>
        <interface cname="GstPreset"/>
      </implements>
      <class_struct cname="GstVideoEncoderClass">
        <field cname="element_class" access="private" writeable="false" readable="false" name="ElementClass" type="GstElementClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="open"/>
        <method vm="close"/>
        <method vm="start"/>
        <method vm="stop"/>
        <method vm="set_format"/>
        <method vm="handle_frame"/>
        <method vm="reset"/>
        <method vm="finish"/>
        <method vm="pre_push"/>
        <method vm="getcaps"/>
        <method vm="sink_event"/>
        <method vm="src_event"/>
        <method vm="negotiate"/>
        <method vm="decide_allocation"/>
        <method vm="propose_allocation"/>
        <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="20"/>
      </class_struct>
      <method name="GetType" cname="gst_video_encoder_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <virtual_method name="Close" cname="close">
        <return-type type="gboolean"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="DecideAllocation" cname="decide_allocation">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="query" type="GstQuery*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="Finish" cname="finish">
        <return-type type="GstFlowReturn"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="Getcaps" cname="getcaps">
        <return-type type="GstCaps*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="filter" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="HandleFrame" cname="handle_frame">
        <return-type type="GstFlowReturn"/>
        <parameters>
          <parameter name="frame" type="GstVideoCodecFrame*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="Negotiate" cname="negotiate">
        <return-type type="gboolean"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="Open" cname="open">
        <return-type type="gboolean"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="PrePush" cname="pre_push">
        <return-type type="GstFlowReturn"/>
        <parameters>
          <parameter name="frame" type="GstVideoCodecFrame*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="ProposeAllocation" cname="propose_allocation">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="query" type="GstQuery*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="Reset" cname="reset">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="hard" type="gboolean"/>
        </parameters>
      </virtual_method>
      <virtual_method name="SetFormat" cname="set_format">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="state" type="GstVideoCodecState*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="SinkEvent" cname="sink_event">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="event" type="GstEvent*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="SrcEvent" cname="src_event">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="event" type="GstEvent*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="Start" cname="start">
        <return-type type="gboolean"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="Stop" cname="stop">
        <return-type type="gboolean"/>
        <parameters/>
      </virtual_method>
      <method name="AllocateOutputBuffer" cname="gst_video_encoder_allocate_output_buffer">
        <return-type type="GstBuffer*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="size" type="gsize"/>
        </parameters>
      </method>
      <method name="AllocateOutputFrame" cname="gst_video_encoder_allocate_output_frame">
        <return-type type="GstFlowReturn"/>
        <parameters>
          <parameter name="frame" type="GstVideoCodecFrame*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="size" type="gsize"/>
        </parameters>
      </method>
      <method name="FinishFrame" cname="gst_video_encoder_finish_frame">
        <return-type type="GstFlowReturn"/>
        <parameters>
          <parameter name="frame" type="GstVideoCodecFrame*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetAllocator" cname="gst_video_encoder_get_allocator">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="allocator" type="GstAllocator*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="params" type="GstAllocationParams*" owned="true" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetDiscont" cname="gst_video_encoder_get_discont">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetFrame" cname="gst_video_encoder_get_frame">
        <return-type type="GstVideoCodecFrame*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="frame_number" type="gint"/>
        </parameters>
      </method>
      <method name="GetFrames" cname="gst_video_encoder_get_frames">
        <return-type type="GList*" element_type="GList*" elements_owned="true" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetLatency" cname="gst_video_encoder_get_latency">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="min_latency" type="guint64" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="max_latency" type="guint64" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetOldestFrame" cname="gst_video_encoder_get_oldest_frame">
        <return-type type="GstVideoCodecFrame*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetOutputState" cname="gst_video_encoder_get_output_state">
        <return-type type="GstVideoCodecState*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="MergeTags" cname="gst_video_encoder_merge_tags">
        <return-type type="void"/>
        <parameters>
          <parameter name="tags" type="GstTagList*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="mode" type="GstTagMergeMode"/>
        </parameters>
      </method>
      <method name="Negotiate" cname="gst_video_encoder_negotiate">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="ProxyGetcaps" cname="gst_video_encoder_proxy_getcaps">
        <return-type type="GstCaps*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="caps" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="filter" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetDiscont" cname="gst_video_encoder_set_discont">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="SetHeaders" cname="gst_video_encoder_set_headers">
        <return-type type="void"/>
        <parameters>
          <parameter name="headers" type="GList*" element_type="GList*" elements_owned="true" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetLatency" cname="gst_video_encoder_set_latency">
        <return-type type="void"/>
        <parameters>
          <parameter name="min_latency" type="guint64"/>
          <parameter name="max_latency" type="guint64"/>
        </parameters>
      </method>
      <method name="SetOutputState" cname="gst_video_encoder_set_output_state">
        <return-type type="GstVideoCodecState*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="caps" type="GstCaps*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter allow-none="1" name="reference" type="GstVideoCodecState*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <field cname="element" access="private" writeable="false" readable="false" name="Element" type="GstElement*"/>
      <field cname="sinkpad" access="private" writeable="false" readable="false" name="Sinkpad" type="GstPad*"/>
      <field cname="srcpad" access="private" writeable="false" readable="false" name="Srcpad" type="GstPad*"/>
      <field cname="stream_lock" access="private" writeable="false" readable="false" name="StreamLock" type="GRecMutex">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="input_segment" access="private" writeable="false" readable="false" name="InputSegment" type="GstSegment">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="output_segment" access="private" writeable="false" readable="false" name="OutputSegment" type="GstSegment">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GstVideoEncoderPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="padding" access="private" writeable="false" readable="false" name="Padding" type="void" array="true" array_len="20"/>
    </object>
    <object name="VideoFilter" cname="GstVideoFilter" abstract="true" opaque="false" hidden="false" parent="GstBaseTransform">
      <class_struct cname="GstVideoFilterClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GstBaseTransformClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="set_info"/>
        <method vm="transform_frame"/>
        <method vm="transform_frame_ip"/>
        <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
      </class_struct>
      <method name="GetType" cname="gst_video_filter_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <virtual_method name="SetInfo" cname="set_info">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="incaps" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="in_info" type="GstVideoInfo*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="outcaps" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="out_info" type="GstVideoInfo*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="TransformFrame" cname="transform_frame">
        <return-type type="GstFlowReturn"/>
        <parameters>
          <parameter name="inframe" type="GstVideoFrame*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="outframe" type="GstVideoFrame*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="TransformFrameIp" cname="transform_frame_ip">
        <return-type type="GstFlowReturn"/>
        <parameters>
          <parameter name="frame" type="GstVideoFrame*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <field cname="element" access="public" writeable="false" readable="true" name="Element" type="GstBaseTransform*"/>
      <field cname="negotiated" access="public" writeable="false" readable="true" name="Negotiated" type="gboolean"/>
      <field cname="in_info" access="public" writeable="false" readable="true" name="InInfo" type="GstVideoInfo">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="out_info" access="public" writeable="false" readable="true" name="OutInfo" type="GstVideoInfo">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
    </object>
    <object name="VideoSink" cname="GstVideoSink" abstract="false" opaque="false" hidden="false" parent="GstBaseSink">
      <class_struct cname="GstVideoSinkClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GstBaseSinkClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="show_frame"/>
        <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
      </class_struct>
      <method name="GetType" cname="gst_video_sink_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="CenterRect" cname="gst_video_sink_center_rect" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="src" type="GstVideoRectangle">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="dst" type="GstVideoRectangle">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="_result" type="GstVideoRectangle*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="scaling" type="gboolean"/>
        </parameters>
      </method>
      <virtual_method name="ShowFrame" cname="show_frame">
        <return-type type="GstFlowReturn"/>
        <parameters>
          <parameter name="buf" type="GstBuffer*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <property name="ShowPrerollFrame" cname="show-preroll-frame" type="gboolean" readable="true" writeable="true" construct="true" construct-only="false"/>
      <field cname="element" access="public" writeable="false" readable="true" name="Element" type="GstBaseSink*"/>
      <field cname="width" access="public" writeable="false" readable="true" name="Width" type="gint"/>
      <field cname="height" access="public" writeable="false" readable="true" name="Height" type="gint"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GstVideoSinkPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
    </object>
    <struct name="VideoAlignment" cname="GstVideoAlignment" opaque="false" hidden="false">
      <field cname="padding_top" access="public" writeable="true" readable="true" name="PaddingTop" type="guint"/>
      <field cname="padding_bottom" access="public" writeable="true" readable="true" name="PaddingBottom" type="guint"/>
      <field cname="padding_left" access="public" writeable="true" readable="true" name="PaddingLeft" type="guint"/>
      <field cname="padding_right" access="public" writeable="true" readable="true" name="PaddingRight" type="guint"/>
      <field cname="stride_align" access="public" writeable="true" readable="true" name="StrideAlign" type="guint" array="true" array_len="4"/>
      <method name="Reset" cname="gst_video_alignment_reset">
        <return-type type="void"/>
        <parameters/>
      </method>
    </struct>
    <struct name="VideoBufferPoolPrivate" cname="GstVideoBufferPoolPrivate" opaque="true" hidden="true"/>
    <boxed name="VideoCodecFrame" cname="GstVideoCodecFrame" opaque="false" hidden="false">
      <method name="GetType" cname="gst_video_codec_frame_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <field cname="ref_count" access="private" writeable="false" readable="false" name="RefCount" type="gint"/>
      <field cname="flags" access="private" writeable="false" readable="false" name="Flags" type="guint32"/>
      <field cname="system_frame_number" access="public" writeable="true" readable="true" name="SystemFrameNumber" type="guint32"/>
      <field cname="decode_frame_number" access="public" writeable="true" readable="true" name="DecodeFrameNumber" type="guint32"/>
      <field cname="presentation_frame_number" access="public" writeable="true" readable="true" name="PresentationFrameNumber" type="guint32"/>
      <field cname="dts" access="public" writeable="true" readable="true" name="Dts" type="guint64"/>
      <field cname="pts" access="public" writeable="true" readable="true" name="Pts" type="guint64"/>
      <field cname="duration" access="public" writeable="true" readable="true" name="Duration" type="guint64"/>
      <field cname="distance_from_sync" access="public" writeable="true" readable="true" name="DistanceFromSync" type="gint"/>
      <field cname="input_buffer" access="public" writeable="true" readable="true" name="InputBuffer" type="GstBuffer*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="output_buffer" access="public" writeable="true" readable="true" name="OutputBuffer" type="GstBuffer*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="deadline" access="public" writeable="true" readable="true" name="Deadline" type="guint64"/>
      <field cname="events" access="private" writeable="false" readable="false" name="Events" type="GList*" element_type="gpointer"/>
      <field cname="user_data" access="private" writeable="false" readable="false" name="UserData" type="gpointer"/>
      <field cname="user_data_destroy_notify" access="private" writeable="false" readable="false" name="UserDataDestroyNotify" type="GDestroyNotify"/>
      <union name="abidata" cname="abidata">
        <struct name="ABI" cname="ABI" opaque="false" hidden="false">
          <field cname="ts" access="public" writeable="true" readable="true" name="Ts" type="guint64"/>
          <field cname="ts2" access="public" writeable="true" readable="true" name="Ts2" type="guint64"/>
        </struct>
        <field cname="padding" access="public" writeable="true" readable="true" name="Padding" type="void" array="true" array_len="20"/>
      </union>
      <method name="GetUserData" cname="gst_video_codec_frame_get_user_data">
        <return-type type="gpointer"/>
        <parameters/>
      </method>
      <method name="Ref" cname="gst_video_codec_frame_ref">
        <return-type type="GstVideoCodecFrame*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="SetUserData" cname="gst_video_codec_frame_set_user_data">
        <return-type type="void"/>
        <parameters>
          <parameter name="user_data" type="gpointer"/>
          <parameter closure="0" scope="async" name="notify" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="Unref" cname="gst_video_codec_frame_unref">
        <return-type type="void"/>
        <parameters/>
      </method>
    </boxed>
    <boxed name="VideoCodecState" cname="GstVideoCodecState" opaque="false" hidden="false">
      <method name="GetType" cname="gst_video_codec_state_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <field cname="ref_count" access="private" writeable="false" readable="false" name="RefCount" type="gint"/>
      <field cname="info" access="public" writeable="true" readable="true" name="Info" type="GstVideoInfo">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="caps" access="public" writeable="true" readable="true" name="Caps" type="GstCaps*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="codec_data" access="public" writeable="true" readable="true" name="CodecData" type="GstBuffer*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="padding" access="private" writeable="false" readable="false" name="Padding" type="void" array="true" array_len="20"/>
      <method name="Ref" cname="gst_video_codec_state_ref">
        <return-type type="GstVideoCodecState*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="Unref" cname="gst_video_codec_state_unref">
        <return-type type="void"/>
        <parameters/>
      </method>
    </boxed>
    <struct name="VideoColorimetry" cname="GstVideoColorimetry" opaque="false" hidden="false">
      <field cname="range" access="public" writeable="true" readable="true" name="Range" type="GstVideoColorRange"/>
      <field cname="matrix" access="public" writeable="true" readable="true" name="Matrix" type="GstVideoColorMatrix"/>
      <field cname="transfer" access="public" writeable="true" readable="true" name="Transfer" type="GstVideoTransferFunction"/>
      <field cname="primaries" access="public" writeable="true" readable="true" name="Primaries" type="GstVideoColorPrimaries"/>
      <method name="FromString" cname="gst_video_colorimetry_from_string">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="color" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="Matches" cname="gst_video_colorimetry_matches">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="color" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="ToString" cname="gst_video_colorimetry_to_string">
        <return-type type="gchar*" owned="true"/>
        <parameters/>
      </method>
    </struct>
    <struct name="VideoCropMeta" cname="GstVideoCropMeta" opaque="false" hidden="false">
      <field cname="meta" access="public" writeable="true" readable="true" name="Meta" type="GstMeta">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="x" access="public" writeable="true" readable="true" name="X" type="guint"/>
      <field cname="y" access="public" writeable="true" readable="true" name="Y" type="guint"/>
      <field cname="width" access="public" writeable="true" readable="true" name="Width" type="guint"/>
      <field cname="height" access="public" writeable="true" readable="true" name="Height" type="guint"/>
      <method name="GetInfo" cname="gst_video_crop_meta_get_info" shared="true">
        <return-type type="GstMetaInfo*">
          <warning>missing glib:type-name</warning>
        </return-type>
      </method>
    </struct>
    <struct name="VideoDecoderPrivate" cname="GstVideoDecoderPrivate" opaque="true" hidden="true"/>
    <struct name="VideoEncoderPrivate" cname="GstVideoEncoderPrivate" opaque="true" hidden="true"/>
    <struct name="VideoFormatInfo" cname="GstVideoFormatInfo" opaque="false" hidden="false">
      <field cname="format" access="public" writeable="true" readable="true" name="Format" type="GstVideoFormat"/>
      <field cname="name" access="public" writeable="true" readable="true" name="Name" type="gchar*"/>
      <field cname="description" access="public" writeable="true" readable="true" name="Description" type="gchar*"/>
      <field cname="flags" access="public" writeable="true" readable="true" name="Flags" type="GstVideoFormatFlags"/>
      <field cname="bits" access="public" writeable="true" readable="true" name="Bits" type="guint"/>
      <field cname="n_components" access="public" writeable="true" readable="true" name="NComponents" type="guint"/>
      <field cname="shift" access="public" writeable="true" readable="true" name="Shift" type="guint" array="true" array_len="4"/>
      <field cname="depth" access="public" writeable="true" readable="true" name="Depth" type="guint" array="true" array_len="4"/>
      <field cname="pixel_stride" access="public" writeable="true" readable="true" name="PixelStride" type="gint" array="true" array_len="4"/>
      <field cname="n_planes" access="public" writeable="true" readable="true" name="NPlanes" type="guint"/>
      <field cname="plane" access="public" writeable="true" readable="true" name="Plane" type="guint" array="true" array_len="4"/>
      <field cname="poffset" access="public" writeable="true" readable="true" name="Poffset" type="guint" array="true" array_len="4"/>
      <field cname="w_sub" access="public" writeable="true" readable="true" name="WSub" type="guint" array="true" array_len="4"/>
      <field cname="h_sub" access="public" writeable="true" readable="true" name="HSub" type="guint" array="true" array_len="4"/>
      <field cname="unpack_format" access="public" writeable="true" readable="true" name="UnpackFormat" type="GstVideoFormat"/>
      <field cname="unpack_func" access="public" writeable="true" readable="true" name="UnpackFunc" type="GstVideoFormatUnpack"/>
      <field cname="pack_lines" access="public" writeable="true" readable="true" name="PackLines" type="gint"/>
      <field cname="pack_func" access="public" writeable="true" readable="true" name="PackFunc" type="GstVideoFormatPack"/>
      <field cname="_gst_reserved" access="public" writeable="true" readable="true" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
    </struct>
    <struct name="VideoFrame" cname="GstVideoFrame" opaque="false" hidden="false">
      <field cname="info" access="public" writeable="true" readable="true" name="Info" type="GstVideoInfo">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="flags" access="public" writeable="true" readable="true" name="Flags" type="GstVideoFrameFlags"/>
      <field cname="buffer" access="public" writeable="true" readable="true" name="Buffer" type="GstBuffer*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="meta" access="public" writeable="true" readable="true" name="Meta" type="gpointer"/>
      <field cname="id" access="public" writeable="true" readable="true" name="Id" type="gint"/>
      <field cname="data" access="public" writeable="true" readable="true" name="Data" type="gpointer" array="true" array_len="4"/>
      <field cname="map" access="public" writeable="true" readable="true" name="MapField" type="GstMapInfo" array="true" array_len="4"/>
      <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
      <method name="Copy" cname="gst_video_frame_copy">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="src" type="GstVideoFrame*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="CopyPlane" cname="gst_video_frame_copy_plane">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="src" type="GstVideoFrame*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="plane" type="guint"/>
        </parameters>
      </method>
      <method name="Map" cname="gst_video_frame_map">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="info" type="GstVideoInfo*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="buffer" type="GstBuffer*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="flags" type="GstMapFlags"/>
        </parameters>
      </method>
      <method name="MapId" cname="gst_video_frame_map_id">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="info" type="GstVideoInfo*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="buffer" type="GstBuffer*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="id" type="gint"/>
          <parameter name="flags" type="GstMapFlags"/>
        </parameters>
      </method>
      <method name="Unmap" cname="gst_video_frame_unmap">
        <return-type type="void"/>
        <parameters/>
      </method>
    </struct>
    <struct name="VideoInfo" cname="GstVideoInfo" opaque="false" hidden="false">
      <field cname="finfo" access="public" writeable="true" readable="true" name="Finfo" type="GstVideoFormatInfo*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="interlace_mode" access="public" writeable="true" readable="true" name="InterlaceMode" type="GstVideoInterlaceMode"/>
      <field cname="flags" access="public" writeable="true" readable="true" name="Flags" type="GstVideoFlags"/>
      <field cname="width" access="public" writeable="true" readable="true" name="Width" type="gint"/>
      <field cname="height" access="public" writeable="true" readable="true" name="Height" type="gint"/>
      <field cname="size" access="public" writeable="true" readable="true" name="Size" type="gsize"/>
      <field cname="views" access="public" writeable="true" readable="true" name="Views" type="gint"/>
      <field cname="chroma_site" access="public" writeable="true" readable="true" name="ChromaSite" type="GstVideoChromaSite"/>
      <field cname="colorimetry" access="public" writeable="true" readable="true" name="Colorimetry" type="GstVideoColorimetry">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="par_n" access="public" writeable="true" readable="true" name="ParN" type="gint"/>
      <field cname="par_d" access="public" writeable="true" readable="true" name="ParD" type="gint"/>
      <field cname="fps_n" access="public" writeable="true" readable="true" name="FpsN" type="gint"/>
      <field cname="fps_d" access="public" writeable="true" readable="true" name="FpsD" type="gint"/>
      <field cname="offset" access="public" writeable="true" readable="true" name="Offset" type="gsize" array="true" array_len="4"/>
      <field cname="stride" access="public" writeable="true" readable="true" name="Stride" type="gint" array="true" array_len="4"/>
      <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
      <method name="Align" cname="gst_video_info_align">
        <return-type type="void"/>
        <parameters>
          <parameter name="align" type="GstVideoAlignment*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Convert" cname="gst_video_info_convert">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="src_format" type="GstFormat"/>
          <parameter name="src_value" type="gint64"/>
          <parameter name="dest_format" type="GstFormat"/>
          <parameter name="dest_value" type="gint64"/>
        </parameters>
      </method>
      <method name="FromCaps" cname="gst_video_info_from_caps">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="caps" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Init" cname="gst_video_info_init">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="IsEqual" cname="gst_video_info_is_equal">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="other" type="GstVideoInfo*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetFormat" cname="gst_video_info_set_format">
        <return-type type="void"/>
        <parameters>
          <parameter name="format" type="GstVideoFormat"/>
          <parameter name="width" type="guint"/>
          <parameter name="height" type="guint"/>
        </parameters>
      </method>
      <method name="ToCaps" cname="gst_video_info_to_caps">
        <return-type type="GstCaps*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
    </struct>
    <struct name="VideoMeta" cname="GstVideoMeta" opaque="false" hidden="false">
      <field cname="meta" access="public" writeable="true" readable="true" name="Meta" type="GstMeta">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="buffer" access="public" writeable="true" readable="true" name="Buffer" type="GstBuffer*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="flags" access="public" writeable="true" readable="true" name="Flags" type="GstVideoFrameFlags"/>
      <field cname="format" access="public" writeable="true" readable="true" name="Format" type="GstVideoFormat"/>
      <field cname="id" access="public" writeable="true" readable="true" name="Id" type="gint"/>
      <field cname="width" access="public" writeable="true" readable="true" name="Width" type="guint"/>
      <field cname="height" access="public" writeable="true" readable="true" name="Height" type="guint"/>
      <field cname="n_planes" access="public" writeable="true" readable="true" name="NPlanes" type="guint"/>
      <field cname="offset" access="public" writeable="true" readable="true" name="Offset" type="gsize" array="true" array_len="4"/>
      <field cname="stride" access="public" writeable="true" readable="true" name="Stride" type="gint" array="true" array_len="4"/>
      <method name="Map" cname="gst_video_meta_map">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="plane" type="guint"/>
          <parameter name="info" type="GstMapInfo*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="data" type="gpointer"/>
          <parameter name="stride" type="gint"/>
          <parameter name="flags" type="GstMapFlags"/>
        </parameters>
      </method>
      <method name="Unmap" cname="gst_video_meta_unmap">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="plane" type="guint"/>
          <parameter name="info" type="GstMapInfo*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetInfo" cname="gst_video_meta_get_info" shared="true">
        <return-type type="GstMetaInfo*">
          <warning>missing glib:type-name</warning>
        </return-type>
      </method>
    </struct>
    <struct name="VideoMetaTransform" cname="GstVideoMetaTransform" opaque="false" hidden="false">
      <field cname="in_info" access="public" writeable="true" readable="true" name="InInfo" type="GstVideoInfo*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="out_info" access="public" writeable="true" readable="true" name="OutInfo" type="GstVideoInfo*">
        <warning>missing glib:type-name</warning>
      </field>
      <method name="ScaleGetQuark" cname="gst_video_meta_transform_scale_get_quark" shared="true">
        <return-type type="guint32"/>
      </method>
    </struct>
    <boxed name="VideoOverlayComposition" cname="GstVideoOverlayComposition" opaque="false" hidden="false">
      <method name="GetType" cname="gst_video_overlay_composition_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gst_video_overlay_composition_new">
        <parameters>
          <parameter name="rectangle" type="GstVideoOverlayRectangle*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </constructor>
      <method name="AddRectangle" cname="gst_video_overlay_composition_add_rectangle">
        <return-type type="void"/>
        <parameters>
          <parameter name="rectangle" type="GstVideoOverlayRectangle*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Blend" cname="gst_video_overlay_composition_blend">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="video_buf" type="GstVideoFrame*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Copy" cname="gst_video_overlay_composition_copy">
        <return-type type="GstVideoOverlayComposition*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetRectangle" cname="gst_video_overlay_composition_get_rectangle">
        <return-type type="GstVideoOverlayRectangle*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="n" type="guint"/>
        </parameters>
      </method>
      <method name="GetSeqnum" cname="gst_video_overlay_composition_get_seqnum">
        <return-type type="guint"/>
        <parameters/>
      </method>
      <method name="MakeWritable" cname="gst_video_overlay_composition_make_writable">
        <return-type type="GstVideoOverlayComposition*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="NRectangles" cname="gst_video_overlay_composition_n_rectangles">
        <return-type type="guint"/>
        <parameters/>
      </method>
    </boxed>
    <struct name="VideoOverlayCompositionMeta" cname="GstVideoOverlayCompositionMeta" opaque="false" hidden="false">
      <field cname="meta" access="public" writeable="true" readable="true" name="Meta" type="GstMeta">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="overlay" access="public" writeable="true" readable="true" name="Overlay" type="GstVideoOverlayComposition*">
        <warning>missing glib:type-name</warning>
      </field>
      <method name="GetInfo" cname="gst_video_overlay_composition_meta_get_info" shared="true">
        <return-type type="GstMetaInfo*">
          <warning>missing glib:type-name</warning>
        </return-type>
      </method>
    </struct>
    <boxed name="VideoOverlayRectangle" cname="GstVideoOverlayRectangle" opaque="true" hidden="false">
      <method name="GetType" cname="gst_video_overlay_rectangle_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gst_video_overlay_rectangle_new_raw">
        <parameters>
          <parameter name="pixels" type="GstBuffer*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="render_x" type="gint"/>
          <parameter name="render_y" type="gint"/>
          <parameter name="render_width" type="guint"/>
          <parameter name="render_height" type="guint"/>
          <parameter name="flags" type="GstVideoOverlayFormatFlags"/>
        </parameters>
      </constructor>
      <method name="Copy" cname="gst_video_overlay_rectangle_copy">
        <return-type type="GstVideoOverlayRectangle*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetFlags" cname="gst_video_overlay_rectangle_get_flags">
        <return-type type="GstVideoOverlayFormatFlags"/>
        <parameters/>
      </method>
      <method name="GetGlobalAlpha" cname="gst_video_overlay_rectangle_get_global_alpha">
        <return-type type="gfloat"/>
        <parameters/>
      </method>
      <method name="GetPixelsArgb" cname="gst_video_overlay_rectangle_get_pixels_argb">
        <return-type type="GstBuffer*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="flags" type="GstVideoOverlayFormatFlags"/>
        </parameters>
      </method>
      <method name="GetPixelsAyuv" cname="gst_video_overlay_rectangle_get_pixels_ayuv">
        <return-type type="GstBuffer*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="flags" type="GstVideoOverlayFormatFlags"/>
        </parameters>
      </method>
      <method name="GetPixelsRaw" cname="gst_video_overlay_rectangle_get_pixels_raw">
        <return-type type="GstBuffer*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="flags" type="GstVideoOverlayFormatFlags"/>
        </parameters>
      </method>
      <method name="GetPixelsUnscaledArgb" cname="gst_video_overlay_rectangle_get_pixels_unscaled_argb">
        <return-type type="GstBuffer*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="flags" type="GstVideoOverlayFormatFlags"/>
        </parameters>
      </method>
      <method name="GetPixelsUnscaledAyuv" cname="gst_video_overlay_rectangle_get_pixels_unscaled_ayuv">
        <return-type type="GstBuffer*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="flags" type="GstVideoOverlayFormatFlags"/>
        </parameters>
      </method>
      <method name="GetPixelsUnscaledRaw" cname="gst_video_overlay_rectangle_get_pixels_unscaled_raw">
        <return-type type="GstBuffer*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="flags" type="GstVideoOverlayFormatFlags"/>
        </parameters>
      </method>
      <method name="GetRenderRectangle" cname="gst_video_overlay_rectangle_get_render_rectangle">
        <return-type type="gboolean"/>
        <parameters>
          <parameter allow-none="1" name="render_x" type="gint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="render_y" type="gint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="render_width" type="guint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="render_height" type="guint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetSeqnum" cname="gst_video_overlay_rectangle_get_seqnum">
        <return-type type="guint"/>
        <parameters/>
      </method>
      <method name="SetGlobalAlpha" cname="gst_video_overlay_rectangle_set_global_alpha">
        <return-type type="void"/>
        <parameters>
          <parameter name="global_alpha" type="gfloat"/>
        </parameters>
      </method>
      <method name="SetRenderRectangle" cname="gst_video_overlay_rectangle_set_render_rectangle">
        <return-type type="void"/>
        <parameters>
          <parameter name="render_x" type="gint"/>
          <parameter name="render_y" type="gint"/>
          <parameter name="render_width" type="guint"/>
          <parameter name="render_height" type="guint"/>
        </parameters>
      </method>
    </boxed>
    <struct name="VideoRectangle" cname="GstVideoRectangle" opaque="false" hidden="false">
      <field cname="x" access="public" writeable="true" readable="true" name="X" type="gint"/>
      <field cname="y" access="public" writeable="true" readable="true" name="Y" type="gint"/>
      <field cname="w" access="public" writeable="true" readable="true" name="W" type="gint"/>
      <field cname="h" access="public" writeable="true" readable="true" name="H" type="gint"/>
    </struct>
    <struct name="VideoSinkPrivate" cname="GstVideoSinkPrivate" opaque="true" hidden="true"/>
    <object name="Global" cname="GstVideoGlobal" opaque="true">
      <method name="BufferAddVideoMeta" cname="gst_buffer_add_video_meta" shared="true">
        <return-type type="GstVideoMeta*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="buffer" type="GstBuffer*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="flags" type="GstVideoFrameFlags"/>
          <parameter name="format" type="GstVideoFormat"/>
          <parameter name="width" type="guint"/>
          <parameter name="height" type="guint"/>
        </parameters>
      </method>
      <method name="BufferAddVideoMetaFull" cname="gst_buffer_add_video_meta_full" shared="true">
        <return-type type="GstVideoMeta*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="buffer" type="GstBuffer*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="flags" type="GstVideoFrameFlags"/>
          <parameter name="format" type="GstVideoFormat"/>
          <parameter name="width" type="guint"/>
          <parameter name="height" type="guint"/>
          <parameter name="n_planes" type="guint"/>
          <parameter name="offset" type="gsize"/>
          <parameter name="stride" type="gint"/>
        </parameters>
      </method>
      <method name="BufferAddVideoOverlayCompositionMeta" cname="gst_buffer_add_video_overlay_composition_meta" shared="true">
        <return-type type="GstVideoOverlayCompositionMeta*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="buf" type="GstBuffer*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter allow-none="1" name="comp" type="GstVideoOverlayComposition*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="BufferGetVideoMetaId" cname="gst_buffer_get_video_meta_id" shared="true">
        <return-type type="GstVideoMeta*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="buffer" type="GstBuffer*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="id" type="gint"/>
        </parameters>
      </method>
      <method name="BufferPoolConfigGetVideoAlignment" cname="gst_buffer_pool_config_get_video_alignment" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="config" type="GstStructure*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="align" type="GstVideoAlignment*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="BufferPoolConfigSetVideoAlignment" cname="gst_buffer_pool_config_set_video_alignment" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="config" type="GstStructure*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="align" type="GstVideoAlignment*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="IsVideoOverlayPrepareWindowHandleMessage" cname="gst_is_video_overlay_prepare_window_handle_message" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="msg" type="GstMessage*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="NavigationEventGetType" cname="gst_navigation_event_get_type" shared="true">
        <return-type type="GstNavigationEventType"/>
        <parameters>
          <parameter name="event" type="GstEvent*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="NavigationEventParseCommand" cname="gst_navigation_event_parse_command" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="event" type="GstEvent*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="command" type="GstNavigationCommand"/>
        </parameters>
      </method>
      <method name="NavigationEventParseKeyEvent" cname="gst_navigation_event_parse_key_event" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="event" type="GstEvent*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="key" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="NavigationEventParseMouseButtonEvent" cname="gst_navigation_event_parse_mouse_button_event" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="event" type="GstEvent*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="button" type="gint"/>
          <parameter name="x" type="gdouble"/>
          <parameter name="y" type="gdouble"/>
        </parameters>
      </method>
      <method name="NavigationEventParseMouseMoveEvent" cname="gst_navigation_event_parse_mouse_move_event" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="event" type="GstEvent*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="x" type="gdouble"/>
          <parameter name="y" type="gdouble"/>
        </parameters>
      </method>
      <method name="NavigationMessageGetType" cname="gst_navigation_message_get_type" shared="true">
        <return-type type="GstNavigationMessageType"/>
        <parameters>
          <parameter name="message" type="GstMessage*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="NavigationMessageNewAnglesChanged" cname="gst_navigation_message_new_angles_changed" shared="true">
        <return-type type="GstMessage*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="src" type="GstObject*"/>
          <parameter name="cur_angle" type="guint"/>
          <parameter name="n_angles" type="guint"/>
        </parameters>
      </method>
      <method name="NavigationMessageNewCommandsChanged" cname="gst_navigation_message_new_commands_changed" shared="true">
        <return-type type="GstMessage*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="src" type="GstObject*"/>
        </parameters>
      </method>
      <method name="NavigationMessageNewMouseOver" cname="gst_navigation_message_new_mouse_over" shared="true">
        <return-type type="GstMessage*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="src" type="GstObject*"/>
          <parameter name="active" type="gboolean"/>
        </parameters>
      </method>
      <method name="NavigationMessageParseAnglesChanged" cname="gst_navigation_message_parse_angles_changed" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="message" type="GstMessage*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="cur_angle" type="guint"/>
          <parameter name="n_angles" type="guint"/>
        </parameters>
      </method>
      <method name="NavigationMessageParseMouseOver" cname="gst_navigation_message_parse_mouse_over" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="message" type="GstMessage*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="active" type="gboolean"/>
        </parameters>
      </method>
      <method name="NavigationQueryGetType" cname="gst_navigation_query_get_type" shared="true">
        <return-type type="GstNavigationQueryType"/>
        <parameters>
          <parameter name="query" type="GstQuery*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="NavigationQueryNewAngles" cname="gst_navigation_query_new_angles" shared="true">
        <return-type type="GstQuery*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
      </method>
      <method name="NavigationQueryNewCommands" cname="gst_navigation_query_new_commands" shared="true">
        <return-type type="GstQuery*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
      </method>
      <method name="NavigationQueryParseAngles" cname="gst_navigation_query_parse_angles" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="query" type="GstQuery*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="cur_angle" type="guint"/>
          <parameter name="n_angles" type="guint"/>
        </parameters>
      </method>
      <method name="NavigationQueryParseCommandsLength" cname="gst_navigation_query_parse_commands_length" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="query" type="GstQuery*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="n_cmds" type="guint"/>
        </parameters>
      </method>
      <method name="NavigationQueryParseCommandsNth" cname="gst_navigation_query_parse_commands_nth" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="query" type="GstQuery*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="nth" type="guint"/>
          <parameter name="cmd" type="GstNavigationCommand"/>
        </parameters>
      </method>
      <method name="NavigationQuerySetAngles" cname="gst_navigation_query_set_angles" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="query" type="GstQuery*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="cur_angle" type="guint"/>
          <parameter name="n_angles" type="guint"/>
        </parameters>
      </method>
      <method name="NavigationQuerySetCommandsv" cname="gst_navigation_query_set_commandsv" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="query" type="GstQuery*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="n_cmds" type="gint"/>
          <parameter name="cmds" type="GstNavigationCommand"/>
        </parameters>
      </method>
      <method name="VideoBlend" cname="gst_video_blend" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="dest" type="GstVideoFrame*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="src" type="GstVideoFrame*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
          <parameter name="global_alpha" type="gfloat"/>
        </parameters>
      </method>
      <method name="VideoBlendScaleLinearRGBA" cname="gst_video_blend_scale_linear_RGBA" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="src" type="GstVideoInfo*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="src_buffer" type="GstBuffer*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="dest_height" type="gint"/>
          <parameter name="dest_width" type="gint"/>
          <parameter name="dest" type="GstVideoInfo*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="dest_buffer" type="GstBuffer**">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="VideoCalculateDisplayRatio" cname="gst_video_calculate_display_ratio" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="dar_n" type="guint"/>
          <parameter name="dar_d" type="guint"/>
          <parameter name="video_width" type="guint"/>
          <parameter name="video_height" type="guint"/>
          <parameter name="video_par_n" type="guint"/>
          <parameter name="video_par_d" type="guint"/>
          <parameter name="display_par_n" type="guint"/>
          <parameter name="display_par_d" type="guint"/>
        </parameters>
      </method>
      <method name="VideoChromaFromString" cname="gst_video_chroma_from_string" shared="true">
        <return-type type="GstVideoChromaSite"/>
        <parameters>
          <parameter name="s" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="VideoChromaToString" cname="gst_video_chroma_to_string" shared="true">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="site" type="GstVideoChromaSite"/>
        </parameters>
      </method>
      <method name="VideoColorRangeOffsets" cname="gst_video_color_range_offsets" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="range" type="GstVideoColorRange"/>
          <parameter name="info" type="GstVideoFormatInfo*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="offset" type="gint"/>
          <parameter name="scale" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="VideoConvertSample" cname="gst_video_convert_sample" shared="true">
        <return-type type="GstSample*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters throws="1">
          <parameter name="sample" type="GstSample*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="to_caps" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="timeout" type="guint64"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="VideoConvertSampleAsync" cname="gst_video_convert_sample_async" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="sample" type="GstSample*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="to_caps" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="timeout" type="guint64"/>
          <parameter closure="4" destroy="5" scope="notified" name="callback" type="GstVideoConvertSampleCallback"/>
          <parameter name="user_data" type="gpointer"/>
          <parameter scope="async" name="destroy_notify" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="VideoCropMetaApiGetType" cname="gst_video_crop_meta_api_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="VideoCropMetaGetInfo" cname="gst_video_crop_meta_get_info" shared="true">
        <return-type type="GstMetaInfo*">
          <warning>missing glib:type-name</warning>
        </return-type>
      </method>
      <method name="VideoEventIsForceKeyUnit" cname="gst_video_event_is_force_key_unit" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="event" type="GstEvent*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="VideoEventNewDownstreamForceKeyUnit" cname="gst_video_event_new_downstream_force_key_unit" shared="true">
        <return-type type="GstEvent*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="timestamp" type="guint64"/>
          <parameter name="stream_time" type="guint64"/>
          <parameter name="running_time" type="guint64"/>
          <parameter name="all_headers" type="gboolean"/>
          <parameter name="count" type="guint"/>
        </parameters>
      </method>
      <method name="VideoEventNewStillFrame" cname="gst_video_event_new_still_frame" shared="true">
        <return-type type="GstEvent*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="in_still" type="gboolean"/>
        </parameters>
      </method>
      <method name="VideoEventNewUpstreamForceKeyUnit" cname="gst_video_event_new_upstream_force_key_unit" shared="true">
        <return-type type="GstEvent*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="running_time" type="guint64"/>
          <parameter name="all_headers" type="gboolean"/>
          <parameter name="count" type="guint"/>
        </parameters>
      </method>
      <method name="VideoEventParseDownstreamForceKeyUnit" cname="gst_video_event_parse_downstream_force_key_unit" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="event" type="GstEvent*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="timestamp" type="guint64" owned="true" pass_as="out"/>
          <parameter name="stream_time" type="guint64" owned="true" pass_as="out"/>
          <parameter name="running_time" type="guint64" owned="true" pass_as="out"/>
          <parameter name="all_headers" type="gboolean*" owned="true" pass_as="out"/>
          <parameter name="count" type="guint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="VideoEventParseStillFrame" cname="gst_video_event_parse_still_frame" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="event" type="GstEvent*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="in_still" type="gboolean"/>
        </parameters>
      </method>
      <method name="VideoEventParseUpstreamForceKeyUnit" cname="gst_video_event_parse_upstream_force_key_unit" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="event" type="GstEvent*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="running_time" type="guint64" owned="true" pass_as="out"/>
          <parameter name="all_headers" type="gboolean*" owned="true" pass_as="out"/>
          <parameter name="count" type="guint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="VideoFormatFromFourcc" cname="gst_video_format_from_fourcc" shared="true">
        <return-type type="GstVideoFormat"/>
        <parameters>
          <parameter name="fourcc" type="guint32"/>
        </parameters>
      </method>
      <method name="VideoFormatFromMasks" cname="gst_video_format_from_masks" shared="true">
        <return-type type="GstVideoFormat"/>
        <parameters>
          <parameter name="depth" type="gint"/>
          <parameter name="bpp" type="gint"/>
          <parameter name="endianness" type="gint"/>
          <parameter name="red_mask" type="gint"/>
          <parameter name="green_mask" type="gint"/>
          <parameter name="blue_mask" type="gint"/>
          <parameter name="alpha_mask" type="gint"/>
        </parameters>
      </method>
      <method name="VideoFormatFromString" cname="gst_video_format_from_string" shared="true">
        <return-type type="GstVideoFormat"/>
        <parameters>
          <parameter name="format" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="VideoFormatGetInfo" cname="gst_video_format_get_info" shared="true">
        <return-type type="GstVideoFormatInfo*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="format" type="GstVideoFormat"/>
        </parameters>
      </method>
      <method name="VideoFormatToFourcc" cname="gst_video_format_to_fourcc" shared="true">
        <return-type type="guint32"/>
        <parameters>
          <parameter name="format" type="GstVideoFormat"/>
        </parameters>
      </method>
      <method name="VideoFormatToString" cname="gst_video_format_to_string" shared="true">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="format" type="GstVideoFormat"/>
        </parameters>
      </method>
      <method name="VideoMetaApiGetType" cname="gst_video_meta_api_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="VideoMetaGetInfo" cname="gst_video_meta_get_info" shared="true">
        <return-type type="GstMetaInfo*">
          <warning>missing glib:type-name</warning>
        </return-type>
      </method>
      <method name="VideoMetaTransformScaleGetQuark" cname="gst_video_meta_transform_scale_get_quark" shared="true">
        <return-type type="guint32"/>
      </method>
      <method name="VideoOverlayCompositionMetaApiGetType" cname="gst_video_overlay_composition_meta_api_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="VideoOverlayCompositionMetaGetInfo" cname="gst_video_overlay_composition_meta_get_info" shared="true">
        <return-type type="GstMetaInfo*">
          <warning>missing glib:type-name</warning>
        </return-type>
      </method>
    </object>
    <object name="Constants" cname="GstVideoConstants" opaque="true">
      <constant value="GstBufferPoolOptionVideoAlignment" ctype="gchar*" gtype="gchar*" name="BUFFER_POOL_OPTION_VIDEO_ALIGNMENT"/>
      <constant value="GstBufferPoolOptionVideoMeta" ctype="gchar*" gtype="gchar*" name="BUFFER_POOL_OPTION_VIDEO_META"/>
      <constant value="bt601" ctype="gchar*" gtype="gchar*" name="VIDEO_COLORIMETRY_BT601"/>
      <constant value="bt709" ctype="gchar*" gtype="gchar*" name="VIDEO_COLORIMETRY_BT709"/>
      <constant value="smpte240m" ctype="gchar*" gtype="gchar*" name="VIDEO_COLORIMETRY_SMPTE240M"/>
      <constant value="3" ctype="gint" gtype="gint" name="VIDEO_COMP_A"/>
      <constant value="2" ctype="gint" gtype="gint" name="VIDEO_COMP_B"/>
      <constant value="1" ctype="gint" gtype="gint" name="VIDEO_COMP_G"/>
      <constant value="0" ctype="gint" gtype="gint" name="VIDEO_COMP_INDEX"/>
      <constant value="1" ctype="gint" gtype="gint" name="VIDEO_COMP_PALETTE"/>
      <constant value="0" ctype="gint" gtype="gint" name="VIDEO_COMP_R"/>
      <constant value="1" ctype="gint" gtype="gint" name="VIDEO_COMP_U"/>
      <constant value="2" ctype="gint" gtype="gint" name="VIDEO_COMP_V"/>
      <constant value="0" ctype="gint" gtype="gint" name="VIDEO_COMP_Y"/>
      <constant value="10" ctype="gint" gtype="gint" name="VIDEO_DECODER_MAX_ERRORS"/>
      <constant value="sink" ctype="gchar*" gtype="gchar*" name="VIDEO_DECODER_SINK_NAME"/>
      <constant value="src" ctype="gchar*" gtype="gchar*" name="VIDEO_DECODER_SRC_NAME"/>
      <constant value="sink" ctype="gchar*" gtype="gchar*" name="VIDEO_ENCODER_SINK_NAME"/>
      <constant value="src" ctype="gchar*" gtype="gchar*" name="VIDEO_ENCODER_SRC_NAME"/>
      <constant value="{ I420, YV12, YUY2, UYVY, AYUV, RGBx, BGRx, xRGB, xBGR, RGBA, BGRA, ARGB, ABGR, RGB, BGR, Y41B, Y42B, YVYU, Y444, v210, v216, NV12, NV21, GRAY8, GRAY16_BE, GRAY16_LE, v308, RGB16, BGR16, RGB15, BGR15, UYVP, A420, RGB8P, YUV9, YVU9, IYU1, ARGB64, AYUV64, r210, I420_10LE, I420_10BE, I422_10LE, I422_10BE }" ctype="gchar*" gtype="gchar*" name="VIDEO_FORMATS_ALL"/>
      <constant value="(fraction) [ 0, max ]" ctype="gchar*" gtype="gchar*" name="VIDEO_FPS_RANGE"/>
      <constant value="4" ctype="gint" gtype="gint" name="VIDEO_MAX_COMPONENTS"/>
      <constant value="4" ctype="gint" gtype="gint" name="VIDEO_MAX_PLANES"/>
      <constant value="(int) [ 1, max ]" ctype="gchar*" gtype="gchar*" name="VIDEO_SIZE_RANGE"/>
    </object>
  </namespace>
  <namespace name="GstAudio" library="gsttag-1.0">
    <enum name="AudioBaseSinkSlaveMethod" cname="GstAudioBaseSinkSlaveMethod" type="enum" gtype="gst_audio_base_sink_slave_method_get_type">
      <member cname="GST_AUDIO_BASE_SINK_SLAVE_RESAMPLE" name="Resample" value="0"/>
      <member cname="GST_AUDIO_BASE_SINK_SLAVE_SKEW" name="Skew" value="1"/>
      <member cname="GST_AUDIO_BASE_SINK_SLAVE_NONE" name="None" value="2"/>
    </enum>
    <enum name="AudioBaseSrcSlaveMethod" cname="GstAudioBaseSrcSlaveMethod" type="enum" gtype="gst_audio_base_src_slave_method_get_type">
      <member cname="GST_AUDIO_BASE_SRC_SLAVE_RESAMPLE" name="Resample" value="0"/>
      <member cname="GST_AUDIO_BASE_SRC_SLAVE_RETIMESTAMP" name="ReTimestamp" value="1"/>
      <member cname="GST_AUDIO_BASE_SRC_SLAVE_SKEW" name="Skew" value="2"/>
      <member cname="GST_AUDIO_BASE_SRC_SLAVE_NONE" name="None" value="3"/>
    </enum>
    <enum name="AudioCdSrcMode" cname="GstAudioCdSrcMode" type="enum" gtype="gst_audio_cd_src_mode_get_type">
      <member cname="Stream consists of a single track" name="Normal" value="0"/>
      <member cname="Stream consists of the whole disc" name="Continuous" value="1"/>
    </enum>
    <enum name="AudioChannelPosition" cname="GstAudioChannelPosition" type="enum" gtype="gst_audio_channel_position_get_type">
      <member cname="GST_AUDIO_CHANNEL_POSITION_NONE" name="None" value="-3"/>
      <member cname="GST_AUDIO_CHANNEL_POSITION_MONO" name="Mono" value="-2"/>
      <member cname="GST_AUDIO_CHANNEL_POSITION_INVALID" name="Invalid" value="-1"/>
      <member cname="GST_AUDIO_CHANNEL_POSITION_FRONT_LEFT" name="FrontLeft" value="0"/>
      <member cname="GST_AUDIO_CHANNEL_POSITION_FRONT_RIGHT" name="FrontRight" value="1"/>
      <member cname="GST_AUDIO_CHANNEL_POSITION_FRONT_CENTER" name="FrontCenter" value="2"/>
      <member cname="GST_AUDIO_CHANNEL_POSITION_LFE1" name="Lfe1" value="3"/>
      <member cname="GST_AUDIO_CHANNEL_POSITION_REAR_LEFT" name="RearLeft" value="4"/>
      <member cname="GST_AUDIO_CHANNEL_POSITION_REAR_RIGHT" name="RearRight" value="5"/>
      <member cname="GST_AUDIO_CHANNEL_POSITION_FRONT_LEFT_OF_CENTER" name="FrontLeftOfCenter" value="6"/>
      <member cname="GST_AUDIO_CHANNEL_POSITION_FRONT_RIGHT_OF_CENTER" name="FrontRightOfCenter" value="7"/>
      <member cname="GST_AUDIO_CHANNEL_POSITION_REAR_CENTER" name="RearCenter" value="8"/>
      <member cname="GST_AUDIO_CHANNEL_POSITION_LFE2" name="Lfe2" value="9"/>
      <member cname="GST_AUDIO_CHANNEL_POSITION_SIDE_LEFT" name="SideLeft" value="10"/>
      <member cname="GST_AUDIO_CHANNEL_POSITION_SIDE_RIGHT" name="SideRight" value="11"/>
      <member cname="GST_AUDIO_CHANNEL_POSITION_TOP_FRONT_LEFT" name="TopFrontLeft" value="12"/>
      <member cname="GST_AUDIO_CHANNEL_POSITION_TOP_FRONT_RIGHT" name="TopFrontRight" value="13"/>
      <member cname="GST_AUDIO_CHANNEL_POSITION_TOP_FRONT_CENTER" name="TopFrontCenter" value="14"/>
      <member cname="GST_AUDIO_CHANNEL_POSITION_TOP_CENTER" name="TopCenter" value="15"/>
      <member cname="GST_AUDIO_CHANNEL_POSITION_TOP_REAR_LEFT" name="TopRearLeft" value="16"/>
      <member cname="GST_AUDIO_CHANNEL_POSITION_TOP_REAR_RIGHT" name="TopRearRight" value="17"/>
      <member cname="GST_AUDIO_CHANNEL_POSITION_TOP_SIDE_LEFT" name="TopSideLeft" value="18"/>
      <member cname="GST_AUDIO_CHANNEL_POSITION_TOP_SIDE_RIGHT" name="TopSideRight" value="19"/>
      <member cname="GST_AUDIO_CHANNEL_POSITION_TOP_REAR_CENTER" name="TopRearCenter" value="20"/>
      <member cname="GST_AUDIO_CHANNEL_POSITION_BOTTOM_FRONT_CENTER" name="BottomFrontCenter" value="21"/>
      <member cname="GST_AUDIO_CHANNEL_POSITION_BOTTOM_FRONT_LEFT" name="BottomFrontLeft" value="22"/>
      <member cname="GST_AUDIO_CHANNEL_POSITION_BOTTOM_FRONT_RIGHT" name="BottomFrontRight" value="23"/>
      <member cname="GST_AUDIO_CHANNEL_POSITION_WIDE_LEFT" name="WideLeft" value="24"/>
      <member cname="GST_AUDIO_CHANNEL_POSITION_WIDE_RIGHT" name="WideRight" value="25"/>
      <member cname="GST_AUDIO_CHANNEL_POSITION_SURROUND_LEFT" name="SurroundLeft" value="26"/>
      <member cname="GST_AUDIO_CHANNEL_POSITION_SURROUND_RIGHT" name="SurroundRight" value="27"/>
    </enum>
    <enum name="AudioFormat" cname="GstAudioFormat" type="enum" gtype="gst_audio_format_get_type">
      <member cname="GST_AUDIO_FORMAT_UNKNOWN" name="Unknown" value="0"/>
      <member cname="GST_AUDIO_FORMAT_ENCODED" name="Encoded" value="1"/>
      <member cname="GST_AUDIO_FORMAT_S8" name="S8" value="2"/>
      <member cname="GST_AUDIO_FORMAT_U8" name="U8" value="3"/>
      <member cname="GST_AUDIO_FORMAT_S16LE" name="S16le" value="4"/>
      <member cname="GST_AUDIO_FORMAT_S16" name="S16" value="4"/>
      <member cname="GST_AUDIO_FORMAT_S16BE" name="S16be" value="5"/>
      <member cname="GST_AUDIO_FORMAT_U16LE" name="U16le" value="6"/>
      <member cname="GST_AUDIO_FORMAT_U16" name="U16" value="6"/>
      <member cname="GST_AUDIO_FORMAT_U16BE" name="U16be" value="7"/>
      <member cname="GST_AUDIO_FORMAT_S24_32LE" name="S2432le" value="8"/>
      <member cname="GST_AUDIO_FORMAT_S24_32" name="S2432" value="8"/>
      <member cname="GST_AUDIO_FORMAT_S24_32BE" name="S2432be" value="9"/>
      <member cname="GST_AUDIO_FORMAT_U24_32LE" name="U2432le" value="10"/>
      <member cname="GST_AUDIO_FORMAT_U24_32" name="U2432" value="10"/>
      <member cname="GST_AUDIO_FORMAT_U24_32BE" name="U2432be" value="11"/>
      <member cname="GST_AUDIO_FORMAT_S32LE" name="S32le" value="12"/>
      <member cname="GST_AUDIO_FORMAT_S32" name="S32" value="12"/>
      <member cname="GST_AUDIO_FORMAT_S32BE" name="S32be" value="13"/>
      <member cname="GST_AUDIO_FORMAT_U32LE" name="U32le" value="14"/>
      <member cname="GST_AUDIO_FORMAT_U32" name="U32" value="14"/>
      <member cname="GST_AUDIO_FORMAT_U32BE" name="U32be" value="15"/>
      <member cname="GST_AUDIO_FORMAT_S24LE" name="S24le" value="16"/>
      <member cname="GST_AUDIO_FORMAT_S24" name="S24" value="16"/>
      <member cname="GST_AUDIO_FORMAT_S24BE" name="S24be" value="17"/>
      <member cname="GST_AUDIO_FORMAT_U24LE" name="U24le" value="18"/>
      <member cname="GST_AUDIO_FORMAT_U24" name="U24" value="18"/>
      <member cname="GST_AUDIO_FORMAT_U24BE" name="U24be" value="19"/>
      <member cname="GST_AUDIO_FORMAT_S20LE" name="S20le" value="20"/>
      <member cname="GST_AUDIO_FORMAT_S20" name="S20" value="20"/>
      <member cname="GST_AUDIO_FORMAT_S20BE" name="S20be" value="21"/>
      <member cname="GST_AUDIO_FORMAT_U20LE" name="U20le" value="22"/>
      <member cname="GST_AUDIO_FORMAT_U20" name="U20" value="22"/>
      <member cname="GST_AUDIO_FORMAT_U20BE" name="U20be" value="23"/>
      <member cname="GST_AUDIO_FORMAT_S18LE" name="S18le" value="24"/>
      <member cname="GST_AUDIO_FORMAT_S18" name="S18" value="24"/>
      <member cname="GST_AUDIO_FORMAT_S18BE" name="S18be" value="25"/>
      <member cname="GST_AUDIO_FORMAT_U18LE" name="U18le" value="26"/>
      <member cname="GST_AUDIO_FORMAT_U18" name="U18" value="26"/>
      <member cname="GST_AUDIO_FORMAT_U18BE" name="U18be" value="27"/>
      <member cname="GST_AUDIO_FORMAT_F32LE" name="F32le" value="28"/>
      <member cname="GST_AUDIO_FORMAT_F32" name="F32" value="28"/>
      <member cname="GST_AUDIO_FORMAT_F32BE" name="F32be" value="29"/>
      <member cname="GST_AUDIO_FORMAT_F64LE" name="F64le" value="30"/>
      <member cname="GST_AUDIO_FORMAT_F64" name="F64" value="30"/>
      <member cname="GST_AUDIO_FORMAT_F64BE" name="F64be" value="31"/>
    </enum>
    <enum name="AudioLayout" cname="GstAudioLayout" type="enum" gtype="gst_audio_layout_get_type">
      <member cname="GST_AUDIO_LAYOUT_INTERLEAVED" name="Interleaved" value="0"/>
      <member cname="GST_AUDIO_LAYOUT_NON_INTERLEAVED" name="NonInterleaved" value="1"/>
    </enum>
    <enum name="AudioPackFlags" cname="GstAudioPackFlags" type="enum" gtype="gst_audio_pack_flags_get_type">
      <member cname="GST_AUDIO_PACK_FLAG_NONE" name="None" value="0"/>
    </enum>
    <enum name="AudioRingBufferFormatType" cname="GstAudioRingBufferFormatType" type="enum" gtype="gst_audio_ring_buffer_format_type_get_type">
      <member cname="GST_AUDIO_RING_BUFFER_FORMAT_TYPE_RAW" name="Raw" value="0"/>
      <member cname="GST_AUDIO_RING_BUFFER_FORMAT_TYPE_MU_LAW" name="MuLaw" value="1"/>
      <member cname="GST_AUDIO_RING_BUFFER_FORMAT_TYPE_A_LAW" name="ALaw" value="2"/>
      <member cname="GST_AUDIO_RING_BUFFER_FORMAT_TYPE_IMA_ADPCM" name="ImaAdpcm" value="3"/>
      <member cname="GST_AUDIO_RING_BUFFER_FORMAT_TYPE_MPEG" name="Mpeg" value="4"/>
      <member cname="GST_AUDIO_RING_BUFFER_FORMAT_TYPE_GSM" name="Gsm" value="5"/>
      <member cname="GST_AUDIO_RING_BUFFER_FORMAT_TYPE_IEC958" name="Iec958" value="6"/>
      <member cname="GST_AUDIO_RING_BUFFER_FORMAT_TYPE_AC3" name="Ac3" value="7"/>
      <member cname="GST_AUDIO_RING_BUFFER_FORMAT_TYPE_EAC3" name="Eac3" value="8"/>
      <member cname="GST_AUDIO_RING_BUFFER_FORMAT_TYPE_DTS" name="Dts" value="9"/>
      <member cname="GST_AUDIO_RING_BUFFER_FORMAT_TYPE_MPEG2_AAC" name="Mpeg2Aac" value="10"/>
      <member cname="GST_AUDIO_RING_BUFFER_FORMAT_TYPE_MPEG4_AAC" name="Mpeg4Aac" value="11"/>
    </enum>
    <enum name="AudioRingBufferState" cname="GstAudioRingBufferState" type="enum" gtype="gst_audio_ring_buffer_state_get_type">
      <member cname="GST_AUDIO_RING_BUFFER_STATE_STOPPED" name="Stopped" value="0"/>
      <member cname="GST_AUDIO_RING_BUFFER_STATE_PAUSED" name="Paused" value="1"/>
      <member cname="GST_AUDIO_RING_BUFFER_STATE_STARTED" name="Started" value="2"/>
    </enum>
    <enum name="StreamVolumeFormat" cname="GstStreamVolumeFormat" type="enum">
      <member cname="GST_STREAM_VOLUME_FORMAT_LINEAR" name="Linear" value="0"/>
      <member cname="GST_STREAM_VOLUME_FORMAT_CUBIC" name="Cubic" value="1"/>
      <member cname="GST_STREAM_VOLUME_FORMAT_DB" name="Db" value="2"/>
    </enum>
    <enum name="AudioFlags" cname="GstAudioFlags" type="flags" gtype="gst_audio_flags_get_type">
      <member cname="GST_AUDIO_FLAG_NONE" name="None" value="0"/>
      <member cname="GST_AUDIO_FLAG_UNPOSITIONED" name="Unpositioned" value="1"/>
    </enum>
    <enum name="AudioFormatFlags" cname="GstAudioFormatFlags" type="flags" gtype="gst_audio_format_flags_get_type">
      <member cname="GST_AUDIO_FORMAT_FLAG_INTEGER" name="Integer" value="1"/>
      <member cname="GST_AUDIO_FORMAT_FLAG_FLOAT" name="Float" value="2"/>
      <member cname="GST_AUDIO_FORMAT_FLAG_SIGNED" name="Signed" value="4"/>
      <member cname="GST_AUDIO_FORMAT_FLAG_COMPLEX" name="Complex" value="16"/>
      <member cname="GST_AUDIO_FORMAT_FLAG_UNPACK" name="Unpack" value="32"/>
    </enum>
    <callback name="AudioClockGetTimeFunc" cname="GstAudioClockGetTimeFunc">
      <return-type type="guint64"/>
      <parameters>
        <parameter name="clock" type="GstClock*"/>
        <parameter closure="1" name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="AudioFormatPack" cname="GstAudioFormatPack">
      <return-type type="void"/>
      <parameters>
        <parameter name="info" type="GstAudioFormatInfo*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="flags" type="GstAudioPackFlags"/>
        <parameter name="src" type="gpointer" array="true"/>
        <parameter name="data" type="gpointer" array="true"/>
        <parameter name="length" type="gint"/>
      </parameters>
    </callback>
    <callback name="AudioFormatUnpack" cname="GstAudioFormatUnpack">
      <return-type type="void"/>
      <parameters>
        <parameter name="info" type="GstAudioFormatInfo*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="flags" type="GstAudioPackFlags"/>
        <parameter name="dest" type="gpointer" array="true"/>
        <parameter name="data" type="gpointer" array="true"/>
        <parameter name="length" type="gint"/>
      </parameters>
    </callback>
    <callback name="AudioRingBufferCallback" cname="GstAudioRingBufferCallback">
      <return-type type="void"/>
      <parameters>
        <parameter name="rbuf" type="GstAudioRingBuffer*"/>
        <parameter name="data" type="guint8*" array="true" array_length_param_index="2"/>
        <parameter name="len" type="guint"/>
        <parameter closure="3" name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <interface name="StreamVolume" cname="GstStreamVolume" abstract="false" opaque="false" hidden="false">
      <class_struct cname="GstStreamVolumeInterface">
        <field cname="iface" access="public" writeable="false" readable="true" name="Iface" type="GTypeInterface">
          <warning>missing glib:type-name</warning>
        </field>
      </class_struct>
      <method name="GetType" cname="gst_stream_volume_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="ConvertVolume" cname="gst_stream_volume_convert_volume" shared="true">
        <return-type type="gdouble"/>
        <parameters>
          <parameter name="from" type="GstStreamVolumeFormat"/>
          <parameter name="to" type="GstStreamVolumeFormat"/>
          <parameter name="val" type="gdouble"/>
        </parameters>
      </method>
      <method name="GetMute" cname="gst_stream_volume_get_mute">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetVolume" cname="gst_stream_volume_get_volume">
        <return-type type="gdouble"/>
        <parameters>
          <parameter name="format" type="GstStreamVolumeFormat"/>
        </parameters>
      </method>
      <method name="SetMute" cname="gst_stream_volume_set_mute">
        <return-type type="void"/>
        <parameters>
          <parameter name="mute" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetVolume" cname="gst_stream_volume_set_volume">
        <return-type type="void"/>
        <parameters>
          <parameter name="format" type="GstStreamVolumeFormat"/>
          <parameter name="val" type="gdouble"/>
        </parameters>
      </method>
      <property name="Mute" cname="mute" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Volume" cname="volume" type="gdouble" readable="true" writeable="true" construct="false" construct-only="false"/>
    </interface>
    <object name="AudioBaseSink" cname="GstAudioBaseSink" abstract="false" opaque="false" hidden="false" parent="GstBaseSink">
      <class_struct cname="GstAudioBaseSinkClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GstBaseSinkClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="create_ringbuffer"/>
        <method vm="payload"/>
        <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
      </class_struct>
      <method name="GetType" cname="gst_audio_base_sink_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <virtual_method name="CreateRingbuffer" cname="create_ringbuffer">
        <return-type type="GstAudioRingBuffer*"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="Payload" cname="payload">
        <return-type type="GstBuffer*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="buffer" type="GstBuffer*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <method name="CreateRingbuffer" cname="gst_audio_base_sink_create_ringbuffer">
        <return-type type="GstAudioRingBuffer*"/>
        <parameters/>
      </method>
      <method name="GetAlignmentThreshold" cname="gst_audio_base_sink_get_alignment_threshold">
        <return-type type="guint64"/>
        <parameters/>
      </method>
      <method name="GetDiscontWait" cname="gst_audio_base_sink_get_discont_wait">
        <return-type type="guint64"/>
        <parameters/>
      </method>
      <method name="GetDriftTolerance" cname="gst_audio_base_sink_get_drift_tolerance">
        <return-type type="gint64"/>
        <parameters/>
      </method>
      <method name="GetProvideClock" cname="gst_audio_base_sink_get_provide_clock">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetSlaveMethod" cname="gst_audio_base_sink_get_slave_method">
        <return-type type="GstAudioBaseSinkSlaveMethod"/>
        <parameters/>
      </method>
      <method name="SetAlignmentThreshold" cname="gst_audio_base_sink_set_alignment_threshold">
        <return-type type="void"/>
        <parameters>
          <parameter name="alignment_threshold" type="guint64"/>
        </parameters>
      </method>
      <method name="SetDiscontWait" cname="gst_audio_base_sink_set_discont_wait">
        <return-type type="void"/>
        <parameters>
          <parameter name="discont_wait" type="guint64"/>
        </parameters>
      </method>
      <method name="SetDriftTolerance" cname="gst_audio_base_sink_set_drift_tolerance">
        <return-type type="void"/>
        <parameters>
          <parameter name="drift_tolerance" type="gint64"/>
        </parameters>
      </method>
      <method name="SetProvideClock" cname="gst_audio_base_sink_set_provide_clock">
        <return-type type="void"/>
        <parameters>
          <parameter name="provide" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetSlaveMethod" cname="gst_audio_base_sink_set_slave_method">
        <return-type type="void"/>
        <parameters>
          <parameter name="method" type="GstAudioBaseSinkSlaveMethod"/>
        </parameters>
      </method>
      <property name="AlignmentThreshold" cname="alignment-threshold" type="guint64" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="BufferTime" cname="buffer-time" type="gint64" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="CanActivatePull" cname="can-activate-pull" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="DiscontWait" cname="discont-wait" type="guint64" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="DriftTolerance" cname="drift-tolerance" type="gint64" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="LatencyTime" cname="latency-time" type="gint64" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="ProvideClock" cname="provide-clock" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="SlaveMethod" cname="slave-method" type="GstAudioBaseSinkSlaveMethod" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="element" access="public" writeable="false" readable="true" name="Element" type="GstBaseSink*"/>
      <field cname="ringbuffer" access="public" writeable="false" readable="true" name="Ringbuffer" type="GstAudioRingBuffer*"/>
      <field cname="buffer_time" access="public" writeable="false" readable="true" name="BufferTimeField" type="guint64"/>
      <field cname="latency_time" access="public" writeable="false" readable="true" name="LatencyTimeField" type="guint64"/>
      <field cname="next_sample" access="public" writeable="false" readable="true" name="NextSample" type="guint64"/>
      <field cname="provided_clock" access="public" writeable="false" readable="true" name="ProvidedClock" type="GstClock*"/>
      <field cname="eos_rendering" access="public" writeable="false" readable="true" name="EosRendering" type="gboolean"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GstAudioBaseSinkPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
    </object>
    <object name="AudioBaseSrc" cname="GstAudioBaseSrc" abstract="false" opaque="false" hidden="false" parent="GstPushSrc">
      <class_struct cname="GstAudioBaseSrcClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GstPushSrcClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="create_ringbuffer"/>
        <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
      </class_struct>
      <method name="GetType" cname="gst_audio_base_src_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <virtual_method name="CreateRingbuffer" cname="create_ringbuffer">
        <return-type type="GstAudioRingBuffer*"/>
        <parameters/>
      </virtual_method>
      <method name="CreateRingbuffer" cname="gst_audio_base_src_create_ringbuffer">
        <return-type type="GstAudioRingBuffer*"/>
        <parameters/>
      </method>
      <method name="GetProvideClock" cname="gst_audio_base_src_get_provide_clock">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetSlaveMethod" cname="gst_audio_base_src_get_slave_method">
        <return-type type="GstAudioBaseSrcSlaveMethod"/>
        <parameters/>
      </method>
      <method name="SetProvideClock" cname="gst_audio_base_src_set_provide_clock">
        <return-type type="void"/>
        <parameters>
          <parameter name="provide" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetSlaveMethod" cname="gst_audio_base_src_set_slave_method">
        <return-type type="void"/>
        <parameters>
          <parameter name="method" type="GstAudioBaseSrcSlaveMethod"/>
        </parameters>
      </method>
      <property name="ActualBufferTime" cname="actual-buffer-time" type="gint64" readable="true" writeable="false" construct="false" construct-only="false"/>
      <property name="ActualLatencyTime" cname="actual-latency-time" type="gint64" readable="true" writeable="false" construct="false" construct-only="false"/>
      <property name="BufferTime" cname="buffer-time" type="gint64" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="LatencyTime" cname="latency-time" type="gint64" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="ProvideClock" cname="provide-clock" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="SlaveMethod" cname="slave-method" type="GstAudioBaseSrcSlaveMethod" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="element" access="public" writeable="false" readable="true" name="Element" type="GstPushSrc*"/>
      <field cname="ringbuffer" access="public" writeable="false" readable="true" name="Ringbuffer" type="GstAudioRingBuffer*"/>
      <field cname="buffer_time" access="public" writeable="false" readable="true" name="BufferTimeField" type="guint64"/>
      <field cname="latency_time" access="public" writeable="false" readable="true" name="LatencyTimeField" type="guint64"/>
      <field cname="next_sample" access="public" writeable="false" readable="true" name="NextSample" type="guint64"/>
      <field cname="clock" access="public" writeable="false" readable="true" name="Clock" type="GstClock*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GstAudioBaseSrcPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
    </object>
    <object name="AudioCdSrc" cname="GstAudioCdSrc" abstract="false" opaque="false" hidden="false" parent="GstPushSrc">
      <implements>
        <interface cname="GstURIHandler"/>
      </implements>
      <class_struct cname="GstAudioCdSrcClass">
        <field cname="pushsrc_class" access="public" writeable="false" readable="true" name="PushsrcClass" type="GstPushSrcClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="open"/>
        <method vm="close"/>
        <method vm="read_sector"/>
        <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="20"/>
      </class_struct>
      <method name="GetType" cname="gst_audio_cd_src_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <virtual_method name="Close" cname="close">
        <return-type type="void"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="Open" cname="open">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="device" type="const-gchar*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="ReadSector" cname="read_sector">
        <return-type type="GstBuffer*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="sector" type="gint"/>
        </parameters>
      </virtual_method>
      <method name="AddTrack" cname="gst_audio_cd_src_add_track">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="track" type="GstAudioCdSrcTrack*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <property name="Device" cname="device" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Mode" cname="mode" type="GstAudioCdSrcMode" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Track" cname="track" type="guint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="pushsrc" access="public" writeable="false" readable="true" name="Pushsrc" type="GstPushSrc*"/>
      <field cname="tags" access="public" writeable="false" readable="true" name="Tags" type="GstTagList*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GstAudioCdSrcPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="_gst_reserved1" access="private" writeable="false" readable="false" name="_gstGstReserved1" type="guint" array="true" array_len="2"/>
      <field cname="_gst_reserved2" access="private" writeable="false" readable="false" name="_gstGstReserved2" type="gpointer" array="true" array_len="2"/>
    </object>
    <object name="AudioClock" cname="GstAudioClock" abstract="false" opaque="false" hidden="false" parent="GstSystemClock">
      <class_struct cname="GstAudioClockClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GstSystemClockClass">
          <warning>missing glib:type-name</warning>
        </field>
        <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
      </class_struct>
      <method name="GetType" cname="gst_audio_clock_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gst_audio_clock_new">
        <parameters>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="func" type="GstAudioClockGetTimeFunc"/>
          <parameter name="user_data" type="gpointer"/>
          <parameter name="destroy_notify" type="GDestroyNotify"/>
        </parameters>
      </constructor>
      <method name="Adjust" cname="gst_audio_clock_adjust" shared="true">
        <return-type type="guint64"/>
        <parameters>
          <parameter name="clock" type="GstClock*"/>
          <parameter name="time" type="guint64"/>
        </parameters>
      </method>
      <method name="GetTime" cname="gst_audio_clock_get_time" shared="true">
        <return-type type="guint64"/>
        <parameters>
          <parameter name="clock" type="GstClock*"/>
        </parameters>
      </method>
      <method name="Invalidate" cname="gst_audio_clock_invalidate" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="clock" type="GstClock*"/>
        </parameters>
      </method>
      <method name="Reset" cname="gst_audio_clock_reset">
        <return-type type="void"/>
        <parameters>
          <parameter name="time" type="guint64"/>
        </parameters>
      </method>
      <field cname="clock" access="public" writeable="false" readable="true" name="Clock" type="GstSystemClock*"/>
      <field cname="func" access="public" writeable="false" readable="true" name="Func" type="GstAudioClockGetTimeFunc"/>
      <field cname="user_data" access="public" writeable="false" readable="true" name="UserData" type="gpointer"/>
      <field cname="destroy_notify" access="public" writeable="false" readable="true" name="DestroyNotify" type="GDestroyNotify"/>
      <field cname="last_time" access="private" writeable="false" readable="false" name="LastTime" type="guint64"/>
      <field cname="time_offset" access="private" writeable="false" readable="false" name="TimeOffset" type="gint64"/>
      <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
    </object>
    <object name="AudioDecoder" cname="GstAudioDecoder" abstract="true" opaque="false" hidden="false" parent="GstElement">
      <class_struct cname="GstAudioDecoderClass">
        <field cname="element_class" access="public" writeable="false" readable="true" name="ElementClass" type="GstElementClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="start"/>
        <method vm="stop"/>
        <method vm="set_format"/>
        <method vm="parse"/>
        <method vm="handle_frame"/>
        <method vm="flush"/>
        <method vm="pre_push"/>
        <method vm="sink_event"/>
        <method vm="src_event"/>
        <method vm="open"/>
        <method vm="close"/>
        <method vm="negotiate"/>
        <method vm="decide_allocation"/>
        <method vm="propose_allocation"/>
        <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="20"/>
      </class_struct>
      <method name="GetType" cname="gst_audio_decoder_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <virtual_method name="Close" cname="close">
        <return-type type="gboolean"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="DecideAllocation" cname="decide_allocation">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="query" type="GstQuery*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="Flush" cname="flush">
        <return-type type="void"/>
        <parameters>
          <parameter name="hard" type="gboolean"/>
        </parameters>
      </virtual_method>
      <virtual_method name="HandleFrame" cname="handle_frame">
        <return-type type="GstFlowReturn"/>
        <parameters>
          <parameter name="buffer" type="GstBuffer*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="Negotiate" cname="negotiate">
        <return-type type="gboolean"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="Open" cname="open">
        <return-type type="gboolean"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="Parse" cname="parse">
        <return-type type="GstFlowReturn"/>
        <parameters>
          <parameter name="adapter" type="GstAdapter*"/>
          <parameter name="offset" type="gint"/>
          <parameter name="length" type="gint"/>
        </parameters>
      </virtual_method>
      <virtual_method name="PrePush" cname="pre_push">
        <return-type type="GstFlowReturn"/>
        <parameters>
          <parameter name="buffer" type="GstBuffer**">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="ProposeAllocation" cname="propose_allocation">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="query" type="GstQuery*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="SetFormat" cname="set_format">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="caps" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="SinkEvent" cname="sink_event">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="event" type="GstEvent*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="SrcEvent" cname="src_event">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="event" type="GstEvent*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="Start" cname="start">
        <return-type type="gboolean"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="Stop" cname="stop">
        <return-type type="gboolean"/>
        <parameters/>
      </virtual_method>
      <method name="AllocateOutputBuffer" cname="gst_audio_decoder_allocate_output_buffer">
        <return-type type="GstBuffer*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="size" type="gsize"/>
        </parameters>
      </method>
      <method name="FinishFrame" cname="gst_audio_decoder_finish_frame">
        <return-type type="GstFlowReturn"/>
        <parameters>
          <parameter name="buf" type="GstBuffer*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="frames" type="gint"/>
        </parameters>
      </method>
      <method name="GetAllocator" cname="gst_audio_decoder_get_allocator">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="allocator" type="GstAllocator*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="params" type="GstAllocationParams*" owned="true" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetAudioInfo" cname="gst_audio_decoder_get_audio_info">
        <return-type type="GstAudioInfo*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetDelay" cname="gst_audio_decoder_get_delay">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetDrainable" cname="gst_audio_decoder_get_drainable">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetEstimateRate" cname="gst_audio_decoder_get_estimate_rate">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetLatency" cname="gst_audio_decoder_get_latency">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="min" type="guint64" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="max" type="guint64" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetMaxErrors" cname="gst_audio_decoder_get_max_errors">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetMinLatency" cname="gst_audio_decoder_get_min_latency">
        <return-type type="guint64"/>
        <parameters/>
      </method>
      <method name="GetNeedsFormat" cname="gst_audio_decoder_get_needs_format">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetParseState" cname="gst_audio_decoder_get_parse_state">
        <return-type type="void"/>
        <parameters>
          <parameter name="sync" type="gboolean"/>
          <parameter name="eos" type="gboolean"/>
        </parameters>
      </method>
      <method name="GetPlc" cname="gst_audio_decoder_get_plc">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetPlcAware" cname="gst_audio_decoder_get_plc_aware">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetTolerance" cname="gst_audio_decoder_get_tolerance">
        <return-type type="guint64"/>
        <parameters/>
      </method>
      <method name="MergeTags" cname="gst_audio_decoder_merge_tags">
        <return-type type="void"/>
        <parameters>
          <parameter name="tags" type="GstTagList*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="mode" type="GstTagMergeMode"/>
        </parameters>
      </method>
      <method name="Negotiate" cname="gst_audio_decoder_negotiate">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="SetDrainable" cname="gst_audio_decoder_set_drainable">
        <return-type type="void"/>
        <parameters>
          <parameter name="enabled" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetEstimateRate" cname="gst_audio_decoder_set_estimate_rate">
        <return-type type="void"/>
        <parameters>
          <parameter name="enabled" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetLatency" cname="gst_audio_decoder_set_latency">
        <return-type type="void"/>
        <parameters>
          <parameter name="min" type="guint64"/>
          <parameter name="max" type="guint64"/>
        </parameters>
      </method>
      <method name="SetMaxErrors" cname="gst_audio_decoder_set_max_errors">
        <return-type type="void"/>
        <parameters>
          <parameter name="num" type="gint"/>
        </parameters>
      </method>
      <method name="SetMinLatency" cname="gst_audio_decoder_set_min_latency">
        <return-type type="void"/>
        <parameters>
          <parameter name="num" type="guint64"/>
        </parameters>
      </method>
      <method name="SetNeedsFormat" cname="gst_audio_decoder_set_needs_format">
        <return-type type="void"/>
        <parameters>
          <parameter name="enabled" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetOutputFormat" cname="gst_audio_decoder_set_output_format">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="info" type="GstAudioInfo*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetPlc" cname="gst_audio_decoder_set_plc">
        <return-type type="void"/>
        <parameters>
          <parameter name="enabled" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetPlcAware" cname="gst_audio_decoder_set_plc_aware">
        <return-type type="void"/>
        <parameters>
          <parameter name="plc" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetTolerance" cname="gst_audio_decoder_set_tolerance">
        <return-type type="void"/>
        <parameters>
          <parameter name="tolerance" type="guint64"/>
        </parameters>
      </method>
      <property name="MinLatency" cname="min-latency" type="gint64" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Plc" cname="plc" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Tolerance" cname="tolerance" type="gint64" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="element" access="public" writeable="false" readable="true" name="Element" type="GstElement*"/>
      <field cname="sinkpad" access="public" writeable="false" readable="true" name="Sinkpad" type="GstPad*"/>
      <field cname="srcpad" access="public" writeable="false" readable="true" name="Srcpad" type="GstPad*"/>
      <field cname="stream_lock" access="public" writeable="false" readable="true" name="StreamLock" type="GRecMutex">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="input_segment" access="public" writeable="false" readable="true" name="InputSegment" type="GstSegment">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="output_segment" access="public" writeable="false" readable="true" name="OutputSegment" type="GstSegment">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GstAudioDecoderPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="20"/>
    </object>
    <object name="AudioEncoder" cname="GstAudioEncoder" abstract="true" opaque="false" hidden="false" parent="GstElement">
      <implements>
        <interface cname="GstPreset"/>
      </implements>
      <class_struct cname="GstAudioEncoderClass">
        <field cname="element_class" access="public" writeable="false" readable="true" name="ElementClass" type="GstElementClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="start"/>
        <method vm="stop"/>
        <method vm="set_format"/>
        <method vm="handle_frame"/>
        <method vm="flush"/>
        <method vm="pre_push"/>
        <method vm="sink_event"/>
        <method vm="src_event"/>
        <method vm="getcaps"/>
        <method vm="open"/>
        <method vm="close"/>
        <method vm="negotiate"/>
        <method vm="decide_allocation"/>
        <method vm="propose_allocation"/>
        <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="20"/>
      </class_struct>
      <method name="GetType" cname="gst_audio_encoder_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <virtual_method name="Close" cname="close">
        <return-type type="gboolean"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="DecideAllocation" cname="decide_allocation">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="query" type="GstQuery*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="Flush" cname="flush">
        <return-type type="void"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="Getcaps" cname="getcaps">
        <return-type type="GstCaps*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="filter" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="HandleFrame" cname="handle_frame">
        <return-type type="GstFlowReturn"/>
        <parameters>
          <parameter name="buffer" type="GstBuffer*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="Negotiate" cname="negotiate">
        <return-type type="gboolean"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="Open" cname="open">
        <return-type type="gboolean"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="PrePush" cname="pre_push">
        <return-type type="GstFlowReturn"/>
        <parameters>
          <parameter name="buffer" type="GstBuffer**">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="ProposeAllocation" cname="propose_allocation">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="query" type="GstQuery*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="SetFormat" cname="set_format">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="info" type="GstAudioInfo*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="SinkEvent" cname="sink_event">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="event" type="GstEvent*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="SrcEvent" cname="src_event">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="event" type="GstEvent*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="Start" cname="start">
        <return-type type="gboolean"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="Stop" cname="stop">
        <return-type type="gboolean"/>
        <parameters/>
      </virtual_method>
      <method name="AllocateOutputBuffer" cname="gst_audio_encoder_allocate_output_buffer">
        <return-type type="GstBuffer*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="size" type="gsize"/>
        </parameters>
      </method>
      <method name="FinishFrame" cname="gst_audio_encoder_finish_frame">
        <return-type type="GstFlowReturn"/>
        <parameters>
          <parameter name="buffer" type="GstBuffer*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="samples" type="gint"/>
        </parameters>
      </method>
      <method name="GetAllocator" cname="gst_audio_encoder_get_allocator">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="allocator" type="GstAllocator*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="params" type="GstAllocationParams*" owned="true" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetAudioInfo" cname="gst_audio_encoder_get_audio_info">
        <return-type type="GstAudioInfo*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetDrainable" cname="gst_audio_encoder_get_drainable">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetFrameMax" cname="gst_audio_encoder_get_frame_max">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetFrameSamplesMax" cname="gst_audio_encoder_get_frame_samples_max">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetFrameSamplesMin" cname="gst_audio_encoder_get_frame_samples_min">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetHardMin" cname="gst_audio_encoder_get_hard_min">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetHardResync" cname="gst_audio_encoder_get_hard_resync">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetLatency" cname="gst_audio_encoder_get_latency">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="min" type="guint64" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="max" type="guint64" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetLookahead" cname="gst_audio_encoder_get_lookahead">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetMarkGranule" cname="gst_audio_encoder_get_mark_granule">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetPerfectTimestamp" cname="gst_audio_encoder_get_perfect_timestamp">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetTolerance" cname="gst_audio_encoder_get_tolerance">
        <return-type type="guint64"/>
        <parameters/>
      </method>
      <method name="MergeTags" cname="gst_audio_encoder_merge_tags">
        <return-type type="void"/>
        <parameters>
          <parameter name="tags" type="GstTagList*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="mode" type="GstTagMergeMode"/>
        </parameters>
      </method>
      <method name="Negotiate" cname="gst_audio_encoder_negotiate">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="ProxyGetcaps" cname="gst_audio_encoder_proxy_getcaps">
        <return-type type="GstCaps*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="caps" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="filter" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetDrainable" cname="gst_audio_encoder_set_drainable">
        <return-type type="void"/>
        <parameters>
          <parameter name="enabled" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetFrameMax" cname="gst_audio_encoder_set_frame_max">
        <return-type type="void"/>
        <parameters>
          <parameter name="num" type="gint"/>
        </parameters>
      </method>
      <method name="SetFrameSamplesMax" cname="gst_audio_encoder_set_frame_samples_max">
        <return-type type="void"/>
        <parameters>
          <parameter name="num" type="gint"/>
        </parameters>
      </method>
      <method name="SetFrameSamplesMin" cname="gst_audio_encoder_set_frame_samples_min">
        <return-type type="void"/>
        <parameters>
          <parameter name="num" type="gint"/>
        </parameters>
      </method>
      <method name="SetHardMin" cname="gst_audio_encoder_set_hard_min">
        <return-type type="void"/>
        <parameters>
          <parameter name="enabled" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetHardResync" cname="gst_audio_encoder_set_hard_resync">
        <return-type type="void"/>
        <parameters>
          <parameter name="enabled" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetHeaders" cname="gst_audio_encoder_set_headers">
        <return-type type="void"/>
        <parameters>
          <parameter name="headers" type="GList*" element_type="GList*" elements_owned="true" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetLatency" cname="gst_audio_encoder_set_latency">
        <return-type type="void"/>
        <parameters>
          <parameter name="min" type="guint64"/>
          <parameter name="max" type="guint64"/>
        </parameters>
      </method>
      <method name="SetLookahead" cname="gst_audio_encoder_set_lookahead">
        <return-type type="void"/>
        <parameters>
          <parameter name="num" type="gint"/>
        </parameters>
      </method>
      <method name="SetMarkGranule" cname="gst_audio_encoder_set_mark_granule">
        <return-type type="void"/>
        <parameters>
          <parameter name="enabled" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetOutputFormat" cname="gst_audio_encoder_set_output_format">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="caps" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetPerfectTimestamp" cname="gst_audio_encoder_set_perfect_timestamp">
        <return-type type="void"/>
        <parameters>
          <parameter name="enabled" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetTolerance" cname="gst_audio_encoder_set_tolerance">
        <return-type type="void"/>
        <parameters>
          <parameter name="tolerance" type="guint64"/>
        </parameters>
      </method>
      <property name="HardResync" cname="hard-resync" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="MarkGranule" cname="mark-granule" type="gboolean" readable="true" writeable="false" construct="false" construct-only="false"/>
      <property name="PerfectTimestamp" cname="perfect-timestamp" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Tolerance" cname="tolerance" type="gint64" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="element" access="public" writeable="false" readable="true" name="Element" type="GstElement*"/>
      <field cname="sinkpad" access="public" writeable="false" readable="true" name="Sinkpad" type="GstPad*"/>
      <field cname="srcpad" access="public" writeable="false" readable="true" name="Srcpad" type="GstPad*"/>
      <field cname="stream_lock" access="public" writeable="false" readable="true" name="StreamLock" type="GRecMutex">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="input_segment" access="public" writeable="false" readable="true" name="InputSegment" type="GstSegment">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="output_segment" access="public" writeable="false" readable="true" name="OutputSegment" type="GstSegment">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GstAudioEncoderPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="20"/>
    </object>
    <object name="AudioFilter" cname="GstAudioFilter" abstract="true" opaque="false" hidden="false" parent="GstBaseTransform">
      <class_struct cname="GstAudioFilterClass">
        <field cname="basetransformclass" access="public" writeable="false" readable="true" name="Basetransformclass" type="GstBaseTransformClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="setup"/>
        <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
      </class_struct>
      <method name="AddPadTemplates" cname="gst_audio_filter_class_add_pad_templates" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="allowed_caps" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetType" cname="gst_audio_filter_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <virtual_method name="Setup" cname="setup">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="info" type="GstAudioInfo*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <field cname="basetransform" access="public" writeable="false" readable="true" name="Basetransform" type="GstBaseTransform*"/>
      <field cname="info" access="public" writeable="false" readable="true" name="Info" type="GstAudioInfo">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
    </object>
    <object name="AudioRingBuffer" cname="GstAudioRingBuffer" abstract="true" opaque="false" hidden="false" parent="GstObject">
      <class_struct cname="GstAudioRingBufferClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GstObjectClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="open_device"/>
        <method vm="acquire"/>
        <method vm="release"/>
        <method vm="close_device"/>
        <method vm="start"/>
        <method vm="pause"/>
        <method vm="resume"/>
        <method vm="stop"/>
        <method vm="delay"/>
        <method vm="activate"/>
        <method vm="commit"/>
        <method vm="clear_all"/>
        <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
      </class_struct>
      <method name="GetType" cname="gst_audio_ring_buffer_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="DebugSpecBuff" cname="gst_audio_ring_buffer_debug_spec_buff" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="spec" type="GstAudioRingBufferSpec*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="DebugSpecCaps" cname="gst_audio_ring_buffer_debug_spec_caps" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="spec" type="GstAudioRingBufferSpec*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ParseCaps" cname="gst_audio_ring_buffer_parse_caps" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="spec" type="GstAudioRingBufferSpec*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="caps" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <virtual_method name="Acquire" cname="acquire">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="spec" type="GstAudioRingBufferSpec*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="Activate" cname="activate">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="active" type="gboolean"/>
        </parameters>
      </virtual_method>
      <virtual_method name="ClearAll" cname="clear_all">
        <return-type type="void"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="CloseDevice" cname="close_device">
        <return-type type="gboolean"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="Commit" cname="commit">
        <return-type type="guint"/>
        <parameters>
          <parameter name="sample" type="guint64"/>
          <parameter name="data" type="guint8"/>
          <parameter name="in_samples" type="gint"/>
          <parameter name="out_samples" type="gint"/>
          <parameter name="accum" type="gint"/>
        </parameters>
      </virtual_method>
      <virtual_method name="Delay" cname="delay">
        <return-type type="guint"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="OpenDevice" cname="open_device">
        <return-type type="gboolean"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="Pause" cname="pause">
        <return-type type="gboolean"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="Release" cname="release">
        <return-type type="gboolean"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="Resume" cname="resume">
        <return-type type="gboolean"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="Start" cname="start">
        <return-type type="gboolean"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="Stop" cname="stop">
        <return-type type="gboolean"/>
        <parameters/>
      </virtual_method>
      <method name="Acquire" cname="gst_audio_ring_buffer_acquire">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="spec" type="GstAudioRingBufferSpec*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Activate" cname="gst_audio_ring_buffer_activate">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="active" type="gboolean"/>
        </parameters>
      </method>
      <method name="Advance" cname="gst_audio_ring_buffer_advance">
        <return-type type="void"/>
        <parameters>
          <parameter name="advance" type="guint"/>
        </parameters>
      </method>
      <method name="Clear" cname="gst_audio_ring_buffer_clear">
        <return-type type="void"/>
        <parameters>
          <parameter name="segment" type="gint"/>
        </parameters>
      </method>
      <method name="ClearAll" cname="gst_audio_ring_buffer_clear_all">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="CloseDevice" cname="gst_audio_ring_buffer_close_device">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="Commit" cname="gst_audio_ring_buffer_commit">
        <return-type type="guint"/>
        <parameters>
          <parameter name="sample" type="guint64"/>
          <parameter name="data" type="guint8"/>
          <parameter name="in_samples" type="gint"/>
          <parameter name="out_samples" type="gint"/>
          <parameter name="accum" type="gint"/>
        </parameters>
      </method>
      <method name="Convert" cname="gst_audio_ring_buffer_convert">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="src_fmt" type="GstFormat"/>
          <parameter name="src_val" type="gint64"/>
          <parameter name="dest_fmt" type="GstFormat"/>
          <parameter name="dest_val" type="gint64"/>
        </parameters>
      </method>
      <method name="Delay" cname="gst_audio_ring_buffer_delay">
        <return-type type="guint"/>
        <parameters/>
      </method>
      <method name="DeviceIsOpen" cname="gst_audio_ring_buffer_device_is_open">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="IsAcquired" cname="gst_audio_ring_buffer_is_acquired">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="IsActive" cname="gst_audio_ring_buffer_is_active">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="IsFlushing" cname="gst_audio_ring_buffer_is_flushing">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="MayStart" cname="gst_audio_ring_buffer_may_start">
        <return-type type="void"/>
        <parameters>
          <parameter name="allowed" type="gboolean"/>
        </parameters>
      </method>
      <method name="OpenDevice" cname="gst_audio_ring_buffer_open_device">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="Pause" cname="gst_audio_ring_buffer_pause">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="PrepareRead" cname="gst_audio_ring_buffer_prepare_read">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="segment" type="gint"/>
          <parameter name="readptr" type="guint8"/>
          <parameter name="len" type="gint"/>
        </parameters>
      </method>
      <method name="Read" cname="gst_audio_ring_buffer_read">
        <return-type type="guint"/>
        <parameters>
          <parameter name="sample" type="guint64"/>
          <parameter name="data" type="guint8"/>
          <parameter name="len" type="guint"/>
          <parameter name="timestamp" type="guint64"/>
        </parameters>
      </method>
      <method name="Release" cname="gst_audio_ring_buffer_release">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="SamplesDone" cname="gst_audio_ring_buffer_samples_done">
        <return-type type="guint64"/>
        <parameters/>
      </method>
      <method name="SetCallback" cname="gst_audio_ring_buffer_set_callback">
        <return-type type="void"/>
        <parameters>
          <parameter closure="1" scope="async" name="cb" type="GstAudioRingBufferCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="SetChannelPositions" cname="gst_audio_ring_buffer_set_channel_positions">
        <return-type type="void"/>
        <parameters>
          <parameter name="position" type="GstAudioChannelPosition"/>
        </parameters>
      </method>
      <method name="SetFlushing" cname="gst_audio_ring_buffer_set_flushing">
        <return-type type="void"/>
        <parameters>
          <parameter name="flushing" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetSample" cname="gst_audio_ring_buffer_set_sample">
        <return-type type="void"/>
        <parameters>
          <parameter name="sample" type="guint64"/>
        </parameters>
      </method>
      <method name="SetTimestamp" cname="gst_audio_ring_buffer_set_timestamp">
        <return-type type="void"/>
        <parameters>
          <parameter name="readseg" type="gint"/>
          <parameter name="timestamp" type="guint64"/>
        </parameters>
      </method>
      <method name="Start" cname="gst_audio_ring_buffer_start">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="Stop" cname="gst_audio_ring_buffer_stop">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <field cname="object" access="public" writeable="false" readable="true" name="Object" type="GstObject*"/>
      <field cname="cond" access="public" writeable="false" readable="true" name="Cond" type="GCond">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="open" access="public" writeable="false" readable="true" name="Open" type="gboolean"/>
      <field cname="acquired" access="public" writeable="false" readable="true" name="Acquired" type="gboolean"/>
      <field cname="memory" access="public" writeable="false" readable="true" name="Memory" type="guint8"/>
      <field cname="size" access="public" writeable="false" readable="true" name="Size" type="gsize"/>
      <field cname="timestamps" access="public" writeable="false" readable="true" name="Timestamps" type="guint64"/>
      <field cname="spec" access="public" writeable="false" readable="true" name="Spec" type="GstAudioRingBufferSpec">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="samples_per_seg" access="public" writeable="false" readable="true" name="SamplesPerSeg" type="gint"/>
      <field cname="empty_seg" access="public" writeable="false" readable="true" name="EmptySeg" type="guint8"/>
      <field cname="state" access="public" writeable="false" readable="true" name="State" type="gint"/>
      <field cname="segdone" access="public" writeable="false" readable="true" name="Segdone" type="gint"/>
      <field cname="segbase" access="public" writeable="false" readable="true" name="Segbase" type="gint"/>
      <field cname="waiting" access="public" writeable="false" readable="true" name="Waiting" type="gint"/>
      <field cname="callback" access="private" writeable="false" readable="false" name="Callback" type="GstAudioRingBufferCallback"/>
      <field cname="cb_data" access="private" writeable="false" readable="false" name="CbData" type="gpointer"/>
      <field cname="need_reorder" access="private" writeable="false" readable="false" name="NeedReorder" type="gboolean"/>
      <field cname="channel_reorder_map" access="private" writeable="false" readable="false" name="ChannelReorderMap" type="gint" array="true" array_len="64"/>
      <field cname="flushing" access="private" writeable="false" readable="false" name="Flushing" type="gboolean"/>
      <field cname="may_start" access="private" writeable="false" readable="false" name="MayStartField" type="gint"/>
      <field cname="active" access="private" writeable="false" readable="false" name="Active" type="gboolean"/>
      <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
    </object>
    <object name="AudioSink" cname="GstAudioSink" abstract="false" opaque="false" hidden="false" parent="GstAudioBaseSink">
      <class_struct cname="GstAudioSinkClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GstAudioBaseSinkClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="open"/>
        <method vm="prepare"/>
        <method vm="unprepare"/>
        <method vm="close"/>
        <method vm="write"/>
        <method vm="delay"/>
        <method vm="reset"/>
        <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
      </class_struct>
      <method name="GetType" cname="gst_audio_sink_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <virtual_method name="Close" cname="close">
        <return-type type="gboolean"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="Delay" cname="delay">
        <return-type type="guint"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="Open" cname="open">
        <return-type type="gboolean"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="Prepare" cname="prepare">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="spec" type="GstAudioRingBufferSpec*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="Reset" cname="reset">
        <return-type type="void"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="Unprepare" cname="unprepare">
        <return-type type="gboolean"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="Write" cname="write">
        <return-type type="gint"/>
        <parameters>
          <parameter name="data" type="gpointer"/>
          <parameter name="length" type="guint"/>
        </parameters>
      </virtual_method>
      <field cname="element" access="public" writeable="false" readable="true" name="Element" type="GstAudioBaseSink*"/>
      <field cname="thread" access="private" writeable="false" readable="false" name="Thread" type="GThread*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
    </object>
    <object name="AudioSrc" cname="GstAudioSrc" abstract="false" opaque="false" hidden="false" parent="GstAudioBaseSrc">
      <class_struct cname="GstAudioSrcClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GstAudioBaseSrcClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="open"/>
        <method vm="prepare"/>
        <method vm="unprepare"/>
        <method vm="close"/>
        <method vm="read"/>
        <method vm="delay"/>
        <method vm="reset"/>
        <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
      </class_struct>
      <method name="GetType" cname="gst_audio_src_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <virtual_method name="Close" cname="close">
        <return-type type="gboolean"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="Delay" cname="delay">
        <return-type type="guint"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="Open" cname="open">
        <return-type type="gboolean"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="Prepare" cname="prepare">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="spec" type="GstAudioRingBufferSpec*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="Read" cname="read">
        <return-type type="guint"/>
        <parameters>
          <parameter name="data" type="gpointer"/>
          <parameter name="length" type="guint"/>
          <parameter name="timestamp" type="guint64"/>
        </parameters>
      </virtual_method>
      <virtual_method name="Reset" cname="reset">
        <return-type type="void"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="Unprepare" cname="unprepare">
        <return-type type="gboolean"/>
        <parameters/>
      </virtual_method>
      <field cname="element" access="public" writeable="false" readable="true" name="Element" type="GstAudioBaseSrc*"/>
      <field cname="thread" access="private" writeable="false" readable="false" name="Thread" type="GThread*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
    </object>
    <struct name="AudioBaseSinkPrivate" cname="GstAudioBaseSinkPrivate" opaque="true" hidden="true"/>
    <struct name="AudioBaseSrcPrivate" cname="GstAudioBaseSrcPrivate" opaque="true" hidden="true"/>
    <struct name="AudioCdSrcPrivate" cname="GstAudioCdSrcPrivate" opaque="true" hidden="true"/>
    <struct name="AudioCdSrcTrack" cname="GstAudioCdSrcTrack" opaque="false" hidden="false">
      <field cname="is_audio" access="public" writeable="true" readable="true" name="IsAudio" type="gboolean"/>
      <field cname="num" access="public" writeable="true" readable="true" name="Num" type="guint"/>
      <field cname="start" access="public" writeable="true" readable="true" name="Start" type="guint"/>
      <field cname="end" access="public" writeable="true" readable="true" name="End" type="guint"/>
      <field cname="tags" access="public" writeable="true" readable="true" name="Tags" type="GstTagList*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="_gst_reserved1" access="private" writeable="false" readable="false" name="_gstGstReserved1" type="guint" array="true" array_len="2"/>
      <field cname="_gst_reserved2" access="private" writeable="false" readable="false" name="_gstGstReserved2" type="gpointer" array="true" array_len="2"/>
    </struct>
    <struct name="AudioDecoderPrivate" cname="GstAudioDecoderPrivate" opaque="true" hidden="true"/>
    <struct name="AudioDownmixMeta" cname="GstAudioDownmixMeta" opaque="false" hidden="false">
      <field cname="meta" access="public" writeable="true" readable="true" name="Meta" type="GstMeta">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="from_position" access="public" writeable="true" readable="true" name="FromPosition" type="GstAudioChannelPosition"/>
      <field cname="to_position" access="public" writeable="true" readable="true" name="ToPosition" type="GstAudioChannelPosition"/>
      <field cname="from_channels" access="public" writeable="true" readable="true" name="FromChannels" type="gint"/>
      <field cname="to_channels" access="public" writeable="true" readable="true" name="ToChannels" type="gint"/>
      <field cname="matrix" access="public" writeable="true" readable="true" name="Matrix" type="gfloat"/>
      <method name="GetInfo" cname="gst_audio_downmix_meta_get_info" shared="true">
        <return-type type="GstMetaInfo*">
          <warning>missing glib:type-name</warning>
        </return-type>
      </method>
    </struct>
    <struct name="AudioEncoderPrivate" cname="GstAudioEncoderPrivate" opaque="true" hidden="true"/>
    <struct name="AudioFormatInfo" cname="GstAudioFormatInfo" opaque="false" hidden="false">
      <field cname="format" access="public" writeable="true" readable="true" name="Format" type="GstAudioFormat"/>
      <field cname="name" access="public" writeable="true" readable="true" name="Name" type="gchar*"/>
      <field cname="description" access="public" writeable="true" readable="true" name="Description" type="gchar*"/>
      <field cname="flags" access="public" writeable="true" readable="true" name="Flags" type="GstAudioFormatFlags"/>
      <field cname="endianness" access="public" writeable="true" readable="true" name="Endianness" type="gint"/>
      <field cname="width" access="public" writeable="true" readable="true" name="Width" type="gint"/>
      <field cname="depth" access="public" writeable="true" readable="true" name="Depth" type="gint"/>
      <field cname="silence" access="public" writeable="true" readable="true" name="Silence" type="guint8" array="true" array_len="8"/>
      <field cname="unpack_format" access="public" writeable="true" readable="true" name="UnpackFormat" type="GstAudioFormat"/>
      <field cname="unpack_func" access="public" writeable="true" readable="true" name="UnpackFunc" type="GstAudioFormatUnpack"/>
      <field cname="pack_func" access="public" writeable="true" readable="true" name="PackFunc" type="GstAudioFormatPack"/>
      <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
    </struct>
    <boxed name="AudioInfo" cname="GstAudioInfo" opaque="false" hidden="false">
      <method name="GetType" cname="gst_audio_info_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <field cname="finfo" access="public" writeable="true" readable="true" name="Finfo" type="GstAudioFormatInfo*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="flags" access="public" writeable="true" readable="true" name="Flags" type="GstAudioFlags"/>
      <field cname="layout" access="public" writeable="true" readable="true" name="Layout" type="GstAudioLayout"/>
      <field cname="rate" access="public" writeable="true" readable="true" name="Rate" type="gint"/>
      <field cname="channels" access="public" writeable="true" readable="true" name="Channels" type="gint"/>
      <field cname="bpf" access="public" writeable="true" readable="true" name="Bpf" type="gint"/>
      <field cname="position" access="public" writeable="true" readable="true" name="Position" type="GstAudioChannelPosition" array="true" array_len="64"/>
      <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
      <constructor cname="gst_audio_info_new" disable_void_ctor=""/>
      <method name="Convert" cname="gst_audio_info_convert">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="src_fmt" type="GstFormat"/>
          <parameter name="src_val" type="gint64"/>
          <parameter name="dest_fmt" type="GstFormat"/>
          <parameter name="dest_val" type="gint64"/>
        </parameters>
      </method>
      <method name="Copy" cname="gst_audio_info_copy">
        <return-type type="GstAudioInfo*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="Free" cname="gst_audio_info_free">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="FromCaps" cname="gst_audio_info_from_caps">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="caps" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Init" cname="gst_audio_info_init">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="SetFormat" cname="gst_audio_info_set_format">
        <return-type type="void"/>
        <parameters>
          <parameter name="format" type="GstAudioFormat"/>
          <parameter name="rate" type="gint"/>
          <parameter name="channels" type="gint"/>
          <parameter name="position" type="GstAudioChannelPosition"/>
        </parameters>
      </method>
      <method name="ToCaps" cname="gst_audio_info_to_caps">
        <return-type type="GstCaps*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
    </boxed>
    <struct name="AudioRingBufferSpec" cname="GstAudioRingBufferSpec" opaque="false" hidden="false">
      <field cname="caps" access="public" writeable="true" readable="true" name="Caps" type="GstCaps*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="type" access="public" writeable="true" readable="true" name="Type" type="GstAudioRingBufferFormatType"/>
      <field cname="info" access="public" writeable="true" readable="true" name="Info" type="GstAudioInfo">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="latency_time" access="public" writeable="true" readable="true" name="LatencyTime" type="guint64"/>
      <field cname="buffer_time" access="public" writeable="true" readable="true" name="BufferTime" type="guint64"/>
      <field cname="segsize" access="public" writeable="true" readable="true" name="Segsize" type="gint"/>
      <field cname="segtotal" access="public" writeable="true" readable="true" name="Segtotal" type="gint"/>
      <field cname="seglatency" access="public" writeable="true" readable="true" name="Seglatency" type="gint"/>
      <field cname="_gst_reserved" access="private" writeable="false" readable="false" name="_gstGstReserved" type="gpointer" array="true" array_len="4"/>
    </struct>
    <object name="Global" cname="GstAudioGlobal" opaque="true">
      <method name="AudioBufferClip" cname="gst_audio_buffer_clip" shared="true">
        <return-type type="GstBuffer*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="buffer" type="GstBuffer*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="segment" type="GstSegment*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="rate" type="gint"/>
          <parameter name="bpf" type="gint"/>
        </parameters>
      </method>
      <method name="AudioBufferReorderChannels" cname="gst_audio_buffer_reorder_channels" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="buffer" type="GstBuffer*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="format" type="GstAudioFormat"/>
          <parameter name="channels" type="gint"/>
          <parameter name="from" type="GstAudioChannelPosition*" array="true"/>
          <parameter name="to" type="GstAudioChannelPosition*" array="true"/>
        </parameters>
      </method>
      <method name="AudioChannelPositionsFromMask" cname="gst_audio_channel_positions_from_mask" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="channels" type="gint"/>
          <parameter name="channel_mask" type="guint64"/>
          <parameter name="position" type="GstAudioChannelPosition*" array="true" array_length_param_index="0"/>
        </parameters>
      </method>
      <method name="AudioChannelPositionsToMask" cname="gst_audio_channel_positions_to_mask" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="position" type="GstAudioChannelPosition*" array="true" array_length_param_index="1"/>
          <parameter name="channels" type="gint"/>
          <parameter name="force_order" type="gboolean"/>
          <parameter name="channel_mask" type="guint64*" array="true"/>
        </parameters>
      </method>
      <method name="AudioChannelPositionsToValidOrder" cname="gst_audio_channel_positions_to_valid_order" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="position" type="GstAudioChannelPosition*" array="true" array_length_param_index="1"/>
          <parameter name="channels" type="gint"/>
        </parameters>
      </method>
      <method name="AudioCheckValidChannelPositions" cname="gst_audio_check_valid_channel_positions" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="position" type="GstAudioChannelPosition*" array="true" array_length_param_index="1"/>
          <parameter name="channels" type="gint"/>
          <parameter name="force_order" type="gboolean"/>
        </parameters>
      </method>
      <method name="AudioDownmixMetaApiGetType" cname="gst_audio_downmix_meta_api_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="AudioDownmixMetaGetInfo" cname="gst_audio_downmix_meta_get_info" shared="true">
        <return-type type="GstMetaInfo*">
          <warning>missing glib:type-name</warning>
        </return-type>
      </method>
      <method name="AudioFormatBuildInteger" cname="gst_audio_format_build_integer" shared="true">
        <return-type type="GstAudioFormat"/>
        <parameters>
          <parameter name="sign" type="gboolean"/>
          <parameter name="endianness" type="gint"/>
          <parameter name="width" type="gint"/>
          <parameter name="depth" type="gint"/>
        </parameters>
      </method>
      <method name="AudioFormatFillSilence" cname="gst_audio_format_fill_silence" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="info" type="GstAudioFormatInfo*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="dest" type="gpointer" array="true" array_length_param_index="2"/>
          <parameter name="length" type="gsize"/>
        </parameters>
      </method>
      <method name="AudioFormatFromString" cname="gst_audio_format_from_string" shared="true">
        <return-type type="GstAudioFormat"/>
        <parameters>
          <parameter name="format" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="AudioFormatGetInfo" cname="gst_audio_format_get_info" shared="true">
        <return-type type="GstAudioFormatInfo*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="format" type="GstAudioFormat"/>
        </parameters>
      </method>
      <method name="AudioFormatInfoGetType" cname="gst_audio_format_info_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="AudioFormatToString" cname="gst_audio_format_to_string" shared="true">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="format" type="GstAudioFormat"/>
        </parameters>
      </method>
      <method name="AudioGetChannelReorderMap" cname="gst_audio_get_channel_reorder_map" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="channels" type="gint"/>
          <parameter name="from" type="GstAudioChannelPosition*" array="true"/>
          <parameter name="to" type="GstAudioChannelPosition*" array="true"/>
          <parameter name="reorder_map" type="gint*" array="true"/>
        </parameters>
      </method>
      <method name="AudioIec61937FrameSize" cname="gst_audio_iec61937_frame_size" shared="true">
        <return-type type="guint"/>
        <parameters>
          <parameter name="spec" type="GstAudioRingBufferSpec*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="AudioIec61937Payload" cname="gst_audio_iec61937_payload" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="src" type="guint8*" array="true" array_length_param_index="1"/>
          <parameter name="src_n" type="guint"/>
          <parameter name="dst" type="guint8*" array="true" array_length_param_index="3"/>
          <parameter name="dst_n" type="guint"/>
          <parameter name="spec" type="GstAudioRingBufferSpec*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="endianness" type="gint"/>
        </parameters>
      </method>
      <method name="AudioReorderChannels" cname="gst_audio_reorder_channels" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="data" type="gpointer" array="true" array_length_param_index="1"/>
          <parameter name="size" type="gsize"/>
          <parameter name="format" type="GstAudioFormat"/>
          <parameter name="channels" type="gint"/>
          <parameter name="from" type="GstAudioChannelPosition*" array="true"/>
          <parameter name="to" type="GstAudioChannelPosition*" array="true"/>
        </parameters>
      </method>
      <method name="BufferAddAudioDownmixMeta" cname="gst_buffer_add_audio_downmix_meta" shared="true">
        <return-type type="GstAudioDownmixMeta*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="buffer" type="GstBuffer*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="from_position" type="GstAudioChannelPosition*" array="true" array_length_param_index="2"/>
          <parameter name="from_channels" type="gint"/>
          <parameter name="to_position" type="GstAudioChannelPosition*" array="true" array_length_param_index="4"/>
          <parameter name="to_channels" type="gint"/>
          <parameter name="matrix" type="gfloat"/>
        </parameters>
      </method>
      <method name="BufferGetAudioDownmixMetaForChannels" cname="gst_buffer_get_audio_downmix_meta_for_channels" shared="true">
        <return-type type="GstAudioDownmixMeta*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="buffer" type="GstBuffer*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="to_position" type="GstAudioChannelPosition*" array="true" array_length_param_index="2"/>
          <parameter name="to_channels" type="gint"/>
        </parameters>
      </method>
      <method name="StreamVolumeConvertVolume" cname="gst_stream_volume_convert_volume" shared="true">
        <return-type type="gdouble"/>
        <parameters>
          <parameter name="from" type="GstStreamVolumeFormat"/>
          <parameter name="to" type="GstStreamVolumeFormat"/>
          <parameter name="val" type="gdouble"/>
        </parameters>
      </method>
    </object>
    <object name="Constants" cname="GstAudioConstants" opaque="true">
      <constant value="(int) [ 1, max ]" ctype="gchar*" gtype="gchar*" name="AUDIO_CHANNELS_RANGE"/>
      <constant value="10" ctype="gint" gtype="gint" name="AUDIO_DECODER_MAX_ERRORS"/>
      <constant value="sink" ctype="gchar*" gtype="gchar*" name="AUDIO_DECODER_SINK_NAME"/>
      <constant value="src" ctype="gchar*" gtype="gchar*" name="AUDIO_DECODER_SRC_NAME"/>
      <constant value="2" ctype="gint" gtype="gint" name="AUDIO_DEF_CHANNELS"/>
      <constant value="S16LE" ctype="gchar*" gtype="gchar*" name="AUDIO_DEF_FORMAT"/>
      <constant value="44100" ctype="gint" gtype="gint" name="AUDIO_DEF_RATE"/>
      <constant value="sink" ctype="gchar*" gtype="gchar*" name="AUDIO_ENCODER_SINK_NAME"/>
      <constant value="src" ctype="gchar*" gtype="gchar*" name="AUDIO_ENCODER_SRC_NAME"/>
      <constant value=" { S8, U8, S16LE, S16BE, U16LE, U16BE, S24_32LE, S24_32BE, U24_32LE, U24_32BE, S32LE, S32BE, U32LE, U32BE, S24LE, S24BE, U24LE, U24BE, S20LE, S20BE, U20LE, U20BE, S18LE, S18BE, U18LE, U18BE, F32LE, F32BE, F64LE, F64BE }" ctype="gchar*" gtype="gchar*" name="AUDIO_FORMATS_ALL"/>
      <constant value="(int) [ 1, max ]" ctype="gchar*" gtype="gchar*" name="AUDIO_RATE_RANGE"/>
    </object>
  </namespace>
  <namespace name="GstPbutils" library="gsttag-1.0">
    <enum name="DiscovererResult" cname="GstDiscovererResult" type="enum" gtype="gst_discoverer_result_get_type">
      <member cname="GST_DISCOVERER_OK" name="Ok" value="0"/>
      <member cname="GST_DISCOVERER_URI_INVALID" name="UriInvalid" value="1"/>
      <member cname="GST_DISCOVERER_ERROR" name="Error" value="2"/>
      <member cname="GST_DISCOVERER_TIMEOUT" name="Timeout" value="3"/>
      <member cname="GST_DISCOVERER_BUSY" name="Busy" value="4"/>
      <member cname="GST_DISCOVERER_MISSING_PLUGINS" name="MissingPlugins" value="5"/>
    </enum>
    <enum name="InstallPluginsReturn" cname="GstInstallPluginsReturn" type="enum" gtype="gst_install_plugins_return_get_type">
      <member cname="GST_INSTALL_PLUGINS_SUCCESS" name="Success" value="0"/>
      <member cname="GST_INSTALL_PLUGINS_NOT_FOUND" name="NotFound" value="1"/>
      <member cname="GST_INSTALL_PLUGINS_ERROR" name="Error" value="2"/>
      <member cname="GST_INSTALL_PLUGINS_PARTIAL_SUCCESS" name="PartialSuccess" value="3"/>
      <member cname="GST_INSTALL_PLUGINS_USER_ABORT" name="UserAbort" value="4"/>
      <member cname="GST_INSTALL_PLUGINS_CRASHED" name="Crashed" value="100"/>
      <member cname="GST_INSTALL_PLUGINS_INVALID" name="Invalid" value="101"/>
      <member cname="GST_INSTALL_PLUGINS_STARTED_OK" name="StartedOk" value="200"/>
      <member cname="GST_INSTALL_PLUGINS_INTERNAL_FAILURE" name="InternalFailure" value="201"/>
      <member cname="GST_INSTALL_PLUGINS_HELPER_MISSING" name="HelperMissing" value="202"/>
      <member cname="GST_INSTALL_PLUGINS_INSTALL_IN_PROGRESS" name="InstallInProgress" value="203"/>
    </enum>
    <callback name="InstallPluginsResultFunc" cname="GstInstallPluginsResultFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="_result" type="GstInstallPluginsReturn"/>
        <parameter closure="1" name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <object name="Discoverer" cname="GstDiscoverer" abstract="false" opaque="false" hidden="false" parent="GObject">
      <class_struct cname="GstDiscovererClass">
        <field cname="parentclass" access="public" writeable="false" readable="true" name="Parentclass" type="GObjectClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method signal_vm="finished"/>
        <method signal_vm="starting"/>
        <method signal_vm="discovered"/>
        <method signal_vm="source_setup"/>
        <field cname="_reserved" access="public" writeable="false" readable="true" name="_Reserved" type="gpointer" array="true" array_len="4"/>
      </class_struct>
      <method name="GetType" cname="gst_discoverer_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gst_discoverer_new">
        <parameters>
          <parameter name="timeout" type="guint64"/>
        </parameters>
      </constructor>
      <method name="DiscoverUri" cname="gst_discoverer_discover_uri">
        <return-type type="GstDiscovererInfo*" owned="true"/>
        <parameters throws="1">
          <parameter name="uri" type="const-gchar*"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="DiscoverUriAsync" cname="gst_discoverer_discover_uri_async">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="uri" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="Start" cname="gst_discoverer_start">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="Stop" cname="gst_discoverer_stop">
        <return-type type="void"/>
        <parameters/>
      </method>
      <property name="Timeout" cname="timeout" type="guint64" readable="true" writeable="true" construct="true" construct-only="false"/>
      <field cname="parent" access="public" writeable="false" readable="true" name="Parent" type="GObject*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GstDiscovererPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="_reserved" access="private" writeable="false" readable="false" name="_Reserved" type="gpointer" array="true" array_len="4"/>
      <signal name="Discovered" cname="discovered" when="last" field_name="discovered">
        <return-type type="void"/>
        <parameters>
          <parameter name="info" type="GstDiscovererInfo*"/>
          <parameter name="error" type="GError*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </signal>
      <signal name="Finished" cname="finished" when="last" field_name="finished">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="SourceSetup" cname="source-setup" when="last" field_name="source_setup">
        <return-type type="void"/>
        <parameters>
          <parameter name="source" type="GstElement*"/>
        </parameters>
      </signal>
      <signal name="Starting" cname="starting" when="last" field_name="starting">
        <return-type type="void"/>
        <parameters/>
      </signal>
    </object>
    <object name="DiscovererAudioInfo" cname="GstDiscovererAudioInfo" abstract="false" opaque="false" hidden="false" parent="GstDiscovererStreamInfo">
      <method name="GetType" cname="gst_discoverer_audio_info_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="GetBitrate" cname="gst_discoverer_audio_info_get_bitrate">
        <return-type type="guint"/>
        <parameters/>
      </method>
      <method name="GetChannels" cname="gst_discoverer_audio_info_get_channels">
        <return-type type="guint"/>
        <parameters/>
      </method>
      <method name="GetDepth" cname="gst_discoverer_audio_info_get_depth">
        <return-type type="guint"/>
        <parameters/>
      </method>
      <method name="GetLanguage" cname="gst_discoverer_audio_info_get_language">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetMaxBitrate" cname="gst_discoverer_audio_info_get_max_bitrate">
        <return-type type="guint"/>
        <parameters/>
      </method>
      <method name="GetSampleRate" cname="gst_discoverer_audio_info_get_sample_rate">
        <return-type type="guint"/>
        <parameters/>
      </method>
    </object>
    <object name="DiscovererContainerInfo" cname="GstDiscovererContainerInfo" abstract="false" opaque="false" hidden="false" parent="GstDiscovererStreamInfo">
      <method name="GetType" cname="gst_discoverer_container_info_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="GetStreams" cname="gst_discoverer_container_info_get_streams">
        <return-type type="GList*" element_type="GstDiscovererStreamInfo*" elements_owned="true" owned="true"/>
        <parameters/>
      </method>
    </object>
    <object name="DiscovererInfo" cname="GstDiscovererInfo" abstract="false" opaque="false" hidden="false" parent="GObject">
      <method name="GetType" cname="gst_discoverer_info_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="Copy" cname="gst_discoverer_info_copy">
        <return-type type="GstDiscovererInfo*" owned="true"/>
        <parameters/>
      </method>
      <method name="GetAudioStreams" cname="gst_discoverer_info_get_audio_streams">
        <return-type type="GList*" element_type="GstDiscovererStreamInfo*" elements_owned="true" owned="true"/>
        <parameters/>
      </method>
      <method name="GetContainerStreams" cname="gst_discoverer_info_get_container_streams">
        <return-type type="GList*" element_type="GstDiscovererStreamInfo*" elements_owned="true" owned="true"/>
        <parameters/>
      </method>
      <method name="GetDuration" cname="gst_discoverer_info_get_duration">
        <return-type type="guint64"/>
        <parameters/>
      </method>
      <method name="GetMisc" cname="gst_discoverer_info_get_misc">
        <return-type type="GstStructure*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetResult" cname="gst_discoverer_info_get_result">
        <return-type type="GstDiscovererResult"/>
        <parameters/>
      </method>
      <method name="GetSeekable" cname="gst_discoverer_info_get_seekable">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetStreamInfo" cname="gst_discoverer_info_get_stream_info">
        <return-type type="GstDiscovererStreamInfo*" owned="true"/>
        <parameters/>
      </method>
      <method name="GetStreamList" cname="gst_discoverer_info_get_stream_list">
        <return-type type="GList*" element_type="GstDiscovererStreamInfo*" elements_owned="true" owned="true"/>
        <parameters/>
      </method>
      <method name="GetStreams" cname="gst_discoverer_info_get_streams">
        <return-type type="GList*" element_type="GstDiscovererStreamInfo*" elements_owned="true" owned="true"/>
        <parameters>
          <parameter name="streamtype" type="GType"/>
        </parameters>
      </method>
      <method name="GetSubtitleStreams" cname="gst_discoverer_info_get_subtitle_streams">
        <return-type type="GList*" element_type="GstDiscovererStreamInfo*" elements_owned="true" owned="true"/>
        <parameters/>
      </method>
      <method name="GetTags" cname="gst_discoverer_info_get_tags">
        <return-type type="GstTagList*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetToc" cname="gst_discoverer_info_get_toc">
        <return-type type="GstToc*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetUri" cname="gst_discoverer_info_get_uri">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetVideoStreams" cname="gst_discoverer_info_get_video_streams">
        <return-type type="GList*" element_type="GstDiscovererStreamInfo*" elements_owned="true" owned="true"/>
        <parameters/>
      </method>
    </object>
    <object name="DiscovererStreamInfo" cname="GstDiscovererStreamInfo" abstract="false" opaque="false" hidden="false" parent="GObject">
      <method name="GetType" cname="gst_discoverer_stream_info_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="ListFree" cname="gst_discoverer_stream_info_list_free" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="infos" type="GList*" element_type="GstDiscovererStreamInfo*"/>
        </parameters>
      </method>
      <method name="GetCaps" cname="gst_discoverer_stream_info_get_caps">
        <return-type type="GstCaps*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetMisc" cname="gst_discoverer_stream_info_get_misc">
        <return-type type="GstStructure*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetNext" cname="gst_discoverer_stream_info_get_next">
        <return-type type="GstDiscovererStreamInfo*" owned="true"/>
        <parameters/>
      </method>
      <method name="GetPrevious" cname="gst_discoverer_stream_info_get_previous">
        <return-type type="GstDiscovererStreamInfo*" owned="true"/>
        <parameters/>
      </method>
      <method name="GetStreamTypeNick" cname="gst_discoverer_stream_info_get_stream_type_nick">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetTags" cname="gst_discoverer_stream_info_get_tags">
        <return-type type="GstTagList*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetToc" cname="gst_discoverer_stream_info_get_toc">
        <return-type type="GstToc*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
    </object>
    <object name="DiscovererSubtitleInfo" cname="GstDiscovererSubtitleInfo" abstract="false" opaque="false" hidden="false" parent="GstDiscovererStreamInfo">
      <method name="GetType" cname="gst_discoverer_subtitle_info_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="GetLanguage" cname="gst_discoverer_subtitle_info_get_language">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
    </object>
    <object name="DiscovererVideoInfo" cname="GstDiscovererVideoInfo" abstract="false" opaque="false" hidden="false" parent="GstDiscovererStreamInfo">
      <method name="GetType" cname="gst_discoverer_video_info_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="GetBitrate" cname="gst_discoverer_video_info_get_bitrate">
        <return-type type="guint"/>
        <parameters/>
      </method>
      <method name="GetDepth" cname="gst_discoverer_video_info_get_depth">
        <return-type type="guint"/>
        <parameters/>
      </method>
      <method name="GetFramerateDenom" cname="gst_discoverer_video_info_get_framerate_denom">
        <return-type type="guint"/>
        <parameters/>
      </method>
      <method name="GetFramerateNum" cname="gst_discoverer_video_info_get_framerate_num">
        <return-type type="guint"/>
        <parameters/>
      </method>
      <method name="GetHeight" cname="gst_discoverer_video_info_get_height">
        <return-type type="guint"/>
        <parameters/>
      </method>
      <method name="GetMaxBitrate" cname="gst_discoverer_video_info_get_max_bitrate">
        <return-type type="guint"/>
        <parameters/>
      </method>
      <method name="GetParDenom" cname="gst_discoverer_video_info_get_par_denom">
        <return-type type="guint"/>
        <parameters/>
      </method>
      <method name="GetParNum" cname="gst_discoverer_video_info_get_par_num">
        <return-type type="guint"/>
        <parameters/>
      </method>
      <method name="GetWidth" cname="gst_discoverer_video_info_get_width">
        <return-type type="guint"/>
        <parameters/>
      </method>
      <method name="IsImage" cname="gst_discoverer_video_info_is_image">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="IsInterlaced" cname="gst_discoverer_video_info_is_interlaced">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
    </object>
    <object name="EncodingAudioProfile" cname="GstEncodingAudioProfile" abstract="false" opaque="false" hidden="false" parent="GstEncodingProfile">
      <class_struct cname="GstEncodingAudioProfileClass"/>
      <method name="GetType" cname="gst_encoding_audio_profile_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gst_encoding_audio_profile_new">
        <parameters>
          <parameter name="format" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="preset" type="const-gchar*"/>
          <parameter name="restriction" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="presence" type="guint"/>
        </parameters>
      </constructor>
    </object>
    <object name="EncodingContainerProfile" cname="GstEncodingContainerProfile" abstract="false" opaque="false" hidden="false" parent="GstEncodingProfile">
      <class_struct cname="GstEncodingContainerProfileClass"/>
      <method name="GetType" cname="gst_encoding_container_profile_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gst_encoding_container_profile_new">
        <parameters>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="description" type="const-gchar*"/>
          <parameter name="format" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="preset" type="const-gchar*"/>
        </parameters>
      </constructor>
      <method name="AddProfile" cname="gst_encoding_container_profile_add_profile">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="profile" type="GstEncodingProfile*" owned="true"/>
        </parameters>
      </method>
      <method name="ContainsProfile" cname="gst_encoding_container_profile_contains_profile">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="profile" type="GstEncodingProfile*"/>
        </parameters>
      </method>
      <method name="GetProfiles" cname="gst_encoding_container_profile_get_profiles">
        <return-type type="const GList*" element_type="GstEncodingProfile*"/>
        <parameters/>
      </method>
    </object>
    <object name="EncodingProfile" cname="GstEncodingProfile" abstract="false" opaque="true" hidden="false" parent="GObject">
      <class_struct cname="GstEncodingProfileClass"/>
      <method name="GetType" cname="gst_encoding_profile_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="Find" cname="gst_encoding_profile_find" shared="true">
        <return-type type="GstEncodingProfile*" owned="true"/>
        <parameters>
          <parameter name="targetname" type="const-gchar*"/>
          <parameter name="profilename" type="const-gchar*"/>
          <parameter allow-none="1" name="category" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="FromDiscoverer" cname="gst_encoding_profile_from_discoverer" shared="true">
        <return-type type="GstEncodingProfile*" owned="true"/>
        <parameters>
          <parameter name="info" type="GstDiscovererInfo*"/>
        </parameters>
      </method>
      <method name="GetDescription" cname="gst_encoding_profile_get_description">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetFormat" cname="gst_encoding_profile_get_format">
        <return-type type="GstCaps*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetInputCaps" cname="gst_encoding_profile_get_input_caps">
        <return-type type="GstCaps*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetName" cname="gst_encoding_profile_get_name">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetPresence" cname="gst_encoding_profile_get_presence">
        <return-type type="guint"/>
        <parameters/>
      </method>
      <method name="GetPreset" cname="gst_encoding_profile_get_preset">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetRestriction" cname="gst_encoding_profile_get_restriction">
        <return-type type="GstCaps*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetTypeNick" cname="gst_encoding_profile_get_type_nick">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="IsEqual" cname="gst_encoding_profile_is_equal">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="b" type="GstEncodingProfile*"/>
        </parameters>
      </method>
      <method name="SetDescription" cname="gst_encoding_profile_set_description">
        <return-type type="void"/>
        <parameters>
          <parameter name="description" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetFormat" cname="gst_encoding_profile_set_format">
        <return-type type="void"/>
        <parameters>
          <parameter name="format" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetName" cname="gst_encoding_profile_set_name">
        <return-type type="void"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetPresence" cname="gst_encoding_profile_set_presence">
        <return-type type="void"/>
        <parameters>
          <parameter name="presence" type="guint"/>
        </parameters>
      </method>
      <method name="SetPreset" cname="gst_encoding_profile_set_preset">
        <return-type type="void"/>
        <parameters>
          <parameter name="preset" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetRestriction" cname="gst_encoding_profile_set_restriction">
        <return-type type="void"/>
        <parameters>
          <parameter name="restriction" type="GstCaps*" owned="true">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
    </object>
    <object name="EncodingTarget" cname="GstEncodingTarget" abstract="false" opaque="false" hidden="false" parent="GObject">
      <method name="GetType" cname="gst_encoding_target_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gst_encoding_target_new">
        <parameters>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="category" type="const-gchar*"/>
          <parameter name="description" type="const-gchar*"/>
          <parameter name="profiles" type="const GList*" element_type="GstEncodingProfile*"/>
        </parameters>
      </constructor>
      <method name="Load" cname="gst_encoding_target_load" shared="true">
        <return-type type="GstEncodingTarget*" owned="true"/>
        <parameters throws="1">
          <parameter name="name" type="const-gchar*"/>
          <parameter allow-none="1" name="category" type="const-gchar*"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="LoadFromFile" cname="gst_encoding_target_load_from_file" shared="true">
        <return-type type="GstEncodingTarget*" owned="true"/>
        <parameters throws="1">
          <parameter name="filepath" type="const-gchar*"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="AddProfile" cname="gst_encoding_target_add_profile">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="profile" type="GstEncodingProfile*" owned="true"/>
        </parameters>
      </method>
      <method name="GetCategory" cname="gst_encoding_target_get_category">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetDescription" cname="gst_encoding_target_get_description">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetName" cname="gst_encoding_target_get_name">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetProfile" cname="gst_encoding_target_get_profile">
        <return-type type="GstEncodingProfile*" owned="true"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetProfiles" cname="gst_encoding_target_get_profiles">
        <return-type type="const GList*" element_type="GstEncodingProfile*"/>
        <parameters/>
      </method>
      <method name="Save" cname="gst_encoding_target_save">
        <return-type type="gboolean"/>
        <parameters throws="1">
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="SaveToFile" cname="gst_encoding_target_save_to_file">
        <return-type type="gboolean"/>
        <parameters throws="1">
          <parameter name="filepath" type="const-gchar*"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
    </object>
    <object name="EncodingVideoProfile" cname="GstEncodingVideoProfile" abstract="false" opaque="false" hidden="false" parent="GstEncodingProfile">
      <class_struct cname="GstEncodingVideoProfileClass"/>
      <method name="GetType" cname="gst_encoding_video_profile_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gst_encoding_video_profile_new">
        <parameters>
          <parameter name="format" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="preset" type="const-gchar*"/>
          <parameter name="restriction" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="presence" type="guint"/>
        </parameters>
      </constructor>
      <method name="GetPass" cname="gst_encoding_video_profile_get_pass">
        <return-type type="guint"/>
        <parameters/>
      </method>
      <method name="GetVariableframerate" cname="gst_encoding_video_profile_get_variableframerate">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="SetPass" cname="gst_encoding_video_profile_set_pass">
        <return-type type="void"/>
        <parameters>
          <parameter name="pass" type="guint"/>
        </parameters>
      </method>
      <method name="SetVariableframerate" cname="gst_encoding_video_profile_set_variableframerate">
        <return-type type="void"/>
        <parameters>
          <parameter name="variableframerate" type="gboolean"/>
        </parameters>
      </method>
    </object>
    <struct name="DiscovererPrivate" cname="GstDiscovererPrivate" opaque="true" hidden="true"/>
    <boxed name="InstallPluginsContext" cname="GstInstallPluginsContext" opaque="false" hidden="false">
      <method name="GetType" cname="gst_install_plugins_context_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gst_install_plugins_context_new" disable_void_ctor=""/>
      <method name="Free" cname="gst_install_plugins_context_free">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="SetXid" cname="gst_install_plugins_context_set_xid">
        <return-type type="void"/>
        <parameters>
          <parameter name="xid" type="guint"/>
        </parameters>
      </method>
    </boxed>
    <object name="Global" cname="GstPbutilsGlobal" opaque="true">
      <method name="CodecUtilsAacCapsSetLevelAndProfile" cname="gst_codec_utils_aac_caps_set_level_and_profile" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="caps" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="audio_config" type="guint8"/>
          <parameter name="len" type="guint"/>
        </parameters>
      </method>
      <method name="CodecUtilsAacGetLevel" cname="gst_codec_utils_aac_get_level" shared="true">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="audio_config" type="guint8"/>
          <parameter name="len" type="guint"/>
        </parameters>
      </method>
      <method name="CodecUtilsAacGetProfile" cname="gst_codec_utils_aac_get_profile" shared="true">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="audio_config" type="guint8"/>
          <parameter name="len" type="guint"/>
        </parameters>
      </method>
      <method name="CodecUtilsAacGetSampleRateFromIndex" cname="gst_codec_utils_aac_get_sample_rate_from_index" shared="true">
        <return-type type="guint"/>
        <parameters>
          <parameter name="sr_idx" type="guint"/>
        </parameters>
      </method>
      <method name="CodecUtilsH264CapsSetLevelAndProfile" cname="gst_codec_utils_h264_caps_set_level_and_profile" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="caps" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="sps" type="guint8"/>
          <parameter name="len" type="guint"/>
        </parameters>
      </method>
      <method name="CodecUtilsH264GetLevel" cname="gst_codec_utils_h264_get_level" shared="true">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="sps" type="guint8"/>
          <parameter name="len" type="guint"/>
        </parameters>
      </method>
      <method name="CodecUtilsH264GetLevelIdc" cname="gst_codec_utils_h264_get_level_idc" shared="true">
        <return-type type="guint8"/>
        <parameters>
          <parameter name="level" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="CodecUtilsH264GetProfile" cname="gst_codec_utils_h264_get_profile" shared="true">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="sps" type="guint8"/>
          <parameter name="len" type="guint"/>
        </parameters>
      </method>
      <method name="CodecUtilsMpeg4videoCapsSetLevelAndProfile" cname="gst_codec_utils_mpeg4video_caps_set_level_and_profile" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="caps" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="vis_obj_seq" type="guint8"/>
          <parameter name="len" type="guint"/>
        </parameters>
      </method>
      <method name="CodecUtilsMpeg4videoGetLevel" cname="gst_codec_utils_mpeg4video_get_level" shared="true">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="vis_obj_seq" type="guint8"/>
          <parameter name="len" type="guint"/>
        </parameters>
      </method>
      <method name="CodecUtilsMpeg4videoGetProfile" cname="gst_codec_utils_mpeg4video_get_profile" shared="true">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="vis_obj_seq" type="guint8"/>
          <parameter name="len" type="guint"/>
        </parameters>
      </method>
      <method name="EncodingListAllTargets" cname="gst_encoding_list_all_targets" shared="true">
        <return-type type="GList*" element_type="GstEncodingTarget*" elements_owned="true" owned="true"/>
        <parameters>
          <parameter allow-none="1" name="categoryname" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="EncodingListAvailableCategories" cname="gst_encoding_list_available_categories" shared="true">
        <return-type type="GList*" element_type="gchar*" elements_owned="true" owned="true"/>
      </method>
      <method name="InstallPluginsAsync" cname="gst_install_plugins_async" shared="true">
        <return-type type="GstInstallPluginsReturn"/>
        <parameters>
          <parameter name="details" type="const-gchar**" array="true" null_term_array="true"/>
          <parameter allow-none="1" name="ctx" type="GstInstallPluginsContext*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter closure="3" scope="async" name="func" type="GstInstallPluginsResultFunc"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="InstallPluginsInstallationInProgress" cname="gst_install_plugins_installation_in_progress" shared="true">
        <return-type type="gboolean"/>
      </method>
      <method name="InstallPluginsReturnGetName" cname="gst_install_plugins_return_get_name" shared="true">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="_ret" type="GstInstallPluginsReturn"/>
        </parameters>
      </method>
      <method name="InstallPluginsSupported" cname="gst_install_plugins_supported" shared="true">
        <return-type type="gboolean"/>
      </method>
      <method name="InstallPluginsSync" cname="gst_install_plugins_sync" shared="true">
        <return-type type="GstInstallPluginsReturn"/>
        <parameters>
          <parameter name="details" type="const-gchar**" array="true" null_term_array="true"/>
          <parameter allow-none="1" name="ctx" type="GstInstallPluginsContext*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="IsMissingPluginMessage" cname="gst_is_missing_plugin_message" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="msg" type="GstMessage*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="MissingDecoderInstallerDetailNew" cname="gst_missing_decoder_installer_detail_new" shared="true">
        <return-type type="gchar*" owned="true"/>
        <parameters>
          <parameter name="decode_caps" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="MissingDecoderMessageNew" cname="gst_missing_decoder_message_new" shared="true">
        <return-type type="GstMessage*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="element" type="GstElement*"/>
          <parameter name="decode_caps" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="MissingElementInstallerDetailNew" cname="gst_missing_element_installer_detail_new" shared="true">
        <return-type type="gchar*" owned="true"/>
        <parameters>
          <parameter name="factory_name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="MissingElementMessageNew" cname="gst_missing_element_message_new" shared="true">
        <return-type type="GstMessage*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="element" type="GstElement*"/>
          <parameter name="factory_name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="MissingEncoderInstallerDetailNew" cname="gst_missing_encoder_installer_detail_new" shared="true">
        <return-type type="gchar*" owned="true"/>
        <parameters>
          <parameter name="encode_caps" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="MissingEncoderMessageNew" cname="gst_missing_encoder_message_new" shared="true">
        <return-type type="GstMessage*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="element" type="GstElement*"/>
          <parameter name="encode_caps" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="MissingPluginMessageGetDescription" cname="gst_missing_plugin_message_get_description" shared="true">
        <return-type type="gchar*" owned="true"/>
        <parameters>
          <parameter name="msg" type="GstMessage*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="MissingPluginMessageGetInstallerDetail" cname="gst_missing_plugin_message_get_installer_detail" shared="true">
        <return-type type="gchar*" owned="true"/>
        <parameters>
          <parameter name="msg" type="GstMessage*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="MissingUriSinkInstallerDetailNew" cname="gst_missing_uri_sink_installer_detail_new" shared="true">
        <return-type type="gchar*" owned="true"/>
        <parameters>
          <parameter name="protocol" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="MissingUriSinkMessageNew" cname="gst_missing_uri_sink_message_new" shared="true">
        <return-type type="GstMessage*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="element" type="GstElement*"/>
          <parameter name="protocol" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="MissingUriSourceInstallerDetailNew" cname="gst_missing_uri_source_installer_detail_new" shared="true">
        <return-type type="gchar*" owned="true"/>
        <parameters>
          <parameter name="protocol" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="MissingUriSourceMessageNew" cname="gst_missing_uri_source_message_new" shared="true">
        <return-type type="GstMessage*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="element" type="GstElement*"/>
          <parameter name="protocol" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="PbUtilsAddCodecDescriptionToTagList" cname="gst_pb_utils_add_codec_description_to_tag_list" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="taglist" type="GstTagList*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="codec_tag" type="const-gchar*"/>
          <parameter name="caps" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="PbUtilsGetCodecDescription" cname="gst_pb_utils_get_codec_description" shared="true">
        <return-type type="gchar*" owned="true"/>
        <parameters>
          <parameter name="caps" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="PbUtilsGetDecoderDescription" cname="gst_pb_utils_get_decoder_description" shared="true">
        <return-type type="gchar*" owned="true"/>
        <parameters>
          <parameter name="caps" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="PbUtilsGetElementDescription" cname="gst_pb_utils_get_element_description" shared="true">
        <return-type type="gchar*" owned="true"/>
        <parameters>
          <parameter name="factory_name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="PbUtilsGetEncoderDescription" cname="gst_pb_utils_get_encoder_description" shared="true">
        <return-type type="gchar*" owned="true"/>
        <parameters>
          <parameter name="caps" type="GstCaps*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="PbUtilsGetSinkDescription" cname="gst_pb_utils_get_sink_description" shared="true">
        <return-type type="gchar*" owned="true"/>
        <parameters>
          <parameter name="protocol" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="PbUtilsGetSourceDescription" cname="gst_pb_utils_get_source_description" shared="true">
        <return-type type="gchar*" owned="true"/>
        <parameters>
          <parameter name="protocol" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="PbUtilsInit" cname="gst_pb_utils_init" shared="true">
        <return-type type="void"/>
      </method>
      <method name="PluginsBaseVersion" cname="gst_plugins_base_version" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="major" type="guint*" owned="true" pass_as="out"/>
          <parameter name="minor" type="guint*" owned="true" pass_as="out"/>
          <parameter name="micro" type="guint*" owned="true" pass_as="out"/>
          <parameter name="nano" type="guint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="PluginsBaseVersionString" cname="gst_plugins_base_version_string" shared="true">
        <return-type type="gchar*" owned="true"/>
      </method>
    </object>
    <object name="Constants" cname="GstPbutilsConstants" opaque="true">
      <constant value="capture" ctype="gchar*" gtype="gchar*" name="ENCODING_CATEGORY_CAPTURE"/>
      <constant value="device" ctype="gchar*" gtype="gchar*" name="ENCODING_CATEGORY_DEVICE"/>
      <constant value="online-service" ctype="gchar*" gtype="gchar*" name="ENCODING_CATEGORY_ONLINE_SERVICE"/>
      <constant value="storage-editing" ctype="gchar*" gtype="gchar*" name="ENCODING_CATEGORY_STORAGE_EDITING"/>
      <constant value="1" ctype="gint" gtype="gint" name="PLUGINS_BASE_VERSION_MAJOR"/>
      <constant value="6" ctype="gint" gtype="gint" name="PLUGINS_BASE_VERSION_MICRO"/>
      <constant value="0" ctype="gint" gtype="gint" name="PLUGINS_BASE_VERSION_MINOR"/>
      <constant value="0" ctype="gint" gtype="gint" name="PLUGINS_BASE_VERSION_NANO"/>
    </object>
  </namespace>
</api>
